
R version 2.5.0 (2007-04-23)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEcon )
Loading required package: systemfit
> data( Blanciforti86 )
> options( digits = 3 )
> 
> set <- !is.na( Blanciforti86$pFood1 )
> setWo1 <- set & rownames( Blanciforti86 ) != 1947
> pNames <- c( "pFood1", "pFood2", "pFood3", "pFood4" )
> wNames <- c( "wFood1", "wFood2", "wFood3", "wFood4" )
> wMeans <- colMeans( Blanciforti86[ set, wNames ] )
> pMeans <- colMeans( Blanciforti86[ set, pNames ] )
> 
> cat( paste( "\nRepeating the demand analysis of Blanciforti, Green",
+    "& King (1986)\n" ) )

Repeating the demand analysis of Blanciforti, Green & King (1986)
> estResultLA <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], method = "LA:SL" )
> print( estResultLA )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> print( elas( estResultLA, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9726 -0.6586 -0.1801 -0.246
wFood2 -0.7746 -0.2699 -0.0546 -0.179
wFood3  0.0846  0.0862 -0.8165  0.203
wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2444  0.0959  0.482
wFood2 -0.377 -0.0127  0.1169  0.273
wFood3  0.222  0.1753 -0.7571  0.360
wFood4  0.423  0.1554  0.1363 -0.715
> # imposing restrictions via TX
> estResultLATX <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], method = "LA:SL",
+    TX = TRUE )
> print( estResultLATX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> print( elas( estResultLATX, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9726 -0.6586 -0.1801 -0.246
wFood2 -0.7746 -0.2699 -0.0546 -0.179
wFood3  0.0846  0.0862 -0.8165  0.203
wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2444  0.0959  0.482
wFood2 -0.377 -0.0127  0.1169  0.273
wFood3  0.222  0.1753 -0.7571  0.360
wFood4  0.423  0.1554  0.1363 -0.715
> estResultLATX$call <- NULL
> estResultLATX$est$bt <- NULL
> estResultLATX$est$btcov <- NULL
> estResultLATX$est$x <- NULL
> estResultLATX$est$TX <- NULL
> estResultLATX$est$q.restr <- NULL
> estResultLA$call <- NULL
> estResultLA$est$x <- NULL
> estResultLA$est$R.restr <- NULL
> estResultLA$est$q.restr <- NULL
> print( all.equal( estResultLA, estResultLATX ) )
[1] TRUE
> 
> ## only homogeneity (no symmetry imposed)
> estResultLAhom <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ set, ], method = "LA:SL" )
> print( estResultLAhom )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2600  0.0914  0.2441  0.9245 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3326  0.0656 -0.0653 -0.3329 
gamma
         pFood1  pFood2  pFood3    pFood4
wFood1  0.10972 -0.1210 -0.0458  0.056998
wFood2 -0.13009  0.1244  0.0312 -0.025525
wFood3 -0.00526 -0.0251  0.0312 -0.000772
wFood4  0.02563  0.0217 -0.0166 -0.030701
> print( elas( estResultLAhom, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0702 1.3262 0.5128 0.0593 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.980 -0.6046 -0.2908 -0.195
wFood2 -0.748 -0.4474  0.1112 -0.242
wFood3  0.112 -0.0893 -0.7023  0.167
wFood4  0.365  0.2505  0.0793 -0.754

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1880 -0.0131  0.537
wFood2 -0.336 -0.1805  0.2891  0.227
wFood3  0.272  0.0139 -0.6336  0.348
wFood4  0.383  0.2625  0.0872 -0.733
> # imposing restrictions via TX
> estResultLAhomTX <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ set, ], method = "LA:SL",
+    TX = TRUE )
> print( estResultLAhomTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2600  0.0914  0.2441  0.9245 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3326  0.0656 -0.0653 -0.3329 
gamma
         pFood1  pFood2  pFood3    pFood4
wFood1  0.10972 -0.1210 -0.0458  0.056998
wFood2 -0.13009  0.1244  0.0312 -0.025525
wFood3 -0.00526 -0.0251  0.0312 -0.000772
wFood4  0.02563  0.0217 -0.0166 -0.030701
> print( elas( estResultLAhomTX, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0702 1.3262 0.5128 0.0593 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.980 -0.6046 -0.2908 -0.195
wFood2 -0.748 -0.4474  0.1112 -0.242
wFood3  0.112 -0.0893 -0.7023  0.167
wFood4  0.365  0.2505  0.0793 -0.754

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1880 -0.0131  0.537
wFood2 -0.336 -0.1805  0.2891  0.227
wFood3  0.272  0.0139 -0.6336  0.348
wFood4  0.383  0.2625  0.0872 -0.733
> estResultLAhomTX$call <- NULL
> estResultLAhomTX$est$bt <- NULL
> estResultLAhomTX$est$btcov <- NULL
> estResultLAhomTX$est$x <- NULL
> estResultLAhomTX$est$TX <- NULL
> estResultLAhomTX$est$q.restr <- NULL
> estResultLAhom$call <- NULL
> estResultLAhom$est$x <- NULL
> estResultLAhom$est$R.restr <- NULL
> estResultLAhom$est$q.restr <- NULL
> print( all.equal( estResultLAhom, estResultLAhomTX ) )
[1] TRUE
> 
> ## unrestricted (no homogeneity and no symmetry imposed)
> estResultLAunr <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ set, ], method = "LA:SL" )
> print( estResultLAunr )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0755  0.1564  0.2428  0.6764 
beta
   wFood1    wFood2    wFood3    wFood4 
 0.147433  0.000476 -0.063987 -0.083922 
gamma
         pFood1  pFood2   pFood3   pFood4
wFood1  0.12013 -0.0454 -0.05451  0.01033
wFood2 -0.12643  0.1510  0.02811 -0.04195
wFood3 -0.00534 -0.0257  0.03122 -0.00043
wFood4  0.01163 -0.0799 -0.00482  0.03205
> print( elas( estResultLAunr, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.474  1.002  0.523  0.763 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.761 -0.2416 -0.2390 -0.135
wFood2 -0.629 -0.2501  0.1394 -0.209
wFood3  0.108 -0.0954 -0.7032  0.166
wFood4  0.107 -0.1781  0.0182 -0.826

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0551 -0.0413  0.387
wFood2 -0.317 -0.0484  0.2738  0.145
wFood3  0.271  0.0098 -0.6331  0.351
wFood4  0.344 -0.0246  0.1205 -0.556
> # imposing restrictions via TX
> estResultLAunrTX <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ set, ], method = "LA:SL",
+    TX = TRUE )
> print( estResultLAunrTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0755  0.1564  0.2428  0.6764 
beta
   wFood1    wFood2    wFood3    wFood4 
 0.147433  0.000476 -0.063987 -0.083922 
gamma
         pFood1  pFood2   pFood3   pFood4
wFood1  0.12013 -0.0454 -0.05451  0.01033
wFood2 -0.12643  0.1510  0.02811 -0.04195
wFood3 -0.00534 -0.0257  0.03122 -0.00043
wFood4  0.01163 -0.0799 -0.00482  0.03205
> print( elas( estResultLAunrTX, formula = "Ch", quantNames = wNames ) )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.474  1.002  0.523  0.763 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.761 -0.2416 -0.2390 -0.135
wFood2 -0.629 -0.2501  0.1394 -0.209
wFood3  0.108 -0.0954 -0.7032  0.166
wFood4  0.107 -0.1781  0.0182 -0.826

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0551 -0.0413  0.387
wFood2 -0.317 -0.0484  0.2738  0.145
wFood3  0.271  0.0098 -0.6331  0.351
wFood4  0.344 -0.0246  0.1205 -0.556
> estResultLAunrTX$call <- NULL
> estResultLAunrTX$est$bt <- NULL
> estResultLAunrTX$est$btcov <- NULL
> estResultLAunrTX$est$x <- NULL
> estResultLAunrTX$est$TX <- NULL
> estResultLAunrTX$est$q.restr <- NULL
> estResultLAunr$call <- NULL
> estResultLAunr$est$x <- NULL
> estResultLAunr$est$R.restr <- NULL
> estResultLAunr$est$q.restr <- NULL
> print( all.equal( estResultLAunr, estResultLAunrTX ) )
[1] TRUE
> 
> #####################################################
> cat( paste( "\nRepeating the evaluation of different elasticity formulas",
+    "of Green & Alston (1990): iterated AIDS\n" ) )

Repeating the evaluation of different elasticity formulas of Green & Alston (1990): iterated AIDS
> estResultAIDS <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ setWo1, ], method = "IL:L" )
> print( estResultAIDS )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.253  0.104  0.258  0.892 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3277  0.0595 -0.0728 -0.3144 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1 -0.0779 -0.17201  0.03040  0.2195
wFood2 -0.1720  0.15158  0.00312  0.0173
wFood3  0.0304  0.00312  0.00573 -0.0393
wFood4  0.2195  0.01731 -0.03926 -0.1975
> print( elas( estResultAIDS, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.054  1.296  0.458  0.112 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6616 -0.1729 -0.224
wFood2 -0.7831 -0.2772 -0.0604 -0.175
wFood3  0.0955  0.0789 -0.8180  0.186
wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.357 -0.2482  0.103  0.503
wFood2 -0.380 -0.0164  0.113  0.284
wFood3  0.238  0.1710 -0.757  0.348
wFood4  0.440  0.1625  0.132 -0.734
> # imposing restrictions via TX
> estResultAIDSTX <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ setWo1, ], method = "IL:L", TX = TRUE )
> print( estResultAIDSTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.253  0.104  0.258  0.892 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3277  0.0595 -0.0728 -0.3144 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1 -0.0779 -0.17201  0.03040  0.2195
wFood2 -0.1720  0.15158  0.00312  0.0173
wFood3  0.0304  0.00312  0.00573 -0.0393
wFood4  0.2195  0.01731 -0.03926 -0.1975
> print( elas( estResultAIDSTX, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.054  1.296  0.458  0.112 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6616 -0.1729 -0.224
wFood2 -0.7831 -0.2772 -0.0604 -0.175
wFood3  0.0955  0.0789 -0.8180  0.186
wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.357 -0.2482  0.103  0.503
wFood2 -0.380 -0.0164  0.113  0.284
wFood3  0.238  0.1710 -0.757  0.348
wFood4  0.440  0.1625  0.132 -0.734
> estResultAIDSTX$call <- NULL
> estResultAIDSTX$est$bt <- NULL
> estResultAIDSTX$est$btcov <- NULL
> estResultAIDSTX$est$x <- NULL
> estResultAIDSTX$est$TX <- NULL
> estResultAIDSTX$est$q.restr <- NULL
> estResultAIDS$call <- NULL
> estResultAIDS$est$x <- NULL
> estResultAIDS$est$R.restr <- NULL
> estResultAIDS$est$q.restr <- NULL
> print( all.equal( estResultAIDS, estResultAIDSTX ) )
[1] TRUE
> 
> ## only homogeneity (no symmetry imposed)
> estResultAIDShom <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL:L" )
> print( estResultAIDShom )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2615  0.0959  0.2502  0.9155 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3331  0.0630 -0.0688 -0.3273 
gamma
        pFood1  pFood2   pFood3  pFood4
wFood1 -0.0837 -0.1593 -0.00509  0.2481
wFood2 -0.1674  0.1186  0.03855  0.0103
wFood3  0.0337 -0.0155  0.02237 -0.0406
wFood4  0.2174  0.0562 -0.05583 -0.2178
> print( elas( estResultAIDShom, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.072  1.313  0.487  0.075 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -1.000 -0.6163 -0.2843 -0.171
wFood2 -0.753 -0.4409  0.1133 -0.232
wFood3  0.123 -0.0657 -0.7051  0.161
wFood4  0.382  0.2482  0.0734 -0.779

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.357 -0.1993 -0.00638  0.562
wFood2 -0.345 -0.1766  0.28944  0.233
wFood3  0.274  0.0324 -0.63973  0.333
wFood4  0.406  0.2633  0.08349 -0.752
> # imposing restrictions via TX
> estResultAIDShomTX <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL:L", TX = TRUE )
> print( estResultAIDShomTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2615  0.0959  0.2502  0.9155 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3331  0.0630 -0.0688 -0.3273 
gamma
        pFood1  pFood2   pFood3  pFood4
wFood1 -0.0837 -0.1593 -0.00509  0.2481
wFood2 -0.1674  0.1186  0.03855  0.0103
wFood3  0.0337 -0.0155  0.02237 -0.0406
wFood4  0.2174  0.0562 -0.05583 -0.2178
> print( elas( estResultAIDShomTX, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.072  1.313  0.487  0.075 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -1.000 -0.6163 -0.2843 -0.171
wFood2 -0.753 -0.4409  0.1133 -0.232
wFood3  0.123 -0.0657 -0.7051  0.161
wFood4  0.382  0.2482  0.0734 -0.779

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.357 -0.1993 -0.00638  0.562
wFood2 -0.345 -0.1766  0.28944  0.233
wFood3  0.274  0.0324 -0.63973  0.333
wFood4  0.406  0.2633  0.08349 -0.752
> estResultAIDShomTX$call <- NULL
> estResultAIDShomTX$est$bt <- NULL
> estResultAIDShomTX$est$btcov <- NULL
> estResultAIDShomTX$est$x <- NULL
> estResultAIDShomTX$est$TX <- NULL
> estResultAIDShomTX$est$q.restr <- NULL
> estResultAIDShom$call <- NULL
> estResultAIDShom$est$x <- NULL
> estResultAIDShom$est$R.restr <- NULL
> estResultAIDShom$est$q.restr <- NULL
> print( all.equal( estResultAIDShom, estResultAIDShomTX ) )
[1] TRUE
> 
> ## unrestricted (no homogeneity and no symmetry imposed)
> estResultAIDSunr <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL:L" )
> print( estResultAIDSunr )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0725  0.1627  0.2477  0.6621 
beta
  wFood1   wFood2   wFood3   wFood4 
 0.14260 -0.00453 -0.06679 -0.07129 
gamma
        pFood1  pFood2  pFood3  pFood4
wFood1  0.0746 -0.0461 -0.0389  0.0422
wFood2 -0.1253  0.1534  0.0272 -0.0440
wFood3  0.0157 -0.0231  0.0236 -0.0164
wFood4  0.0350 -0.0841 -0.0119  0.0182
> print( elas( estResultAIDSunr, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.459  0.977  0.502  0.799 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3  pFood4
wFood1 -0.792 -0.245 -0.2388 -0.0808
wFood2 -0.621 -0.233  0.1409 -0.2082
wFood3  0.152 -0.067 -0.7011  0.1127
wFood4  0.113 -0.195  0.0163 -0.8533

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.338  0.0483 -0.0431  0.435
wFood2 -0.317 -0.0366  0.2720  0.138
wFood3  0.308  0.0341 -0.6338  0.290
wFood4  0.361 -0.0346  0.1234 -0.571
> # imposing restrictions via TX
> estResultAIDSunrTX <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL:L", TX = TRUE )
> print( estResultAIDSunrTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0725  0.1627  0.2477  0.6621 
beta
  wFood1   wFood2   wFood3   wFood4 
 0.14260 -0.00453 -0.06679 -0.07129 
gamma
        pFood1  pFood2  pFood3  pFood4
wFood1  0.0746 -0.0461 -0.0389  0.0422
wFood2 -0.1253  0.1534  0.0272 -0.0440
wFood3  0.0157 -0.0231  0.0236 -0.0164
wFood4  0.0350 -0.0841 -0.0119  0.0182
> print( elas( estResultAIDSunrTX, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.459  0.977  0.502  0.799 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3  pFood4
wFood1 -0.792 -0.245 -0.2388 -0.0808
wFood2 -0.621 -0.233  0.1409 -0.2082
wFood3  0.152 -0.067 -0.7011  0.1127
wFood4  0.113 -0.195  0.0163 -0.8533

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.338  0.0483 -0.0431  0.435
wFood2 -0.317 -0.0366  0.2720  0.138
wFood3  0.308  0.0341 -0.6338  0.290
wFood4  0.361 -0.0346  0.1234 -0.571
> estResultAIDSunrTX$call <- NULL
> estResultAIDSunrTX$est$bt <- NULL
> estResultAIDSunrTX$est$btcov <- NULL
> estResultAIDSunrTX$est$x <- NULL
> estResultAIDSunrTX$est$TX <- NULL
> estResultAIDSunrTX$est$q.restr <- NULL
> estResultAIDSunr$call <- NULL
> estResultAIDSunr$est$x <- NULL
> estResultAIDSunr$est$R.restr <- NULL
> estResultAIDSunr$est$q.restr <- NULL
> print( all.equal( estResultAIDSunr, estResultAIDSunrTX ) )
[1] TRUE
> 
> ## with NAs
> estResultLaSNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86,
+    method = "LA:S" )
Warning message:
there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis in: aidsEst(pNames, wNames, "xFood", data = Blanciforti86, method = "LA:S") 
> print( estResultLaSNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.247  0.109  0.268  0.870 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3240  0.0559 -0.0786 -0.3012 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1  0.1042 -0.13988 -0.01156  0.0473
wFood2 -0.1399  0.15691  0.00347 -0.0205
wFood3 -0.0116  0.00347  0.01249 -0.0044
wFood4  0.0473 -0.02050 -0.00440 -0.0224
> print( elas( estResultLaSNa, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.044  1.279  0.414  0.152 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.409 -0.5619 -0.3176 -0.755
wFood2 -0.630 -0.2465 -0.0576 -0.345
wFood3 -0.229  0.0883 -0.7494  0.477
wFood4 -0.074  0.0326  0.2154 -0.326

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2249 -0.1524 -0.0435 -0.0288
wFood2 -0.2332  0.0097  0.1140  0.1096
wFood3 -0.1010  0.1712 -0.6939  0.6237
wFood4 -0.0268  0.0631  0.2358 -0.2721
> 
> estResultLaSlNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86,
+    method = "LA:SL" )
Warning message:
there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis in: aidsEst(pNames, wNames, "xFood", data = Blanciforti86, method = "LA:SL") 
> print( estResultLaSlNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> print( elas( estResultLaSlNa, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.377 -0.5591 -0.3153 -0.806
wFood2 -0.618 -0.2437 -0.0901 -0.326
wFood3 -0.229  0.0338 -0.7452  0.498
wFood4 -0.108  0.0480  0.2316 -0.295

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2622 -0.1449 -0.0393 -0.0778
wFood2 -0.2210  0.0135  0.0813  0.1263
wFood3 -0.0914  0.1229 -0.6859  0.6544
wFood4 -0.0698  0.0731  0.2483 -0.2515
> 
> estResultLaLNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86,
+    method = "LA:L" )
Warning message:
there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis in: aidsEst(pNames, wNames, "xFood", data = Blanciforti86, method = "LA:L") 
> print( estResultLaLNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Laspeyres Index (L)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.248  0.123  0.273  0.852 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3251  0.0481 -0.0816 -0.2917 
gamma
         pFood1   pFood2   pFood3  pFood4
wFood1  0.09104 -0.14571 -0.00963  0.0643
wFood2 -0.14571  0.15852  0.00594 -0.0188
wFood3 -0.00963  0.00594  0.01289 -0.0092
wFood4  0.06431 -0.01875 -0.00920 -0.0364
> print( elas( estResultLaLNa, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.048  1.240  0.392  0.179 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.4507 -0.5953 -0.3172 -0.684
wFood2 -0.6687 -0.2376 -0.0359 -0.298
wFood3 -0.2204  0.1173 -0.7378  0.449
wFood4 -0.0196  0.0459  0.1984 -0.404

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1848 -0.1851 -0.0425  0.0431
wFood2 -0.2838  0.0109  0.1304  0.1426
wFood3 -0.0987  0.1959 -0.6852  0.5881
wFood4  0.0360  0.0817  0.2224 -0.3400
> 
> estResultAIDSNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86, method = "IL:L" )
Warning message:
there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis in: aidsEst(pNames, wNames, "xFood", data = Blanciforti86, method = "IL:L") 
> print( estResultAIDSNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL) starting with Laspeyres Index (L)
Estimated Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.259  0.124  0.273  0.862 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3306  0.0469 -0.0811 -0.2964 
gamma
        pFood1   pFood2   pFood3   pFood4
wFood1 -0.0855 -0.16994  0.03469  0.22072
wFood2 -0.1699  0.15613  0.01104  0.00277
wFood3  0.0347  0.01104  0.00134 -0.04707
wFood4  0.2207  0.00277 -0.04707 -0.17643
> print( elas( estResultAIDSNa, formula = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.065  1.234  0.395  0.166 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2   pFood3 pFood4
wFood1 -1.012 -0.678 -0.17676 -0.198
wFood2 -0.790 -0.250 -0.00839 -0.186
wFood3  0.109  0.157 -0.82620  0.165
wFood4  0.415  0.110  0.09354 -0.784

Hicksian (compensated) Price Elasticities
       pFood1   pFood2 pFood3 pFood4
wFood1 -0.371 -0.26473  0.100  0.535
wFood2 -0.407 -0.00221  0.157  0.252
wFood3  0.232  0.23583 -0.773  0.306
wFood4  0.466  0.14356  0.116 -0.725
> 
> 
> ########## Elasticities ###############
> cat( "\nAIDS: Elasticities\n" )

AIDS: Elasticities
> wMeans <- colMeans( Blanciforti86[ set, wNames ] )
> ela <- aidsElas( estResultAIDS$coef, wMeans, pMeans, formula = "AIDS" )
> print( ela )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.056    1.297    0.458    0.115 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9954 -0.6622 -0.1731 -0.225
q_wFood2 -0.7867 -0.2738 -0.0607 -0.176
q_wFood3  0.0954  0.0787 -0.8180  0.186
q_wFood4  0.4036  0.1392  0.1168 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2503  0.103  0.505
q_wFood2 -0.384 -0.0139  0.113  0.285
q_wFood3  0.237  0.1704 -0.757  0.349
q_wFood4  0.439  0.1623  0.132 -0.734
> elaTX <- aidsElas( estResultAIDSTX$coef, wMeans, pMeans, formula = "AIDS" )
> print( elaTX )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.056    1.297    0.458    0.115 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9954 -0.6622 -0.1731 -0.225
q_wFood2 -0.7867 -0.2738 -0.0607 -0.176
q_wFood3  0.0954  0.0787 -0.8180  0.186
q_wFood4  0.4036  0.1392  0.1168 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2503  0.103  0.505
q_wFood2 -0.384 -0.0139  0.113  0.285
q_wFood3  0.237  0.1704 -0.757  0.349
q_wFood4  0.439  0.1623  0.132 -0.734
> print( all.equal( ela, elaTX ) )
[1] TRUE
> 
> 
> cat( "\nLA: Elasticity formula of non-linear AIDS\n" )

LA: Elasticity formula of non-linear AIDS
> wMeans <- colMeans( Blanciforti86[ set, wNames ] )
> ela <- aidsElas( estResultLA$coef, wMeans, pMeans, formula = "AIDS" )
> print( ela )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5595 -0.3157 -0.807
q_wFood2 -0.621 -0.2402 -0.0905 -0.328
q_wFood3 -0.229  0.0337 -0.7453  0.498
q_wFood4 -0.108  0.0476  0.2307 -0.298

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2623 -0.1470 -0.0395 -0.0756
q_wFood2 -0.2240  0.0161  0.0811  0.1270
q_wFood3 -0.0915  0.1224 -0.6859  0.6550
q_wFood4 -0.0682  0.0732  0.2478 -0.2528
> elaTX <- aidsElas( estResultLATX$coef, wMeans, pMeans, formula = "AIDS" )
> print( elaTX )

Demand Elasticities (original AIDS formula)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5595 -0.3157 -0.807
q_wFood2 -0.621 -0.2402 -0.0905 -0.328
q_wFood3 -0.229  0.0337 -0.7453  0.498
q_wFood4 -0.108  0.0476  0.2307 -0.298

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2623 -0.1470 -0.0395 -0.0756
q_wFood2 -0.2240  0.0161  0.0811  0.1270
q_wFood3 -0.0915  0.1224 -0.6859  0.6550
q_wFood4 -0.0682  0.0732  0.2478 -0.2528
> print( all.equal( ela, elaTX ) )
[1] TRUE
> 
> cat( "\n********** Elasticities ***************" )

********** Elasticities ***************> cat( "\nLA: Elasticity formula of Chalfant / Goddard\n" )

LA: Elasticity formula of Chalfant / Goddard
> ela <- aidsElas( estResultLA$coef, wMeans, formula = "Ch" )
> print( ela )

Demand Elasticities (formula of Chalfant / Goddard)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9722 -0.6584 -0.1803 -0.248
q_wFood2 -0.7780 -0.2663 -0.0548 -0.180
q_wFood3  0.0844  0.0857 -0.8165  0.204
q_wFood4  0.3826  0.1291  0.1192 -0.758

Hicksian (compensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.246  0.0958  0.483
q_wFood2 -0.381 -0.010  0.1168  0.274
q_wFood3  0.222  0.174 -0.7571  0.361
q_wFood4  0.422  0.155  0.1363 -0.713
> 
> cat( "\nLA: Elasticity formula of Eales + Unnevehr\n" )

LA: Elasticity formula of Eales + Unnevehr
> wMeans <- colMeans( Blanciforti86[ set, wNames ] )
> ela <- aidsElas( estResultLA$coef, wMeans, formula = "EU" )
> print( ela )

Demand Elasticities (formula of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2   pFood3   pFood4
q_wFood1 -0.6435 -0.4463 -0.03828  0.12801
q_wFood2 -0.6914 -0.2103 -0.01735 -0.08094
q_wFood3 -0.0886 -0.0259 -0.89123  0.00573
q_wFood4  0.1118 -0.0456  0.00216 -1.06836

Hicksian (compensated) Price Elasticities
           pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.00439 -0.0338  0.2379  0.859
q_wFood2 -0.29432  0.0459  0.1542  0.374
q_wFood3  0.04884  0.0628 -0.8318  0.163
q_wFood4  0.15146 -0.0201  0.0193 -1.023
> 
> 
> ############# Price indices ##############
> options( digits = 5 )
> cat( "\n************** Price indices **************\n" )

************** Price indices **************
> cat( "\nStone index\n" )

Stone index
> pxS <- aidsPx( "S", pNames, wNames, Blanciforti86 )
> print( pxS )
 [1] 4.0453 4.1253 4.0850 4.1068 4.2053 4.2255 4.2187 4.2221 4.2000 4.2050
[11] 4.2372 4.2728 4.2551 4.2663 4.2815 4.2884 4.3078 4.3188 4.3374 4.3881
[21] 4.4015 4.4357 4.4797 4.5305 4.5703 4.6052 4.7429 4.8765 4.9622 4.9943
[31] 5.0585 5.1532     NA     NA     NA
> 
> cat( "\nStone index with lagged shares\n" )

Stone index with lagged shares
> pxSL <- aidsPx( "SL", pNames, wNames, Blanciforti86 )
> print( pxSL )
 [1]     NA 4.1280 4.0861 4.1003 4.2153 4.2211 4.2183 4.2186 4.2042 4.2038
[11] 4.2377 4.2727 4.2549 4.2663 4.2816 4.2885 4.3035 4.3226 4.3376 4.3886
[21] 4.3964 4.4358 4.4845 4.5351 4.5619 4.6098 4.7409 4.8760 4.9610 5.0007
[31] 5.0565 5.1498     NA     NA     NA
> 
> cat( "\nPaasche index\n" )

Paasche index
> pxP <- aidsPx( "P", pNames, wNames, Blanciforti86 )
> print( pxP )
 [1] 0.000000 0.083512 0.044760 0.061564 0.168431 0.184889 0.177701 0.177342
 [9] 0.160284 0.165760 0.198634 0.233756 0.216878 0.228398 0.243559 0.250609
[17] 0.265651 0.281360 0.299877 0.348917 0.359147 0.393046 0.439949 0.494065
[25] 0.527593 0.564467 0.701564 0.836062 0.923102 0.958894 1.024138 1.114765
[33]       NA       NA       NA
> 
> cat( "\nLaspeyres index\n" )

Laspeyres index
> pxL <- aidsPx( "L", pNames, wNames, Blanciforti86 )
> print( pxL )
 [1] 4.0453 4.1280 4.0892 4.1045 4.2133 4.2289 4.2239 4.2245 4.2073 4.2106
[11] 4.2443 4.2769 4.2594 4.2707 4.2868 4.2932 4.3065 4.3210 4.3399 4.3923
[21] 4.4030 4.4357 4.4857 4.5429 4.5750 4.6098 4.7374 4.8813 4.9690 5.0129
[31] 5.0817 5.1668     NA     NA     NA
> 
> cat( "\nTornqvist index\n" )

Tornqvist index
> pxT <- aidsPx( "T", pNames, wNames, Blanciforti86 )
> print( pxT )
 [1] 0.000000 0.083092 0.044319 0.060364 0.168221 0.184263 0.178128 0.178274
 [9] 0.161126 0.165537 0.198788 0.232696 0.215461 0.226871 0.242525 0.249244
[17] 0.263432 0.278527 0.297256 0.347963 0.358424 0.391724 0.440184 0.495828
[25] 0.528650 0.564467 0.696816 0.836045 0.923408 0.963260 1.030242 1.118122
[33]       NA       NA       NA
> 
> cat( "\nTranslog index\n" )

Translog index
> pxTL <- aidsPx( "TL", pNames, wNames, Blanciforti86,
+    coef = estResultLA$coef )
> print( pxTL )
 [1] 4.0181 4.0769 4.0359 4.0435 4.1570 4.1705 4.2183 4.2387 4.2513 4.2870
[11] 4.2872 4.2582 4.2588 4.2883 4.3193 4.3088 4.3373 4.3742 4.3577 4.3902
[21] 4.4379 4.4704 4.5018 4.5715 4.6248 4.6052 4.6426 4.8924 4.9988 5.0830
[31] 5.2161 5.2321     NA     NA     NA
> 
> ########### fitted values #################
> options( digits = 3 )
> fittedAIDS <- aidsCalc( pNames, "xFood", Blanciforti86[ -1, ],
+    coef = estResultAIDS$coef )
> print( fittedAIDS )
$shares
        w1    w2    w3    w4
1948 0.318 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.372
1950 0.314 0.170 0.137 0.379
1951 0.315 0.166 0.137 0.382
1952 0.304 0.183 0.136 0.377
1953 0.307 0.185 0.137 0.372
1954 0.300 0.183 0.139 0.378
1955 0.300 0.196 0.138 0.366
1956 0.294 0.210 0.137 0.359
1957 0.299 0.198 0.138 0.366
1958 0.294 0.195 0.138 0.373
1959 0.301 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.358
1961 0.299 0.206 0.136 0.359
1962 0.304 0.204 0.136 0.356
1963 0.298 0.215 0.135 0.352
1964 0.294 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.314 0.206 0.133 0.347
1967 0.318 0.210 0.132 0.339
1968 0.315 0.219 0.131 0.335
1969 0.324 0.209 0.130 0.337
1970 0.328 0.207 0.130 0.335
1971 0.319 0.213 0.131 0.337
1972 0.327 0.209 0.129 0.335
1973 0.335 0.197 0.127 0.340
1974 0.318 0.213 0.131 0.337
1975 0.324 0.204 0.133 0.340
1976 0.330 0.207 0.131 0.332
1977 0.312 0.217 0.133 0.337
1978 0.318 0.213 0.132 0.338
1979    NA    NA    NA    NA
1980    NA    NA    NA    NA
1981    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 1.020 0.769 1.96
1949 1.52 1.033 0.748 2.00
1950 1.48 0.993 0.741 2.00
1951 1.47 0.980 0.752 1.97
1952 1.47 1.009 0.751 2.00
1953 1.56 1.055 0.738 1.90
1954 1.52 1.036 0.715 1.87
1955 1.63 1.103 0.706 1.84
1956 1.70 1.148 0.704 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.050 0.701 1.98
1959 1.62 1.105 0.695 1.97
1960 1.68 1.133 0.694 1.95
1961 1.68 1.133 0.689 1.91
1962 1.70 1.143 0.684 1.96
1963 1.73 1.164 0.688 1.95
1964 1.77 1.185 0.697 1.91
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.708 1.92
1968 1.93 1.243 0.731 1.92
1969 1.92 1.231 0.743 1.93
1970 1.96 1.246 0.747 1.90
1971 1.94 1.244 0.736 1.87
1972 1.92 1.226 0.758 1.97
1973 1.79 1.161 0.768 2.15
1974 1.90 1.232 0.694 2.00
1975 1.92 1.233 0.679 1.96
1976 2.05 1.281 0.723 1.82
1977 2.01 1.271 0.746 1.66
1978 1.94 1.242 0.751 1.81
1979   NA    NA    NA   NA
1980   NA    NA    NA   NA
1981   NA    NA    NA   NA

> if( max( abs( fittedAIDS$shares[ !is.na( fittedAIDS$shares ) ] -
+    estResultAIDS$wFitted ) ) > 1e-5 ) {
+    stop( "fitted shares of AIDS are wrong" )
+ }
> if( max( abs( fittedAIDS$quant[ !is.na( fittedAIDS$quant ) ] -
+    estResultAIDS$qFitted ) ) > 1e-5 ) {
+    stop( "fitted quantities of AIDS are wrong" )
+ }
> fittedAIDSTX <- aidsCalc( pNames, "xFood", Blanciforti86[ -1, ],
+    coef = estResultAIDSTX$coef )
> print( fittedAIDSTX )
$shares
        w1    w2    w3    w4
1948 0.318 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.372
1950 0.314 0.170 0.137 0.379
1951 0.315 0.166 0.137 0.382
1952 0.304 0.183 0.136 0.377
1953 0.307 0.185 0.137 0.372
1954 0.300 0.183 0.139 0.378
1955 0.300 0.196 0.138 0.366
1956 0.294 0.210 0.137 0.359
1957 0.299 0.198 0.138 0.366
1958 0.294 0.195 0.138 0.373
1959 0.301 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.358
1961 0.299 0.206 0.136 0.359
1962 0.304 0.204 0.136 0.356
1963 0.298 0.215 0.135 0.352
1964 0.294 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.314 0.206 0.133 0.347
1967 0.318 0.210 0.132 0.339
1968 0.315 0.219 0.131 0.335
1969 0.324 0.209 0.130 0.337
1970 0.328 0.207 0.130 0.335
1971 0.319 0.213 0.131 0.337
1972 0.327 0.209 0.129 0.335
1973 0.335 0.197 0.127 0.340
1974 0.318 0.213 0.131 0.337
1975 0.324 0.204 0.133 0.340
1976 0.330 0.207 0.131 0.332
1977 0.312 0.217 0.133 0.337
1978 0.318 0.213 0.132 0.338
1979    NA    NA    NA    NA
1980    NA    NA    NA    NA
1981    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 1.020 0.769 1.96
1949 1.52 1.033 0.748 2.00
1950 1.48 0.993 0.741 2.00
1951 1.47 0.980 0.752 1.97
1952 1.47 1.009 0.751 2.00
1953 1.56 1.055 0.738 1.90
1954 1.52 1.036 0.715 1.87
1955 1.63 1.103 0.706 1.84
1956 1.70 1.148 0.704 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.050 0.701 1.98
1959 1.62 1.105 0.695 1.97
1960 1.68 1.133 0.694 1.95
1961 1.68 1.133 0.689 1.91
1962 1.70 1.143 0.684 1.96
1963 1.73 1.164 0.688 1.95
1964 1.77 1.185 0.697 1.91
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.708 1.92
1968 1.93 1.243 0.731 1.92
1969 1.92 1.231 0.743 1.93
1970 1.96 1.246 0.747 1.90
1971 1.94 1.244 0.736 1.87
1972 1.92 1.226 0.758 1.97
1973 1.79 1.161 0.768 2.15
1974 1.90 1.232 0.694 2.00
1975 1.92 1.233 0.679 1.96
1976 2.05 1.281 0.723 1.82
1977 2.01 1.271 0.746 1.66
1978 1.94 1.242 0.751 1.81
1979   NA    NA    NA   NA
1980   NA    NA    NA   NA
1981   NA    NA    NA   NA

> print( all.equal( fittedAIDS, fittedAIDSTX ) )
[1] TRUE
> 
> fittedLA <- aidsCalc( pNames, "xFood", Blanciforti86[ set, ],
+    coef = estResultLA$coef, lnp = estResultLA$lnp )
> print( fittedLA )
$shares
        w1    w2    w3    w4
1947    NA    NA    NA    NA
1948 0.317 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.371
1950 0.315 0.170 0.136 0.378
1951 0.314 0.165 0.137 0.383
1952 0.306 0.183 0.136 0.375
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.298 0.196 0.138 0.368
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.352
1964 0.292 0.223 0.135 0.350
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.319 0.210 0.132 0.339
1968 0.313 0.219 0.131 0.336
1969 0.323 0.209 0.130 0.338
1970 0.328 0.207 0.130 0.335
1971 0.321 0.213 0.131 0.335
1972 0.326 0.209 0.129 0.337
1973 0.334 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.313 0.218 0.133 0.336
1978 0.320 0.213 0.131 0.336

$quant
       q1    q2    q3   q4
1947   NA    NA    NA   NA
1948 1.53 1.019 0.770 1.97
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.46 0.979 0.754 1.97
1952 1.48 1.011 0.748 1.99
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.87
1955 1.62 1.102 0.708 1.85
1956 1.69 1.147 0.706 1.81
1957 1.63 1.105 0.698 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.184 0.699 1.92
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.92 1.241 0.732 1.93
1969 1.92 1.229 0.744 1.94
1970 1.97 1.245 0.746 1.90
1971 1.95 1.245 0.733 1.86
1972 1.91 1.224 0.759 1.98
1973 1.79 1.158 0.769 2.16
1974 1.91 1.233 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.01 1.271 0.744 1.66
1978 1.96 1.243 0.749 1.80

> if( max( abs( fittedLA$shares[ -1, ] - estResultLA$wFitted[ setWo1, ] ),
+       na.rm = TRUE ) > 1e-5 ) {
+    stop( "fitted shares of LA-AIDS are wrong" )
+ }
> if( max( abs( fittedLA$quant[ -1, ] - estResultLA$qFitted[ setWo1, ] ),
+       na.rm = TRUE ) > 1e-5 ) {
+    stop( "fitted quantities of LA-AIDS are wrong" )
+ }
> fittedLATX <- aidsCalc( pNames, "xFood", Blanciforti86[ set, ],
+    coef = estResultLATX$coef, lnp = estResultLATX$lnp )
> print( fittedLATX )
$shares
        w1    w2    w3    w4
1947    NA    NA    NA    NA
1948 0.317 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.371
1950 0.315 0.170 0.136 0.378
1951 0.314 0.165 0.137 0.383
1952 0.306 0.183 0.136 0.375
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.298 0.196 0.138 0.368
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.352
1964 0.292 0.223 0.135 0.350
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.319 0.210 0.132 0.339
1968 0.313 0.219 0.131 0.336
1969 0.323 0.209 0.130 0.338
1970 0.328 0.207 0.130 0.335
1971 0.321 0.213 0.131 0.335
1972 0.326 0.209 0.129 0.337
1973 0.334 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.313 0.218 0.133 0.336
1978 0.320 0.213 0.131 0.336

$quant
       q1    q2    q3   q4
1947   NA    NA    NA   NA
1948 1.53 1.019 0.770 1.97
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.46 0.979 0.754 1.97
1952 1.48 1.011 0.748 1.99
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.87
1955 1.62 1.102 0.708 1.85
1956 1.69 1.147 0.706 1.81
1957 1.63 1.105 0.698 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.184 0.699 1.92
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.92 1.241 0.732 1.93
1969 1.92 1.229 0.744 1.94
1970 1.97 1.245 0.746 1.90
1971 1.95 1.245 0.733 1.86
1972 1.91 1.224 0.759 1.98
1973 1.79 1.158 0.769 2.16
1974 1.91 1.233 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.01 1.271 0.744 1.66
1978 1.96 1.243 0.749 1.80

> print( all.equal( fittedLA, fittedLATX ) )
[1] TRUE
> 
> ####### consistency ###################
> consist <- aidsTestConsist( pNames, wNames, "xFood", Blanciforti86[ set, ],
+    coef = estResultAIDS$coef )
> print( consist )

Tests for theoretical consistency of an estimated Almost Ideal Demand System (AIDS):
Observation where monotonicity is fulfilled: 100 %
Observation where concavity is fulfilled: 0 %
> class( consist ) <- NULL
> print( consist )
$mPercent
[1] 100

$monotony
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE

$cPercent
[1] 0

$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$cMatrices
$cMatrices[[1]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1024 -0.0872  0.0293  0.1606
wFood2 -0.0872  0.0153  0.0187  0.0534
wFood3  0.0293  0.0187 -0.1012  0.0533
wFood4  0.1606  0.0534  0.0533 -0.2669

$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0892  0.0317  0.1638
wFood2 -0.0892  0.0219  0.0181  0.0493
wFood3  0.0317  0.0181 -0.1042  0.0544
wFood4  0.1638  0.0493  0.0544 -0.2674

$cMatrices[[3]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1035 -0.0866  0.0324  0.1578
wFood2 -0.0866  0.0146  0.0204  0.0516
wFood3  0.0324  0.0204 -0.1077  0.0549
wFood4  0.1578  0.0516  0.0549 -0.2643

$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1111 -0.0855  0.0347  0.1621
wFood2 -0.0855  0.0179  0.0196  0.0482
wFood3  0.0347  0.0196 -0.1071  0.0529
wFood4  0.1621  0.0482  0.0529 -0.2629

$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1084 -0.0860  0.0323  0.1619
wFood2 -0.0860  0.0145  0.0197  0.0517
wFood3  0.0323  0.0197 -0.1043  0.0522
wFood4  0.1619  0.0517  0.0522 -0.2662

$cMatrices[[6]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1088 -0.08148  0.0317  0.1586
wFood2 -0.0815  0.00748  0.0206  0.0534
wFood3  0.0317  0.02056 -0.1020  0.0498
wFood4  0.1586  0.05343  0.0498 -0.2618

$cMatrices[[7]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1152 -0.08283  0.0329  0.1651
wFood2 -0.0828  0.00922  0.0202  0.0534
wFood3  0.0329  0.02019 -0.1015  0.0484
wFood4  0.1651  0.05343  0.0484 -0.2669

$cMatrices[[8]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1211 -0.08158  0.0344  0.1686
wFood2 -0.0816  0.00589  0.0211  0.0548
wFood3  0.0344  0.02106 -0.1018  0.0464
wFood4  0.1686  0.05482  0.0464 -0.2695

$cMatrices[[9]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1159 -0.081476  0.0323  0.1651
wFood2 -0.0815  0.000317  0.0221  0.0591
wFood3  0.0323  0.022072 -0.1010  0.0467
wFood4  0.1651  0.059088  0.0467 -0.2709

$cMatrices[[10]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1133 -0.08250  0.0309  0.1649
wFood2 -0.0825 -0.00277  0.0226  0.0627
wFood3  0.0309  0.02261 -0.1004  0.0469
wFood4  0.1649  0.06265  0.0469 -0.2744

$cMatrices[[11]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1136 -0.0806  0.0333  0.1609
wFood2 -0.0806 -0.0033  0.0241  0.0598
wFood3  0.0333  0.0241 -0.1054  0.0480
wFood4  0.1609  0.0598  0.0480 -0.2688

$cMatrices[[12]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1107 -0.07789  0.0322  0.1565
wFood2 -0.0779 -0.00310  0.0232  0.0578
wFood3  0.0322  0.02322 -0.1029  0.0475
wFood4  0.1565  0.05778  0.0475 -0.2618

$cMatrices[[13]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1080 -0.07729  0.0326  0.1528
wFood2 -0.0773 -0.00544  0.0245  0.0582
wFood3  0.0326  0.02453 -0.1058  0.0486
wFood4  0.1528  0.05819  0.0486 -0.2596

$cMatrices[[14]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1049 -0.07746  0.0302  0.1521
wFood2 -0.0775 -0.00955  0.0247  0.0623
wFood3  0.0302  0.02470 -0.1029  0.0480
wFood4  0.1521  0.06230  0.0480 -0.2624

$cMatrices[[15]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07791  0.0305  0.1548
wFood2 -0.0779 -0.00963  0.0246  0.0629
wFood3  0.0305  0.02459 -0.1023  0.0472
wFood4  0.1548  0.06295  0.0472 -0.2650

$cMatrices[[16]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1051 -0.0758  0.0301  0.1508
wFood2 -0.0758 -0.0112  0.0249  0.0621
wFood3  0.0301  0.0249 -0.1021  0.0472
wFood4  0.1508  0.0621  0.0472 -0.2601

$cMatrices[[17]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1058 -0.07677  0.0303  0.1526
wFood2 -0.0768 -0.00954  0.0245  0.0620
wFood3  0.0303  0.02448 -0.1022  0.0476
wFood4  0.1526  0.06204  0.0476 -0.2619

$cMatrices[[18]]
       pFood1  pFood2  pFood3  pFood4
wFood1 -0.107 -0.0761  0.0310  0.1519
wFood2 -0.076 -0.0125  0.0257  0.0629
wFood3  0.031  0.0257 -0.1037  0.0471
wFood4  0.152  0.0629  0.0471 -0.2618

$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1033 -0.0748  0.0303  0.1478
wFood2 -0.0748 -0.0117  0.0253  0.0612
wFood3  0.0303  0.0253 -0.1035  0.0478
wFood4  0.1478  0.0612  0.0478 -0.2568

$cMatrices[[20]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1062 -0.07262  0.0292  0.1496
wFood2 -0.0726 -0.00877  0.0228  0.0585
wFood3  0.0292  0.02284 -0.0975  0.0454
wFood4  0.1496  0.05854  0.0454 -0.2535

$cMatrices[[21]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1066 -0.07378  0.0312  0.1494
wFood2 -0.0738 -0.00942  0.0245  0.0589
wFood3  0.0312  0.02455 -0.1027  0.0471
wFood4  0.1494  0.05887  0.0471 -0.2550

$cMatrices[[22]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1053 -0.07354  0.0300  0.1491
wFood2 -0.0735 -0.00937  0.0239  0.0593
wFood3  0.0300  0.02386 -0.1005  0.0467
wFood4  0.1491  0.05927  0.0467 -0.2547

$cMatrices[[23]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07180  0.0292  0.1501
wFood2 -0.0718 -0.00757  0.0221  0.0572
wFood3  0.0292  0.02212 -0.0959  0.0446
wFood4  0.1501  0.05725  0.0446 -0.2520

$cMatrices[[24]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1104 -0.07193  0.0288  0.1533
wFood2 -0.0719 -0.00585  0.0210  0.0566
wFood3  0.0288  0.02096 -0.0930  0.0431
wFood4  0.1533  0.05661  0.0431 -0.2533

$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1146 -0.0696  0.0337  0.1508
wFood2 -0.0696 -0.0106  0.0247  0.0557
wFood3  0.0337  0.0247 -0.1021  0.0439
wFood4  0.1508  0.0557  0.0439 -0.2501

$cMatrices[[26]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.06928  0.0309  0.1493
wFood2 -0.0693 -0.00394  0.0212  0.0520
wFood3  0.0309  0.02124 -0.0958  0.0437
wFood4  0.1493  0.05199  0.0437 -0.2450

$cMatrices[[27]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1041 -0.06421  0.0286  0.1396
wFood2 -0.0642 -0.00477  0.0202  0.0487
wFood3  0.0286  0.02024 -0.0922  0.0434
wFood4  0.1396  0.04875  0.0434 -0.2317

$cMatrices[[28]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.07145  0.0308  0.1515
wFood2 -0.0714 -0.00342  0.0214  0.0535
wFood3  0.0308  0.02140 -0.0966  0.0444
wFood4  0.1515  0.05347  0.0444 -0.2494

$cMatrices[[29]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1124 -0.07240  0.0342  0.1507
wFood2 -0.0724 -0.00472  0.0238  0.0533
wFood3  0.0342  0.02383 -0.1041  0.0461
wFood4  0.1507  0.05329  0.0461 -0.2501

$cMatrices[[30]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1182 -0.07026  0.0345  0.1536
wFood2 -0.0703 -0.00718  0.0237  0.0535
wFood3  0.0345  0.02369 -0.1014  0.0430
wFood4  0.1536  0.05355  0.0430 -0.2505

$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1243 -0.0724  0.0355  0.1609
wFood2 -0.0724 -0.0121  0.0254  0.0589
wFood3  0.0355  0.0254 -0.1026  0.0416
wFood4  0.1609  0.0589  0.0416 -0.2617

$cMatrices[[32]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1188 -0.0659  0.0335  0.1512
wFood2 -0.0659 -0.0163  0.0252  0.0570
wFood3  0.0335  0.0252 -0.0993  0.0405
wFood4  0.1512  0.0570  0.0405 -0.2487


> 
> 
