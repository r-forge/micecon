
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEcon )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'


	The following object(s) are masked from package:stats :

	 xtabs 


	The following object(s) are masked from package:base :

	 rcond 

Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-2)
> 
> 
> ## matrix
> m <- matrix( 1:24, nrow = 6, ncol = 4 )
> 
> cm1 <- colMedians( m )
> print( cm1 )
[1]  3.5  9.5 15.5 21.5
> 
> rm1 <- rowMedians( m )
> print( rm1 )
[1] 10 11 12 13 14 15
> 
> all.equal( cm1, rowMedians( t( m ) ) )
[1] TRUE
> all.equal( rm1, colMedians( t( m ) ) )
[1] TRUE
> 
> 
> ## data.frame
> data( germanFarms )
> 
> cm2 <- colMedians( germanFarms[ , -1 ] )
> print( cm2 )
       vCrop      vAnimal      vOutput    vVarInput       qLabor       pLabor 
 31067.10000 106288.10000 137031.85000  73459.23500      1.53000  19594.79000 
     pOutput    pVarInput         land 
    98.13398    107.35075     26.42000 
> 
> rm2 <- rowMedians( germanFarms[ , -1 ] )
> print( rm2 )
       1        2        3        4        5        6        7        8 
 8287.50 14036.00 18444.88 15863.74 16329.89 16904.10 18655.20 19347.65 
       9       10       11       12       13       14       15       16 
18381.40 19813.20 19376.38 21193.48 22059.82 21801.41 22514.29 24972.67 
      17       18       19       20 
27018.33 26879.33 28604.33 31293.17 
> 
> all.equal( cm2, rowMedians( t( germanFarms[ , -1 ] ) ) )
[1] TRUE
> all.equal( rm2, colMedians( t( germanFarms[ , -1 ] ) ) )
[1] TRUE
> 
