
R version 2.11.0 (2010-04-22)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEcon )
Loading required package: np
Loading required package: boot
Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-9)
Loading required package: miscTools
> library( plm )
Loading required package: kinship
Loading required package: survival
Loading required package: splines

Attaching package: 'survival'

The following object(s) are masked from 'package:boot':

    aml

Loading required package: nlme
Loading required package: lattice

Attaching package: 'lattice'

The following object(s) are masked from 'package:boot':

    melanoma

[1] "kinship is loaded"
Loading required package: Formula
Loading required package: MASS
Loading required package: sandwich
Loading required package: zoo
> 
> ## preparing data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of variable inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # a time trend to account for technical progress:
> germanFarms$time <- c(1:20)
> # mean values of all variables
> germanFarmsMeans <- colMeans( germanFarms[ , -1 ] )
> 
> ## estimate a quadratic production function
> estResult <- quadFuncEst( "qOutput",
+    c( "qLabor", "land", "qVarInput", "time" ), germanFarms )
> coef( estResult )
          a_0           a_1           a_2           a_3           a_4 
-1.890329e+04  1.639013e+04  2.886098e+01  1.922564e+01 -1.504347e+02 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
-1.144804e+04  2.449445e+02 -5.292270e+00 -1.445663e+02 -4.788050e+00 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
-3.671761e-01  5.183312e+00 -7.898751e-03  5.062034e-01 -1.299008e+01 
> print( estResult )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput", 
    "time"), data = germanFarms)

$nExog
[1] 4

$nShifter
[1] 0

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3          a_4        b_1_1  
 -1.890e+04    1.639e+04    2.886e+01    1.923e+01   -1.504e+02   -1.145e+04  
      b_1_2        b_1_3        b_1_4        b_2_2        b_2_3        b_2_4  
  2.449e+02   -5.292e+00   -1.446e+02   -4.788e+00   -3.672e-01    5.183e+00  
      b_3_3        b_3_4        b_4_4  
 -7.899e-03    5.062e-01   -1.299e+01  


$residuals
          1           2           3           4           5           6 
  7.4317860 -39.3646837  21.6522928  32.4670677  -0.8156718 -21.6511019 
          7           8           9          10          11          12 
 -0.6396827  -4.2412344  12.9712813  -7.8273551  -2.8674999   2.9882212 
         13          14          15          16          17          18 
 -6.2501512   0.8632305   7.9416167   7.0569408 -20.6303595  13.7220787 
         19          20 
 -3.0665614   0.2597858 

$fitted
        1         2         3         4         5         6         7         8 
 938.7012 1002.0952 1047.9269 1139.3294 1178.9317 1207.4611 1239.9975 1292.8022 
        9        10        11        12        13        14        15        16 
1194.7349 1286.2359 1363.4601 1537.7959 1581.2848 1695.0962 1636.7475 1618.9742 
       17        18        19        20 
1675.6702 1741.8777 1890.4868 1991.6342 

$coef
          a_0           a_1           a_2           a_3           a_4 
-1.890329e+04  1.639013e+04  2.886098e+01  1.922564e+01 -1.504347e+02 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
-1.144804e+04  2.449445e+02 -5.292270e+00 -1.445663e+02 -4.788050e+00 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
-3.671761e-01  5.183312e+00 -7.898751e-03  5.062034e-01 -1.299008e+01 

$coefCov
                a_0           a_1           a_2           a_3           a_4
a_0    1.938122e+08 -2.197867e+08 -6.683403e+06  1.050371e+05  6.704211e+06
a_1   -2.197867e+08  2.810922e+08  6.632692e+06 -1.514196e+05 -7.658821e+06
a_2   -6.683403e+06  6.632692e+06  5.131468e+05 -1.060698e+04 -3.640068e+05
a_3    1.050371e+05 -1.514196e+05 -1.060698e+04  3.563356e+02  6.676131e+03
a_4    6.704211e+06 -7.658821e+06 -3.640068e+05  6.676131e+03  3.825467e+05
b_1_1  1.133446e+08 -1.693338e+08 -2.554375e+06  9.829579e+04  3.868908e+06
b_1_2  4.309227e+06 -4.617578e+06 -3.150258e+05  6.976473e+03  2.356747e+05
b_1_3 -5.148538e+04  8.652791e+04  5.883334e+03 -2.180073e+02 -3.895930e+03
b_1_4 -4.176748e+06  5.216439e+06  1.981659e+05 -4.235694e+03 -2.252302e+05
b_2_2 -3.051665e+04  5.436021e+04 -4.263755e+03  1.124861e+02  1.337243e+03
b_2_3  2.266125e+03 -2.433241e+03  1.662791e+01 -2.317933e+00  4.271345e+01
b_2_4 -4.872109e+04  4.085485e+04  6.713622e+03 -1.439969e+02 -4.858701e+03
b_3_3 -1.406268e+02  1.445588e+02  3.274342e+00  3.755283e-03 -3.919035e+00
b_3_4  3.100540e+02 -8.513935e+02 -9.783905e+01  4.006433e+00  5.871038e+01
b_4_4  8.309591e+04 -8.740156e+04 -5.399927e+03  9.410803e+01  5.214854e+03
              b_1_1         b_1_2         b_1_3         b_1_4         b_2_2
a_0    1.133446e+08  4.309227e+06 -5.148538e+04 -4.176748e+06 -3.051665e+04
a_1   -1.693338e+08 -4.617578e+06  8.652791e+04  5.216439e+06  5.436021e+04
a_2   -2.554375e+06 -3.150258e+05  5.883334e+03  1.981659e+05 -4.263755e+03
a_3    9.829579e+04  6.976473e+03 -2.180073e+02 -4.235694e+03  1.124861e+02
a_4    3.868908e+06  2.356747e+05 -3.895930e+03 -2.252302e+05  1.337243e+03
b_1_1  1.536166e+08  1.381829e+06 -1.231421e+05 -2.282655e+06 -2.619113e+04
b_1_2  1.381829e+06  2.194998e+05 -3.003684e+03 -1.550354e+05  1.317924e+03
b_1_3 -1.231421e+05 -3.003684e+03  2.468251e+02  1.525546e+03 -8.483942e+01
b_1_4 -2.282655e+06 -1.550354e+05  1.525546e+03  1.627540e+05  9.865411e+02
b_2_2 -2.619113e+04  1.317924e+03 -8.483942e+01  9.865411e+02  2.331666e+02
b_2_3  2.204152e+03 -2.736497e+01 -8.324291e-02 -1.759347e+01 -3.652819e+00
b_2_4 -2.312610e+04 -3.261164e+03  1.008205e+02  1.549118e+03 -1.687507e+02
b_3_3  4.577387e+01 -3.770877e+00 -2.224067e-01  4.528008e+00  1.562563e-01
b_3_4 -3.902702e+02  8.932954e+01 -6.175708e-01 -6.056596e+01  1.402122e+00
b_4_4  5.262098e+04  2.806790e+03 -7.191939e+01 -2.310513e+03  8.048059e+01
              b_2_3         b_2_4         b_3_3         b_3_4         b_4_4
a_0    2.266125e+03 -4.872109e+04 -1.406268e+02  310.05398037  8.309591e+04
a_1   -2.433241e+03  4.085485e+04  1.445588e+02 -851.39349501 -8.740156e+04
a_2    1.662791e+01  6.713622e+03  3.274342e+00  -97.83905287 -5.399927e+03
a_3   -2.317933e+00 -1.439969e+02  3.755283e-03    4.00643287  9.410803e+01
a_4    4.271345e+01 -4.858701e+03 -3.919035e+00   58.71038264  5.214854e+03
b_1_1  2.204152e+03 -2.312610e+04  4.577387e+01 -390.27017427  5.262098e+04
b_1_2 -2.736497e+01 -3.261164e+03 -3.770877e+00   89.32953972  2.806790e+03
b_1_3 -8.324291e-02  1.008205e+02 -2.224067e-01   -0.61757075 -7.191939e+01
b_1_4 -1.759347e+01  1.549118e+03  4.528008e+00  -60.56595685 -2.310513e+03
b_2_2 -3.652819e+00 -1.687507e+02  1.562563e-01    1.40212158  8.048059e+01
b_2_3  1.655302e-01  1.595141e+00 -2.065730e-03   -0.08986483  1.744246e-01
b_2_4  1.595141e+00  1.669957e+02 -5.795714e-02   -1.38071726 -1.096750e+02
b_3_3 -2.065730e-03 -5.795714e-02  6.190495e-04   -0.00219636  8.291250e-03
b_3_4 -8.986483e-02 -1.380717e+00 -2.196360e-03    0.09710849  4.405664e-01
b_4_4  1.744246e-01 -1.096750e+02  8.291250e-03    0.44056644  1.014342e+02

$r2
[1] 0.9973797

$r2bar
[1] 0.9900427

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput" "time"     

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3 a_4   b_1_1   b_1_2     b_1_3 b_1_4    b_2_2
 [1,] 1 1.44 23.40 556.5471   1 1.03680 33.6960  801.4279  1.44 273.7800
 [2,] 1 1.45 24.20 606.6394   2 1.05125 35.0900  879.6271  2.90 292.8200
 [3,] 1 1.44 24.69 607.9155   3 1.03680 35.5536  875.3984  4.32 304.7981
 [4,] 1 1.48 24.91 653.9603   4 1.09520 36.8668  967.8612  5.92 310.2541
 [5,] 1 1.48 24.91 647.6268   5 1.09520 36.8668  958.4876  7.40 310.2541
 [6,] 1 1.47 25.23 656.9892   6 1.08045 37.0881  965.7741  8.82 318.2765
 [7,] 1 1.45 25.91 673.4591   7 1.05125 37.5695  976.5157 10.15 335.6641
 [8,] 1 1.49 25.97 647.9037   8 1.11005 38.6953  965.3766 11.92 337.2204
 [9,] 1 1.48 25.18 639.9773   9 1.09520 37.2664  947.1665 13.32 317.0162
[10,] 1 1.53 26.07 648.4779  10 1.17045 39.8871  992.1712 15.30 339.8225
[11,] 1 1.53 26.77 682.3780  11 1.17045 40.9581 1044.0383 16.83 358.3164
[12,] 1 1.69 29.87 760.9644  12 1.42805 50.4803 1286.0298 20.28 446.1085
[13,] 1 1.70 31.11 801.2621  13 1.44500 52.8870 1362.1456 22.10 483.9160
[14,] 1 1.67 32.19 797.8057  14 1.39445 53.7573 1332.3355 23.38 518.0980
[15,] 1 1.65 31.52 736.9826  15 1.36125 52.0080 1216.0213 24.75 496.7552
[16,] 1 1.61 31.88 718.7734  16 1.29605 51.3268 1157.2251 25.76 508.1672
[17,] 1 1.62 33.54 700.6963  17 1.31220 54.3348 1135.1279 27.54 562.4658
[18,] 1 1.62 35.06 701.7920  18 1.31220 56.7972 1136.9030 29.16 614.6018
[19,] 1 1.62 37.31 731.2555  19 1.31220 60.4422 1184.6339 30.78 696.0181
[20,] 1 1.62 39.39 770.1724  20 1.31220 63.8118 1247.6793 32.40 775.7861
         b_2_3  b_2_4    b_3_3      b_3_4 b_4_4
 [1,] 13023.20  23.40 154872.4   556.5471   0.5
 [2,] 14680.67  48.40 184005.7  1213.2788   2.0
 [3,] 15009.43  74.07 184780.6  1823.7466   4.5
 [4,] 16290.15  99.64 213832.0  2615.8410   8.0
 [5,] 16132.38 124.55 209710.2  3238.1338  12.5
 [6,] 16575.84 151.38 215817.4  3941.9352  18.0
 [7,] 17449.33 181.37 226773.6  4714.2138  24.5
 [8,] 16826.06 207.76 209889.6  5183.2298  32.0
 [9,] 16114.63 226.62 204785.5  5759.7961  40.5
[10,] 16905.82 260.70 210261.8  6484.7792  50.0
[11,] 18267.26 294.47 232819.8  7506.1577  60.5
[12,] 22730.01 358.44 289533.4  9131.5727  72.0
[13,] 24927.26 404.43 321010.5 10416.4075  84.5
[14,] 25681.37 450.66 318247.0 11169.2800  98.0
[15,] 23229.69 472.80 271571.7 11054.7392 112.5
[16,] 22914.49 510.08 258317.6 11500.3736 128.0
[17,] 23501.35 570.18 245487.6 11911.8363 144.5
[18,] 24604.83 631.08 246256.0 12632.2561 162.0
[19,] 27283.14 708.89 267367.3 13893.8541 180.5
[20,] 30337.09 787.80 296582.8 15403.4478 200.0

attr(,"class")
[1] "quadFuncEst"
> 
> ## compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput", "time" ),
+    germanFarms, coef( estResult ) )
> all.equal( fitted, estResult$fitted )
[1] TRUE
> # only at mean values
> fittedMean <- quadFuncCalc(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    data = germanFarmsMeans, coef = coef( estResult ) )
> print( fittedMean )
       1 
1555.937 
> 
> ## compute the marginal products of the inputs
> margProducts <- quadFuncDeriv(
+    c( "qLabor", "land", "qVarInput", "time" ),
+    germanFarms, coef( estResult ), vcov( estResult ) )
> print( margProducts )
       qLabor     land   qVarInput       time
1   2546.6963 70.37321 -0.87697378  31.415311
2   2218.5034 55.78284 -1.11310030  46.483105
3   2301.6866 55.70200 -0.74397019  38.124492
4   1509.4055 52.72320 -0.89393206  43.800087
5   1398.3578 60.23202 -0.33770187  27.603970
6   1397.1054 57.99605  0.02997629  22.457520
7   1560.8988 48.97724  0.26225368  24.220550
8   1108.3537 73.05437  0.73659135  -7.177405
9    926.7102 82.48118  1.64839516 -26.829001
10   382.7553 92.52914  1.49605442 -38.131223
11   230.2419 81.91353  1.47746659 -30.332660
12 -1402.5828 82.58996 -0.62207350 -10.604369
13 -1571.1647 69.48917 -0.94239273   1.786045
14 -1089.4578 63.42216 -0.64667010  -3.018705
15  -847.2839 89.24736  0.69181322 -47.379138
16  -349.3805 89.59520  1.42135451 -61.938159
17  -106.1504 95.91727  1.40790948 -76.920291
18   115.7999 93.42042  1.34735027 -81.477061
19   366.4300 77.01233  0.79468293 -67.890172
20   525.3894 57.94714  0.22976523 -50.399087
> print( attributes( margProducts )$variance )
      qLabor     land qVarInput     time
1  303296116 544270.7  364.2310 401578.9
2  297350425 542045.0  363.1437 399238.4
3  291891240 533248.5  357.8728 393740.4
4  289467824 538663.1  363.4157 395792.0
5  284240778 531000.5  358.9518 390563.7
6  277776763 521653.6  353.6580 383957.4
7  271274280 511097.0  347.7871 376823.3
8  274850721 517158.7  351.2856 382143.0
9  265867104 504237.8  344.2110 371779.3
10 272180939 516763.8  353.1295 381506.9
11 267438323 512575.9  350.4116 377697.3
12 296752493 573962.8  390.7631 422270.9
13 295505893 575409.1  392.6564 423171.4
14 290357388 561120.8  383.0519 415689.7
15 283971420 543735.9  371.3058 405186.5
16 275884758 524677.9  358.9858 393181.0
17 282738463 528807.1  362.2609 400594.4
18 285652405 528980.1  362.4889 403757.9
19 289769299 532351.5  363.6442 409489.4
20 292717887 534964.8  365.3061 414059.8
> print( attributes( margProducts )$stdDev )
     qLabor     land qVarInput     time
1  17415.40 737.7470  19.08484 633.7025
2  17243.85 736.2371  19.05633 631.8532
3  17084.82 730.2386  18.91753 627.4874
4  17013.75 733.9367  19.06346 629.1200
5  16859.44 728.6978  18.94602 624.9510
6  16666.64 722.2559  18.80580 619.6429
7  16470.41 714.9105  18.64905 613.8594
8  16578.62 719.1374  18.74261 618.1771
9  16305.43 710.0970  18.55292 609.7371
10 16497.91 718.8629  18.79174 617.6624
11 16353.54 715.9441  18.71929 614.5708
12 17226.51 757.6033  19.76773 649.8237
13 17190.28 758.5572  19.81556 650.5162
14 17039.88 749.0800  19.57171 644.7401
15 16851.45 737.3845  19.26930 636.5426
16 16609.78 724.3466  18.94692 627.0415
17 16814.83 727.1912  19.03315 632.9252
18 16901.25 727.3102  19.03914 635.4195
19 17022.61 729.6242  19.06946 639.9136
20 17109.00 731.4129  19.11298 643.4748
> # only at mean values
> margProductsMean <- quadFuncDeriv(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    data = germanFarmsMeans, coef = coef( estResult ),
+    coefCov = vcov( estResult ) )
> print( margProductsMean )
    qLabor     land qVarInput      time
1 561.1157 72.52029 0.2683399 -13.31031
> print( attributes( margProductsMean )$variance )
     qLabor     land qVarInput     time
1 282720621 532305.4  361.3141 395950.4
> print( attributes( margProductsMean )$stdDev )
    qLabor     land qVarInput     time
1 16814.30 729.5926  19.00826 629.2459
> 
> ## estimate a quadratic production function with a shifter
> estResultShifter <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = "time", data = germanFarms )
> coef( estResultShifter )
          a_0           a_1           a_2           a_3         b_1_1 
-1.150817e+04  1.029417e+04  1.412165e+02  5.350609e+00 -2.033947e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-7.456696e+01 -7.159212e+00 -3.059687e-01  3.274025e-02  8.633962e-03 
          d_1 
 9.662219e+00 
> print( estResultShifter )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = "time")

$nExog
[1] 3

$nShifter
[1] 1

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.151e+04    1.029e+04    1.412e+02    5.351e+00   -2.034e+03   -7.457e+01  
      b_1_3        b_2_2        b_2_3        b_3_3          d_1  
 -7.159e+00   -3.060e-01    3.274e-02    8.634e-03    9.662e+00  


$residuals
         1          2          3          4          5          6          7 
 17.931764 -65.866392  19.351857  10.280111  14.470914  -5.966530  -4.815672 
         8          9         10         11         12         13         14 
 41.675980   2.129325 -18.242163  -8.449634  14.298946 -28.058283  16.301602 
        15         16         17         18         19         20 
 27.353722 -18.703083 -32.873671   7.023889  22.257395 -10.100077 

$fitted
        1         2         3         4         5         6         7         8 
 928.2012 1028.5969 1050.2273 1161.5164 1163.6451 1191.7765 1244.1735 1246.8849 
        9        10        11        12        13        14        15        16 
1205.5769 1296.6507 1369.0422 1526.4851 1603.0930 1679.6578 1617.3354 1644.7342 
       17        18        19        20 
1687.9135 1748.5759 1865.1629 2001.9941 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.150817e+04  1.029417e+04  1.412165e+02  5.350609e+00 -2.033947e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-7.456696e+01 -7.159212e+00 -3.059687e-01  3.274025e-02  8.633962e-03 
          d_1 
 9.662219e+00 

$coefCov
                a_0           a_1           a_2           a_3         b_1_1
a_0    8.577089e+07 -9.121259e+07 -1.896169e+06  3.558943e+04  4.248701e+07
a_1   -9.121259e+07  1.308829e+08  9.733876e+05 -7.132475e+04 -1.044198e+08
a_2   -1.896169e+06  9.733876e+05  1.567474e+05 -2.978187e+03  2.534146e+05
a_3    3.558943e+04 -7.132475e+04 -2.978187e+03  1.734855e+02  1.009759e+05
b_1_1  4.248701e+07 -1.044198e+08  2.534146e+05  1.009759e+05  1.358543e+08
b_1_2  9.515825e+05 -2.640823e+05 -9.169660e+04  1.516915e+03 -4.719813e+05
b_1_3 -1.889963e+03  5.576641e+04  1.597141e+03 -1.798683e+02 -1.340376e+05
b_2_2 -1.761447e+03  2.623198e+03  1.373271e+02 -6.466351e+00 -7.256398e+02
b_2_3  5.175741e+02 -8.232426e+02 -1.605285e+01  9.901481e-01  7.115295e+02
b_3_3 -6.969786e+01  1.400451e+01  1.322136e+00  1.130864e-01  1.242522e+02
d_1    7.511741e+04 -5.928887e+04 -2.328543e+03  1.300473e+01  1.032495e+04
              b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0    9.515825e+05 -1.889963e+03 -1.761447e+03  5.175741e+02 -6.969786e+01
a_1   -2.640823e+05  5.576641e+04  2.623198e+03 -8.232426e+02  1.400451e+01
a_2   -9.169660e+04  1.597141e+03  1.373271e+02 -1.605285e+01  1.322136e+00
a_3    1.516915e+03 -1.798683e+02 -6.466351e+00  9.901481e-01  1.130864e-01
b_1_1 -4.719813e+05 -1.340376e+05 -7.256398e+02  7.115295e+02  1.242522e+02
b_1_2  5.705912e+04 -8.004321e+02 -6.472079e+01  1.294896e+00 -4.001516e-01
b_1_3 -8.004321e+02  2.485906e+02  8.915512e-01 -4.407104e-01 -2.820251e-01
b_2_2 -6.472079e+01  8.915512e-01  1.151123e+01 -5.692261e-01  3.132219e-02
b_2_3  1.294896e+00 -4.407104e-01 -5.692261e-01  4.462189e-02 -2.332653e-03
b_3_3 -4.001516e-01 -2.820251e-01  3.132219e-02 -2.332653e-03  5.717981e-04
d_1    1.260385e+03  1.152794e+01  5.301871e+00  6.409888e-02 -4.712580e-02
                d_1
a_0    7.511741e+04
a_1   -5.928887e+04
a_2   -2.328543e+03
a_3    1.300473e+01
b_1_1  1.032495e+04
b_1_2  1.260385e+03
b_1_3  1.152794e+01
b_2_2  5.301871e+00
b_2_3  6.409888e-02
b_3_3 -4.712580e-02
d_1    1.097714e+02

$r2
[1] 0.993426

$r2bar
[1] 0.9861215

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "time"

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3   b_1_1   b_1_2     b_1_3    b_2_2    b_2_3
 [1,] 1 1.44 23.40 556.5471 1.03680 33.6960  801.4279 273.7800 13023.20
 [2,] 1 1.45 24.20 606.6394 1.05125 35.0900  879.6271 292.8200 14680.67
 [3,] 1 1.44 24.69 607.9155 1.03680 35.5536  875.3984 304.7981 15009.43
 [4,] 1 1.48 24.91 653.9603 1.09520 36.8668  967.8612 310.2541 16290.15
 [5,] 1 1.48 24.91 647.6268 1.09520 36.8668  958.4876 310.2541 16132.38
 [6,] 1 1.47 25.23 656.9892 1.08045 37.0881  965.7741 318.2765 16575.84
 [7,] 1 1.45 25.91 673.4591 1.05125 37.5695  976.5157 335.6641 17449.33
 [8,] 1 1.49 25.97 647.9037 1.11005 38.6953  965.3766 337.2204 16826.06
 [9,] 1 1.48 25.18 639.9773 1.09520 37.2664  947.1665 317.0162 16114.63
[10,] 1 1.53 26.07 648.4779 1.17045 39.8871  992.1712 339.8225 16905.82
[11,] 1 1.53 26.77 682.3780 1.17045 40.9581 1044.0383 358.3164 18267.26
[12,] 1 1.69 29.87 760.9644 1.42805 50.4803 1286.0298 446.1085 22730.01
[13,] 1 1.70 31.11 801.2621 1.44500 52.8870 1362.1456 483.9160 24927.26
[14,] 1 1.67 32.19 797.8057 1.39445 53.7573 1332.3355 518.0980 25681.37
[15,] 1 1.65 31.52 736.9826 1.36125 52.0080 1216.0213 496.7552 23229.69
[16,] 1 1.61 31.88 718.7734 1.29605 51.3268 1157.2251 508.1672 22914.49
[17,] 1 1.62 33.54 700.6963 1.31220 54.3348 1135.1279 562.4658 23501.35
[18,] 1 1.62 35.06 701.7920 1.31220 56.7972 1136.9030 614.6018 24604.83
[19,] 1 1.62 37.31 731.2555 1.31220 60.4422 1184.6339 696.0181 27283.14
[20,] 1 1.62 39.39 770.1724 1.31220 63.8118 1247.6793 775.7861 30337.09
         b_3_3 d_1
 [1,] 154872.4   1
 [2,] 184005.7   2
 [3,] 184780.6   3
 [4,] 213832.0   4
 [5,] 209710.2   5
 [6,] 215817.4   6
 [7,] 226773.6   7
 [8,] 209889.6   8
 [9,] 204785.5   9
[10,] 210261.8  10
[11,] 232819.8  11
[12,] 289533.4  12
[13,] 321010.5  13
[14,] 318247.0  14
[15,] 271571.7  15
[16,] 258317.6  16
[17,] 245487.6  17
[18,] 246256.0  18
[19,] 267367.3  19
[20,] 296582.8  20

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = "time", data = germanFarms, coef( estResultShifter ) )
> all.equal( fitted, estResultShifter$fitted )
[1] TRUE
> # compute marginal products = partial derivatives
> margProdShifter <- quadFuncDeriv(
+    c( "qLabor", "land", "qVarInput" ),
+    germanFarms, coef( estResultShifter ), vcov( estResultShifter ) )
> print( margProdShifter )
       qLabor     land qVarInput
1   1635.9778 44.90187 0.6126722
2   1197.3635 45.55146 0.9997671
3   1172.0291 46.18899 1.0984200
4    744.6226 44.64651 1.2168027
5    789.9655 44.43915 1.1621195
6    719.4158 45.39344 1.3250235
7    591.4776 47.21595 1.6326718
8    688.6021 43.37822 1.1276235
9    824.5962 44.10610 1.1049146
10   595.6768 40.38375 0.8494865
11   300.7822 41.27947 1.1650965
12  -818.4237 30.97319 0.7996294
13 -1219.7261 31.16747 1.1165643
14 -1214.4949 32.96087 1.3368577
15  -688.4106 32.66585 0.9329616
16  -503.5329 34.94220 1.0738985
17  -518.2358 33.09678 0.9005782
18  -639.4222 32.66758 0.9598040
19 -1018.1332 32.94379 1.2878562
20 -1451.8469 33.58153 1.6919630
> print( attributes( margProdShifter )$variance )
      qLabor     land qVarInput
1  127826924 140313.4  175.1015
2  125015915 141524.7  168.8903
3  123997605 140739.1  166.5323
4  125187818 144356.5  168.2217
5  125550728 144245.7  168.8149
6  124104565 143588.1  165.9821
7  121697097 142268.0  161.1205
8  126760204 144792.8  169.3584
9  126062186 144060.9  169.3051
10 131046523 147939.6  176.4791
11 128983345 148376.2  171.9025
12 143042952 163661.9  190.1377
13 142294265 165266.3  186.6170
14 139703443 161944.3  179.9784
15 140671509 158933.3  182.8320
16 137644403 154877.0  177.0038
17 141504265 155311.6  180.0822
18 142928871 155201.3  178.9230
19 143241155 155398.4  173.2609
20 143519843 155753.4  167.4724
> print( attributes( margProdShifter )$stdDev )
     qLabor     land qVarInput
1  11306.06 374.5843  13.23259
2  11181.05 376.1976  12.99578
3  11135.42 375.1521  12.90474
4  11188.74 379.9428  12.97003
5  11204.94 379.7969  12.99288
6  11140.22 378.9303  12.88340
7  11031.64 377.1843  12.69333
8  11258.78 380.5165  13.01378
9  11227.74 379.5536  13.01173
10 11447.56 384.6292  13.28454
11 11357.08 385.1964  13.11116
12 11960.06 404.5514  13.78904
13 11928.72 406.5295  13.66078
14 11819.62 402.4230  13.41560
15 11860.50 398.6644  13.52154
16 11732.20 393.5442  13.30428
17 11895.56 394.0960  13.41947
18 11955.29 393.9559  13.37621
19 11968.34 394.2060  13.16286
20 11979.98 394.6560  12.94111
> 
> ## estimate a quadratic production function with 2 shifters
> germanFarms$timeSq <- germanFarms$time^2
> estResultShifter2 <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "timeSq" ), data = germanFarms )
> coef( estResultShifter2 )
          a_0           a_1           a_2           a_3         b_1_1 
-1.328121e+04  1.417628e+04 -1.282680e+01  6.891605e+00 -4.777712e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
 3.036974e+01 -1.046720e+01 -1.973540e+00  1.445309e-01  7.715774e-03 
          d_1           d_2 
 3.967699e+01 -2.576534e+00 
> print( estResultShifter2 )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = c("time", "timeSq"))

$nExog
[1] 3

$nShifter
[1] 2

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.328e+04    1.418e+04   -1.283e+01    6.892e+00   -4.778e+03    3.037e+01  
      b_1_3        b_2_2        b_2_3        b_3_3          d_1          d_2  
 -1.047e+01   -1.974e+00    1.445e-01    7.716e-03    3.968e+01   -2.577e+00  


$residuals
         1          2          3          4          5          6          7 
 23.043716 -50.559340  11.511240  19.010727   8.980090  -9.620689  -1.672368 
         8          9         10         11         12         13         14 
  9.906857   3.601013 -32.989844  15.030604   9.970448 -15.832543  -2.237728 
        15         16         17         18         19         20 
 25.013750   7.803952 -37.882077   6.400360  19.284989  -8.763158 

$fitted
        1         2         3         4         5         6         7         8 
 923.0893 1013.2898 1058.0679 1152.7857 1169.1360 1195.4307 1241.0302 1278.6541 
        9        10        11        12        13        14        15        16 
1204.1052 1311.3984 1345.5620 1530.8136 1590.8672 1698.1971 1619.6754 1618.2272 
       17        18        19        20 
1692.9219 1749.1994 1868.1353 2000.6572 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.328121e+04  1.417628e+04 -1.282680e+01  6.891605e+00 -4.777712e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
 3.036974e+01 -1.046720e+01 -1.973540e+00  1.445309e-01  7.715774e-03 
          d_1           d_2 
 3.967699e+01 -2.576534e+00 

$coefCov
                a_0           a_1           a_2           a_3         b_1_1
a_0    6.848887e+07 -7.386796e+07 -1.414048e+06  2.723962e+04  3.489224e+07
a_1   -7.386796e+07  1.075117e+08  5.921939e+05 -5.444293e+04 -8.537322e+07
a_2   -1.414048e+06  5.921939e+05  1.304165e+05 -2.415558e+03  3.230764e+05
a_3    2.723962e+04 -5.444293e+04 -2.415558e+03  1.373664e+02  7.831460e+04
b_1_1  3.489224e+07 -8.537322e+07  3.230764e+05  7.831460e+04  1.092254e+08
b_1_2  6.953253e+05 -8.907367e+04 -7.695993e+04  1.242260e+03 -4.559154e+05
b_1_3  2.239694e+02  4.018266e+04  1.407055e+03 -1.431900e+02 -1.029449e+05
b_2_2 -5.242018e+02  1.759629e+02  1.832068e+02 -5.844700e+00  7.645635e+02
b_2_3  3.498620e+02 -5.218126e+02 -1.767570e+01  8.303544e-01  4.709689e+02
b_3_3 -5.443292e+01  9.991839e+00  1.082893e+00  8.867691e-02  9.862229e+01
d_1    4.363613e+04 -1.267889e+04 -3.184727e+03  2.375303e+01 -1.591682e+04
d_2    1.334141e+03 -2.921142e+03  1.159117e+02 -1.159541e+00  2.064579e+03
              b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0    6.953253e+05  2.239694e+02 -524.20184163  3.498620e+02 -5.443292e+01
a_1   -8.907367e+04  4.018266e+04  175.96292392 -5.218126e+02  9.991839e+00
a_2   -7.695993e+04  1.407055e+03  183.20683188 -1.767570e+01  1.082893e+00
a_3    1.242260e+03 -1.431900e+02   -5.84470007  8.303544e-01  8.867691e-02
b_1_1 -4.559154e+05 -1.029449e+05  764.56345467  4.709689e+02  9.862229e+01
b_1_2  4.816740e+04 -7.319621e+02 -102.09206516  4.446082e+00 -3.433806e-01
b_1_3 -7.319621e+02  1.990368e+02    2.31337599 -4.551928e-01 -2.212939e-01
b_2_2 -1.020921e+02  2.313376e+00    9.88072974 -5.028821e-01  2.512296e-02
b_2_3  4.446082e+00 -4.551928e-01   -0.50288208  3.880310e-02 -1.867654e-03
b_3_3 -3.433806e-01 -2.212939e-01    0.02512296 -1.867654e-03  4.507119e-04
d_1    1.912776e+03 -1.991489e+01  -10.44049259  1.030415e+00 -4.517449e-02
d_2   -7.896090e+01  2.489138e+00    1.25478441 -8.411825e-02  6.909024e-04
                d_1           d_2
a_0    4.363613e+04  1.334141e+03
a_1   -1.267889e+04 -2.921142e+03
a_2   -3.184727e+03  1.159117e+02
a_3    2.375303e+01 -1.159541e+00
b_1_1 -1.591682e+04  2.064579e+03
b_1_2  1.912776e+03 -7.896090e+01
b_1_3 -1.991489e+01  2.489138e+00
b_2_2 -1.044049e+01  1.254784e+00
b_2_3  1.030415e+00 -8.411825e-02
b_3_3 -4.517449e-02  6.909024e-04
d_1    3.495774e+02 -2.258498e+01
d_2   -2.258498e+01  1.938745e+00

$r2
[1] 0.9953964

$r2bar
[1] 0.9890664

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "time"   "timeSq"

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3   b_1_1   b_1_2     b_1_3    b_2_2    b_2_3
 [1,] 1 1.44 23.40 556.5471 1.03680 33.6960  801.4279 273.7800 13023.20
 [2,] 1 1.45 24.20 606.6394 1.05125 35.0900  879.6271 292.8200 14680.67
 [3,] 1 1.44 24.69 607.9155 1.03680 35.5536  875.3984 304.7981 15009.43
 [4,] 1 1.48 24.91 653.9603 1.09520 36.8668  967.8612 310.2541 16290.15
 [5,] 1 1.48 24.91 647.6268 1.09520 36.8668  958.4876 310.2541 16132.38
 [6,] 1 1.47 25.23 656.9892 1.08045 37.0881  965.7741 318.2765 16575.84
 [7,] 1 1.45 25.91 673.4591 1.05125 37.5695  976.5157 335.6641 17449.33
 [8,] 1 1.49 25.97 647.9037 1.11005 38.6953  965.3766 337.2204 16826.06
 [9,] 1 1.48 25.18 639.9773 1.09520 37.2664  947.1665 317.0162 16114.63
[10,] 1 1.53 26.07 648.4779 1.17045 39.8871  992.1712 339.8225 16905.82
[11,] 1 1.53 26.77 682.3780 1.17045 40.9581 1044.0383 358.3164 18267.26
[12,] 1 1.69 29.87 760.9644 1.42805 50.4803 1286.0298 446.1085 22730.01
[13,] 1 1.70 31.11 801.2621 1.44500 52.8870 1362.1456 483.9160 24927.26
[14,] 1 1.67 32.19 797.8057 1.39445 53.7573 1332.3355 518.0980 25681.37
[15,] 1 1.65 31.52 736.9826 1.36125 52.0080 1216.0213 496.7552 23229.69
[16,] 1 1.61 31.88 718.7734 1.29605 51.3268 1157.2251 508.1672 22914.49
[17,] 1 1.62 33.54 700.6963 1.31220 54.3348 1135.1279 562.4658 23501.35
[18,] 1 1.62 35.06 701.7920 1.31220 56.7972 1136.9030 614.6018 24604.83
[19,] 1 1.62 37.31 731.2555 1.31220 60.4422 1184.6339 696.0181 27283.14
[20,] 1 1.62 39.39 770.1724 1.31220 63.8118 1247.6793 775.7861 30337.09
         b_3_3 d_1 d_2
 [1,] 154872.4   1   1
 [2,] 184005.7   2   4
 [3,] 184780.6   3   9
 [4,] 213832.0   4  16
 [5,] 209710.2   5  25
 [6,] 215817.4   6  36
 [7,] 226773.6   7  49
 [8,] 209889.6   8  64
 [9,] 204785.5   9  81
[10,] 210261.8  10 100
[11,] 232819.8  11 121
[12,] 289533.4  12 144
[13,] 321010.5  13 169
[14,] 318247.0  14 196
[15,] 271571.7  15 225
[16,] 258317.6  16 256
[17,] 245487.6  17 289
[18,] 246256.0  18 324
[19,] 267367.3  19 361
[20,] 296582.8  20 400

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "timeSq" ), data = germanFarms, 
+    coef( estResultShifter2 ) )
> all.equal( fitted, estResultShifter2$fitted )
[1] TRUE
> 
> ## estimate a linear functions with quadFuncEst
> estResultLinear <- quadFuncEst( yName = "qOutput", xNames = NULL,
+    shifterNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms )
> coef( estResultLinear )
        a_0         d_1         d_2         d_3         d_4 
 -97.668526   21.027452 -185.952873   29.341691    1.060923 
> print( estResultLinear )
$call
quadFuncEst(yName = "qOutput", xNames = NULL, data = germanFarms, 
    shifterNames = c("time", "qLabor", "land", "qVarInput"))

$nExog
[1] 0

$nShifter
[1] 4

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          d_1          d_2          d_3          d_4  
    -97.669       21.027     -185.953       29.342        1.061  


$residuals
         1          2          3          4          5          6          7 
 13.496878 -65.690977   2.539433  35.862314  27.873788  -6.641415 -15.265758 
         8          9         10         11         12         13         14 
 45.699789 -26.452681  -2.612752   2.039367  16.622462 -47.431374  18.865261 
        15         16         17         18         19         20 
 27.036042 -11.331891 -31.019874   2.750743  16.266458  -2.605812 

$fitted
        1         2         3         4         5         6         7         8 
 932.6361 1028.4215 1067.0397 1135.9342 1150.2423 1192.4514 1254.6236 1242.8611 
        9        10        11        12        13        14        15        16 
1234.1589 1281.0213 1358.5532 1524.1616 1622.4660 1677.0941 1617.6531 1637.3630 
       17        18        19        20 
1686.0597 1752.8491 1871.1538 1994.4998 

$coef
        a_0         d_1         d_2         d_3         d_4 
 -97.668526   21.027452 -185.952873   29.341691    1.060923 

$coefCov
             a_0           d_1          d_2          d_3           d_4
a_0  52830.85637  6.232121e+02 -40094.94301 -411.8508564  21.579570550
d_1    623.21210  1.606220e+01   -221.56287  -15.4028989  -0.002912368
d_2 -40094.94301 -2.215629e+02  47108.08564   25.2446450 -45.731815694
d_3   -411.85086 -1.540290e+01     25.24465   21.1101189  -0.111853875
d_4     21.57957 -2.912368e-03    -45.73182   -0.1118539   0.076651415

$r2
[1] 0.9917374

$r2bar
[1] 0.989534

$nObs
[1] 20

$yName
[1] "qOutput"

$shifterNames
[1] "time"      "qLabor"    "land"      "qVarInput"

$regScale
[1] 1

$model.matrix
        d_1  d_2   d_3      d_4
 [1,] 1   1 1.44 23.40 556.5471
 [2,] 1   2 1.45 24.20 606.6394
 [3,] 1   3 1.44 24.69 607.9155
 [4,] 1   4 1.48 24.91 653.9603
 [5,] 1   5 1.48 24.91 647.6268
 [6,] 1   6 1.47 25.23 656.9892
 [7,] 1   7 1.45 25.91 673.4591
 [8,] 1   8 1.49 25.97 647.9037
 [9,] 1   9 1.48 25.18 639.9773
[10,] 1  10 1.53 26.07 648.4779
[11,] 1  11 1.53 26.77 682.3780
[12,] 1  12 1.69 29.87 760.9644
[13,] 1  13 1.70 31.11 801.2621
[14,] 1  14 1.67 32.19 797.8057
[15,] 1  15 1.65 31.52 736.9826
[16,] 1  16 1.61 31.88 718.7734
[17,] 1  17 1.62 33.54 700.6963
[18,] 1  18 1.62 35.06 701.7920
[19,] 1  19 1.62 37.31 731.2555
[20,] 1  20 1.62 39.39 770.1724

attr(,"class")
[1] "quadFuncEst"
> estResultLin <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, linear = TRUE )
> all.equal( coef( estResultLinear ), coef( estResultLin )[1:5],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( vcov( estResultLinear ), vcov( estResultLin )[1:5,1:5],
+    check.attributes = FALSE )
[1] TRUE
> coef( estResultLin )
        a_0         a_1         a_2         a_3         a_4       b_1_1 
 -97.668526   21.027452 -185.952873   29.341691    1.060923    0.000000 
      b_1_2       b_1_3       b_1_4       b_2_2       b_2_3       b_2_4 
   0.000000    0.000000    0.000000    0.000000    0.000000    0.000000 
      b_3_3       b_3_4       b_4_4 
   0.000000    0.000000    0.000000 
> vcov( estResultLin )
               a_0           a_1          a_2          a_3           a_4 b_1_1
a_0    52830.85637  6.232121e+02 -40094.94301 -411.8508564  21.579570550     0
a_1      623.21210  1.606220e+01   -221.56287  -15.4028989  -0.002912368     0
a_2   -40094.94301 -2.215629e+02  47108.08564   25.2446450 -45.731815694     0
a_3     -411.85086 -1.540290e+01     25.24465   21.1101189  -0.111853875     0
a_4       21.57957 -2.912368e-03    -45.73182   -0.1118539   0.076651415     0
b_1_1      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_2      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_2      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_3_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_3_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_4_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
      b_1_2 b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 b_3_4 b_4_4
a_0       0     0     0     0     0     0     0     0     0
a_1       0     0     0     0     0     0     0     0     0
a_2       0     0     0     0     0     0     0     0     0
a_3       0     0     0     0     0     0     0     0     0
a_4       0     0     0     0     0     0     0     0     0
b_1_1     0     0     0     0     0     0     0     0     0
b_1_2     0     0     0     0     0     0     0     0     0
b_1_3     0     0     0     0     0     0     0     0     0
b_1_4     0     0     0     0     0     0     0     0     0
b_2_2     0     0     0     0     0     0     0     0     0
b_2_3     0     0     0     0     0     0     0     0     0
b_2_4     0     0     0     0     0     0     0     0     0
b_3_3     0     0     0     0     0     0     0     0     0
b_3_4     0     0     0     0     0     0     0     0     0
b_4_4     0     0     0     0     0     0     0     0     0
> print( estResultLin )
$call
quadFuncEst(yName = "qOutput", xNames = c("time", "qLabor", "land", 
    "qVarInput"), data = germanFarms, linear = TRUE)

$nExog
[1] 4

$nShifter
[1] 0

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3          a_4  
    -97.669       21.027     -185.953       29.342        1.061  


$residuals
         1          2          3          4          5          6          7 
 13.496878 -65.690977   2.539433  35.862314  27.873788  -6.641415 -15.265758 
         8          9         10         11         12         13         14 
 45.699789 -26.452681  -2.612752   2.039367  16.622462 -47.431374  18.865261 
        15         16         17         18         19         20 
 27.036042 -11.331891 -31.019874   2.750743  16.266458  -2.605812 

$fitted
        1         2         3         4         5         6         7         8 
 932.6361 1028.4215 1067.0397 1135.9342 1150.2423 1192.4514 1254.6236 1242.8611 
        9        10        11        12        13        14        15        16 
1234.1589 1281.0213 1358.5532 1524.1616 1622.4660 1677.0941 1617.6531 1637.3630 
       17        18        19        20 
1686.0597 1752.8491 1871.1538 1994.4998 

$coef
        a_0         a_1         a_2         a_3         a_4       b_1_1 
 -97.668526   21.027452 -185.952873   29.341691    1.060923    0.000000 
      b_1_2       b_1_3       b_1_4       b_2_2       b_2_3       b_2_4 
   0.000000    0.000000    0.000000    0.000000    0.000000    0.000000 
      b_3_3       b_3_4       b_4_4 
   0.000000    0.000000    0.000000 

$coefCov
               a_0           a_1          a_2          a_3           a_4 b_1_1
a_0    52830.85637  6.232121e+02 -40094.94301 -411.8508564  21.579570550     0
a_1      623.21210  1.606220e+01   -221.56287  -15.4028989  -0.002912368     0
a_2   -40094.94301 -2.215629e+02  47108.08564   25.2446450 -45.731815694     0
a_3     -411.85086 -1.540290e+01     25.24465   21.1101189  -0.111853875     0
a_4       21.57957 -2.912368e-03    -45.73182   -0.1118539   0.076651415     0
b_1_1      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_2      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_1_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_2      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_2_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_3_3      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_3_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
b_4_4      0.00000  0.000000e+00      0.00000    0.0000000   0.000000000     0
      b_1_2 b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 b_3_4 b_4_4
a_0       0     0     0     0     0     0     0     0     0
a_1       0     0     0     0     0     0     0     0     0
a_2       0     0     0     0     0     0     0     0     0
a_3       0     0     0     0     0     0     0     0     0
a_4       0     0     0     0     0     0     0     0     0
b_1_1     0     0     0     0     0     0     0     0     0
b_1_2     0     0     0     0     0     0     0     0     0
b_1_3     0     0     0     0     0     0     0     0     0
b_1_4     0     0     0     0     0     0     0     0     0
b_2_2     0     0     0     0     0     0     0     0     0
b_2_3     0     0     0     0     0     0     0     0     0
b_2_4     0     0     0     0     0     0     0     0     0
b_3_3     0     0     0     0     0     0     0     0     0
b_3_4     0     0     0     0     0     0     0     0     0
b_4_4     0     0     0     0     0     0     0     0     0

$r2
[1] 0.9917374

$r2bar
[1] 0.989534

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "time"      "qLabor"    "land"      "qVarInput"

$regScale
[1] 1

$model.matrix
        a_1  a_2   a_3      a_4
 [1,] 1   1 1.44 23.40 556.5471
 [2,] 1   2 1.45 24.20 606.6394
 [3,] 1   3 1.44 24.69 607.9155
 [4,] 1   4 1.48 24.91 653.9603
 [5,] 1   5 1.48 24.91 647.6268
 [6,] 1   6 1.47 25.23 656.9892
 [7,] 1   7 1.45 25.91 673.4591
 [8,] 1   8 1.49 25.97 647.9037
 [9,] 1   9 1.48 25.18 639.9773
[10,] 1  10 1.53 26.07 648.4779
[11,] 1  11 1.53 26.77 682.3780
[12,] 1  12 1.69 29.87 760.9644
[13,] 1  13 1.70 31.11 801.2621
[14,] 1  14 1.67 32.19 797.8057
[15,] 1  15 1.65 31.52 736.9826
[16,] 1  16 1.61 31.88 718.7734
[17,] 1  17 1.62 33.54 700.6963
[18,] 1  18 1.62 35.06 701.7920
[19,] 1  19 1.62 37.31 731.2555
[20,] 1  20 1.62 39.39 770.1724

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( xNames = NULL,
+    shifterNames = c( "time", "qLabor", "land", "qVarInput" ), 
+    data = germanFarms, coef( estResultLinear ) )
> all.equal( fitted, estResultLinear$fitted )
[1] TRUE
> fitted <- quadFuncCalc( xNames = c( "time", "qLabor", "land", "qVarInput" ), 
+    data = germanFarms, coef( estResultLin ) )
> all.equal( fitted, estResultLin$fitted )
[1] TRUE
> all.equal( estResultLinear$fitted, estResultLin$fitted )
[1] TRUE
> # compute partial derivatives
> margProducts <- quadFuncDeriv(
+    c( "qLabor", "land", "qVarInput", "time" ),
+    data = germanFarms, coef = coef( estResultLin ), 
+    coefCov = vcov( estResultLin ) )
> sd( margProducts )
   qLabor      land qVarInput      time 
        0         0         0         0 
> all.equal( margProducts[1,], coef( estResultLin )[2:5],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( attributes( margProducts )$variance[1,], diag( vcov( estResultLin ) )[2:5], 
+    check.attributes = FALSE )
[1] TRUE
> 
> ## estimate a quadratic production function with a logical variable as shifter
> germanFarms$reUnif <- germanFarms$time >= 16
> estResultShifterLogi <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "reUnif" ), data = germanFarms )
> coef( estResultShifterLogi )
          a_0           a_1           a_2           a_3         b_1_1 
-1.990828e+04  1.690581e+04  4.866782e+02  8.212190e-01 -4.351186e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-2.325996e+02 -5.448542e+00 -1.176896e+00 -2.710497e-02  1.313940e-02 
     d_1_TRUE 
-9.482580e+01 
> print( estResultShifterLogi )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = c("reUnif"))

$nExog
[1] 3

$nShifter
[1] 1

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.991e+04    1.691e+04    4.867e+02    8.212e-01   -4.351e+03   -2.326e+02  
      b_1_3        b_2_2        b_2_3        b_3_3     d_1_TRUE  
 -5.449e+00   -1.177e+00   -2.710e-02    1.314e-02   -9.483e+01  


$residuals
         1          2          3          4          5          6          7 
 20.604471 -64.605546   6.524302  10.391243  20.721355   2.259504  -6.916576 
         8          9         10         11         12         13         14 
 21.641444  28.638245 -27.533206 -19.880861  15.471111 -17.178267   5.183916 
        15         16         17         18         19         20 
  4.678864  13.369429 -21.798150   1.708368  13.220592  -6.500239 

$fitted
        1         2         3         4         5         6         7         8 
 925.5285 1027.3360 1063.0549 1161.4052 1157.3947 1183.5505 1246.2744 1266.9195 
        9        10        11        12        13        14        15        16 
1179.0680 1305.9417 1380.4735 1525.3130 1592.2129 1690.7755 1640.0102 1612.6617 
       17        18        19        20 
1676.8380 1753.8914 1874.1997 1998.3943 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.990828e+04  1.690581e+04  4.866782e+02  8.212190e-01 -4.351186e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-2.325996e+02 -5.448542e+00 -1.176896e+00 -2.710497e-02  1.313940e-02 
     d_1_TRUE 
-9.482580e+01 

$coefCov
                   a_0           a_1           a_2           a_3         b_1_1
a_0       2.786405e+07 -4.043317e+07 -3.081951e+05  2.264356e+04  2.850005e+07
a_1      -4.043317e+07  7.811110e+07 -1.679947e+05 -5.177629e+04 -7.810369e+07
a_2      -3.081951e+05 -1.679947e+05  8.978152e+04 -2.254002e+03  3.150034e+05
a_3       2.264356e+04 -5.177629e+04 -2.254002e+03  1.381297e+02  7.960645e+04
b_1_1     2.850005e+07 -7.810369e+07  3.150034e+05  7.960645e+04  1.063866e+08
b_1_2     9.358953e+04  3.084614e+05 -5.282890e+04  1.117846e+03 -4.446700e+05
b_1_3    -9.043177e+03  4.970714e+04  1.552688e+03 -1.447901e+02 -1.070957e+05
b_2_2    -4.025270e+03  4.146511e+03  1.800095e+02 -5.181383e+00 -8.004373e+02
b_2_3     3.989363e+02 -6.399879e+02 -1.367045e+01  8.225152e-01  5.750069e+02
b_3_3    -2.956230e+01 -8.842552e+00  2.671346e-01  9.276717e-02  1.008238e+02
d_1_TRUE  4.769959e+04 -3.715721e+04 -3.747840e+03  9.028653e+01  3.756961e+04
                 b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0       9.358953e+04 -9.043177e+03 -4.025270e+03  3.989363e+02 -2.956230e+01
a_1       3.084614e+05  4.970714e+04  4.146511e+03 -6.399879e+02 -8.842552e+00
a_2      -5.282890e+04  1.552688e+03  1.800095e+02 -1.367045e+01  2.671346e-01
a_3       1.117846e+03 -1.447901e+02 -5.181383e+00  8.225152e-01  9.276717e-02
b_1_1    -4.446700e+05 -1.070957e+05 -8.004373e+02  5.750069e+02  1.008238e+02
b_1_2     3.403777e+04 -7.679693e+02 -9.318702e+01  1.156566e+00  1.058483e-01
b_1_3    -7.679693e+02  1.961824e+02 -4.727081e-02 -3.926159e-01 -2.171184e-01
b_2_2    -9.318702e+01 -4.727081e-02  8.876706e+00 -4.428769e-01  2.632042e-02
b_2_3     1.156566e+00 -3.926159e-01 -4.428769e-01  3.580719e-02 -1.814045e-03
b_3_3     1.058483e-01 -2.171184e-01  2.632042e-02 -1.814045e-03  4.327921e-04
d_1_TRUE  1.256177e+03 -7.269912e+01  1.078335e+01  1.445865e+00 -9.532690e-03
              d_1_TRUE
a_0       4.769959e+04
a_1      -3.715721e+04
a_2      -3.747840e+03
a_3       9.028653e+01
b_1_1     3.756961e+04
b_1_2     1.256177e+03
b_1_3    -7.269912e+01
b_2_2     1.078335e+01
b_2_3     1.445865e+00
b_3_3    -9.532690e-03
d_1_TRUE  2.529471e+03

$r2
[1] 0.994842

$r2bar
[1] 0.989111

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "reUnif"

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3   b_1_1   b_1_2     b_1_3    b_2_2    b_2_3
 [1,] 1 1.44 23.40 556.5471 1.03680 33.6960  801.4279 273.7800 13023.20
 [2,] 1 1.45 24.20 606.6394 1.05125 35.0900  879.6271 292.8200 14680.67
 [3,] 1 1.44 24.69 607.9155 1.03680 35.5536  875.3984 304.7981 15009.43
 [4,] 1 1.48 24.91 653.9603 1.09520 36.8668  967.8612 310.2541 16290.15
 [5,] 1 1.48 24.91 647.6268 1.09520 36.8668  958.4876 310.2541 16132.38
 [6,] 1 1.47 25.23 656.9892 1.08045 37.0881  965.7741 318.2765 16575.84
 [7,] 1 1.45 25.91 673.4591 1.05125 37.5695  976.5157 335.6641 17449.33
 [8,] 1 1.49 25.97 647.9037 1.11005 38.6953  965.3766 337.2204 16826.06
 [9,] 1 1.48 25.18 639.9773 1.09520 37.2664  947.1665 317.0162 16114.63
[10,] 1 1.53 26.07 648.4779 1.17045 39.8871  992.1712 339.8225 16905.82
[11,] 1 1.53 26.77 682.3780 1.17045 40.9581 1044.0383 358.3164 18267.26
[12,] 1 1.69 29.87 760.9644 1.42805 50.4803 1286.0298 446.1085 22730.01
[13,] 1 1.70 31.11 801.2621 1.44500 52.8870 1362.1456 483.9160 24927.26
[14,] 1 1.67 32.19 797.8057 1.39445 53.7573 1332.3355 518.0980 25681.37
[15,] 1 1.65 31.52 736.9826 1.36125 52.0080 1216.0213 496.7552 23229.69
[16,] 1 1.61 31.88 718.7734 1.29605 51.3268 1157.2251 508.1672 22914.49
[17,] 1 1.62 33.54 700.6963 1.31220 54.3348 1135.1279 562.4658 23501.35
[18,] 1 1.62 35.06 701.7920 1.31220 56.7972 1136.9030 614.6018 24604.83
[19,] 1 1.62 37.31 731.2555 1.31220 60.4422 1184.6339 696.0181 27283.14
[20,] 1 1.62 39.39 770.1724 1.31220 63.8118 1247.6793 775.7861 30337.09
         b_3_3 d_1_
 [1,] 154872.4    0
 [2,] 184005.7    0
 [3,] 184780.6    0
 [4,] 213832.0    0
 [5,] 209710.2    0
 [6,] 215817.4    0
 [7,] 226773.6    0
 [8,] 209889.6    0
 [9,] 204785.5    0
[10,] 210261.8    0
[11,] 232819.8    0
[12,] 289533.4    0
[13,] 321010.5    0
[14,] 318247.0    0
[15,] 271571.7    0
[16,] 258317.6    1
[17,] 245487.6    1
[18,] 246256.0    1
[19,] 267367.3    1
[20,] 296582.8    1

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "reUnif" ), data = germanFarms, 
+    coef( estResultShifterLogi ) )
> all.equal( fitted, estResultShifterLogi$fitted )
[1] TRUE
> 
> ## estimate a quadratic production function with a factor as shifter
> germanFarms$decade <- as.factor( c( rep( "70s", 5 ), rep( "80s", 10 ), 
+    rep( "90s", 5 ) ) )
> estResultShifterFac <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "decade" ), data = germanFarms )
> coef( estResultShifterFac )
          a_0           a_1           a_2           a_3         b_1_1 
-1.927905e+04  1.688786e+04  4.376618e+02  9.902445e-01 -5.071904e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-2.052190e+02 -4.850353e+00 -1.181648e+00 -2.071989e-02  1.128681e-02 
      d_1_80s       d_1_90s 
 7.611663e+00 -8.287946e+01 
> print( estResultShifterFac )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = c("decade"))

$nExog
[1] 3

$nShifter
[1] 1

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.928e+04    1.689e+04    4.377e+02    9.902e-01   -5.072e+03   -2.052e+02  
      b_1_3        b_2_2        b_2_3        b_3_3      d_1_80s      d_1_90s  
 -4.850e+00   -1.182e+00   -2.072e-02    1.129e-02    7.612e+00   -8.288e+01  


$residuals
         1          2          3          4          5          6          7 
 20.422059 -64.915028   8.652605  12.730589  23.109774  -1.568464  -6.405261 
         8          9         10         11         12         13         14 
 21.055905  24.795299 -27.532510 -18.464003  15.593624 -17.655733   5.487892 
        15         16         17         18         19         20 
  4.693251  13.399213 -21.926868   2.040879  12.901448  -6.414672 

$fitted
       1        2        3        4        5        6        7        8 
 925.711 1027.646 1060.927 1159.066 1155.006 1187.378 1245.763 1267.505 
       9       10       11       12       13       14       15       16 
1182.911 1305.941 1379.057 1525.190 1592.690 1690.472 1639.996 1612.632 
      17       18       19       20 
1676.967 1753.559 1874.519 1998.309 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.927905e+04  1.688786e+04  4.376618e+02  9.902445e-01 -5.071904e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-2.052190e+02 -4.850353e+00 -1.181648e+00 -2.071989e-02  1.128681e-02 
      d_1_80s       d_1_90s 
 7.611663e+00 -8.287946e+01 

$coefCov
                  a_0           a_1           a_2           a_3         b_1_1
a_0      4.045913e+07 -4.551072e+07 -1.067660e+06  2.783125e+04  2.126494e+07
a_1     -4.551072e+07  8.741630e+07 -1.673680e+05 -5.801040e+04 -8.709722e+07
a_2     -1.067660e+06 -1.673680e+05  1.567724e+05 -2.716454e+03  1.180373e+06
a_3      2.783125e+04 -5.801040e+04 -2.716454e+03  1.552409e+02  8.622730e+04
b_1_1    2.126494e+07 -8.709722e+07  1.180373e+06  8.622730e+04  1.312227e+08
b_1_2    5.084758e+05  3.336577e+05 -9.056874e+04  1.359361e+03 -9.600516e+05
b_1_3   -1.298884e+03  5.537215e+04  1.050379e+03 -1.596552e+02 -1.299467e+05
b_2_2   -4.574470e+03  4.642073e+03  2.068945e+02 -5.816951e+00 -8.154584e+02
b_2_3    5.405746e+02 -7.188529e+02 -2.263207e+01  9.457116e-01  5.356082e+02
b_3_3   -6.039876e+01 -9.115630e+00  2.426956e+00  9.647118e-02  1.441146e+02
d_1_80s  1.122392e+05 -3.202547e+03 -8.743356e+03  3.015012e+01 -1.285591e+05
d_1_90s  2.295343e+05 -4.660641e+04 -1.791646e+04  1.483534e+02 -1.597291e+05
                b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0      5.084758e+05 -1.298884e+03 -4.574470e+03  5.405746e+02 -6.039876e+01
a_1      3.336577e+05  5.537215e+04  4.642073e+03 -7.188529e+02 -9.115630e+00
a_2     -9.056874e+04  1.050379e+03  2.068945e+02 -2.263207e+01  2.426956e+00
a_3      1.359361e+03 -1.596552e+02 -5.816951e+00  9.457116e-01  9.647118e-02
b_1_1   -9.600516e+05 -1.299467e+05 -8.154584e+02  5.356082e+02  1.441146e+02
b_1_2    5.565821e+04 -4.755509e+02 -1.073281e+02  5.391244e+00 -1.070271e+00
b_1_3   -4.755509e+02  2.279198e+02 -1.195091e-01 -3.498413e-01 -2.689324e-01
b_2_2   -1.073281e+02 -1.195091e-01  9.933839e+00 -4.963040e-01  2.965967e-02
b_2_3    5.391244e+00 -3.498413e-01 -4.963040e-01  4.102477e-02 -2.307179e-03
b_3_3   -1.070271e+00 -2.689324e-01  2.965967e-02 -2.307179e-03  5.647369e-04
d_1_80s  4.884053e+03  1.067027e+02 -8.475990e-01  1.138946e+00 -3.304570e-01
d_1_90s  9.071116e+03  8.611506e+01  1.073661e+01  3.405519e+00 -5.293124e-01
              d_1_80s       d_1_90s
a_0      1.122392e+05  2.295343e+05
a_1     -3.202547e+03 -4.660641e+04
a_2     -8.743356e+03 -1.791646e+04
a_3      3.015012e+01  1.483534e+02
b_1_1   -1.285591e+05 -1.597291e+05
b_1_2    4.884053e+03  9.071116e+03
b_1_3    1.067027e+02  8.611506e+01
b_2_2   -8.475990e-01  1.073661e+01
b_2_3    1.138946e+00  3.405519e+00
b_3_3   -3.304570e-01 -5.293124e-01
d_1_80s  1.357739e+03  2.130943e+03
d_1_90s  2.130943e+03  6.175024e+03

$r2
[1] 0.9948694

$r2bar
[1] 0.9878149

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "decade"

$regScale
[1] 1

$model.matrix
          a_1    a_2     a_3        b_1_1     b_1_2     b_1_3       b_2_2     
 [1,] "1" "1.44" "23.40" "556.5471" "1.03680" "33.6960" " 801.4279" "273.7800"
 [2,] "1" "1.45" "24.20" "606.6394" "1.05125" "35.0900" " 879.6271" "292.8200"
 [3,] "1" "1.44" "24.69" "607.9155" "1.03680" "35.5536" " 875.3984" "304.7981"
 [4,] "1" "1.48" "24.91" "653.9603" "1.09520" "36.8668" " 967.8612" "310.2541"
 [5,] "1" "1.48" "24.91" "647.6268" "1.09520" "36.8668" " 958.4876" "310.2541"
 [6,] "1" "1.47" "25.23" "656.9892" "1.08045" "37.0881" " 965.7741" "318.2765"
 [7,] "1" "1.45" "25.91" "673.4591" "1.05125" "37.5695" " 976.5157" "335.6641"
 [8,] "1" "1.49" "25.97" "647.9037" "1.11005" "38.6953" " 965.3766" "337.2204"
 [9,] "1" "1.48" "25.18" "639.9773" "1.09520" "37.2664" " 947.1665" "317.0162"
[10,] "1" "1.53" "26.07" "648.4779" "1.17045" "39.8871" " 992.1712" "339.8225"
[11,] "1" "1.53" "26.77" "682.3780" "1.17045" "40.9581" "1044.0383" "358.3164"
[12,] "1" "1.69" "29.87" "760.9644" "1.42805" "50.4803" "1286.0298" "446.1085"
[13,] "1" "1.70" "31.11" "801.2621" "1.44500" "52.8870" "1362.1456" "483.9160"
[14,] "1" "1.67" "32.19" "797.8057" "1.39445" "53.7573" "1332.3355" "518.0980"
[15,] "1" "1.65" "31.52" "736.9826" "1.36125" "52.0080" "1216.0213" "496.7552"
[16,] "1" "1.61" "31.88" "718.7734" "1.29605" "51.3268" "1157.2251" "508.1672"
[17,] "1" "1.62" "33.54" "700.6963" "1.31220" "54.3348" "1135.1279" "562.4658"
[18,] "1" "1.62" "35.06" "701.7920" "1.31220" "56.7972" "1136.9030" "614.6018"
[19,] "1" "1.62" "37.31" "731.2555" "1.31220" "60.4422" "1184.6339" "696.0181"
[20,] "1" "1.62" "39.39" "770.1724" "1.31220" "63.8118" "1247.6793" "775.7861"
      b_2_3      b_3_3      d_1_ 
 [1,] "13023.20" "154872.4" "70s"
 [2,] "14680.67" "184005.7" "70s"
 [3,] "15009.43" "184780.6" "70s"
 [4,] "16290.15" "213832.0" "70s"
 [5,] "16132.38" "209710.2" "70s"
 [6,] "16575.84" "215817.4" "80s"
 [7,] "17449.33" "226773.6" "80s"
 [8,] "16826.06" "209889.6" "80s"
 [9,] "16114.63" "204785.5" "80s"
[10,] "16905.82" "210261.8" "80s"
[11,] "18267.26" "232819.8" "80s"
[12,] "22730.01" "289533.4" "80s"
[13,] "24927.26" "321010.5" "80s"
[14,] "25681.37" "318247.0" "80s"
[15,] "23229.69" "271571.7" "80s"
[16,] "22914.49" "258317.6" "90s"
[17,] "23501.35" "245487.6" "90s"
[18,] "24604.83" "246256.0" "90s"
[19,] "27283.14" "267367.3" "90s"
[20,] "30337.09" "296582.8" "90s"

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "decade" ), data = germanFarms, 
+    coef( estResultShifterFac ) )
> all.equal( fitted, estResultShifterFac$fitted )
[1] TRUE
> 
> ## estimate a quadratic production function with some shifters are logical
> estResultShifterLogi2 <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "reUnif" ), data = germanFarms )
> coef( estResultShifterLogi2 )
          a_0           a_1           a_2           a_3         b_1_1 
-1.609878e+04  1.390055e+04  3.616060e+02  1.733150e+00 -3.732136e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-1.672779e+02 -5.110142e+00 -8.851957e-01 -1.953044e-02  1.081221e-02 
          d_1      d_2_TRUE 
 5.352456e+00 -8.704237e+01 
> print( estResultShifterLogi2 )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = c("time", "reUnif"))

$nExog
[1] 3

$nShifter
[1] 2

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.610e+04    1.390e+04    3.616e+02    1.733e+00   -3.732e+03   -1.673e+02  
      b_1_3        b_2_2        b_2_3        b_3_3          d_1     d_2_TRUE  
 -5.110e+00   -8.852e-01   -1.953e-02    1.081e-02    5.352e+00   -8.704e+01  


$residuals
         1          2          3          4          5          6          7 
 20.280210 -62.628824   9.129997  16.474404  22.002610   0.343899  -7.455924 
         8          9         10         11         12         13         14 
 25.574151  13.684651 -26.916705 -18.702369  17.404564 -20.082781   7.416194 
        15         16         17         18         19         20 
  3.475924  13.421351 -22.090649   1.946773  13.494285  -6.771759 

$fitted
        1         2         3         4         5         6         7         8 
 925.8528 1025.3593 1060.4492 1155.3221 1156.1134 1185.4661 1246.8138 1262.9868 
        9        10        11        12        13        14        15        16 
1194.0215 1305.3252 1379.2950 1523.3795 1595.1174 1688.5432 1641.2132 1612.6098 
       17        18        19        20 
1677.1305 1753.6530 1873.9260 1998.6658 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.609878e+04  1.390055e+04  3.616060e+02  1.733150e+00 -3.732136e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-1.672779e+02 -5.110142e+00 -8.851957e-01 -1.953044e-02  1.081221e-02 
          d_1      d_2_TRUE 
 5.352456e+00 -8.704237e+01 

$coefCov
                   a_0           a_1           a_2           a_3         b_1_1
a_0       8.134741e+07 -8.421992e+07 -2.011721e+06  3.682691e+04  3.926270e+07
a_1      -8.421992e+07  1.166474e+08  1.140366e+06 -6.589591e+04 -9.140058e+07
a_2      -2.011721e+06  1.140366e+06  1.525951e+05 -2.850200e+03  6.972643e+04
a_3       3.682691e+04 -6.589591e+04 -2.850200e+03  1.529929e+02  8.847241e+04
b_1_1     3.926270e+07 -9.140058e+07  6.972643e+04  8.847241e+04  1.169287e+08
b_1_2     9.774716e+05 -3.557853e+05 -8.614784e+04  1.424095e+03 -3.407777e+05
b_1_3    -5.287567e+03  5.042330e+04  1.537903e+03 -1.562159e+02 -1.156130e+05
b_2_2    -4.621618e+02  1.419536e+03  6.716198e+01 -4.692912e+00 -2.340715e+02
b_2_3     5.349648e+02 -7.754070e+02 -1.818598e+01  9.179026e-01  6.411984e+02
b_3_3    -6.331843e+01  1.500778e+01  1.314617e+00  9.331443e-02  1.044661e+02
d_1       7.176252e+04 -5.661244e+04 -2.356082e+03  1.717875e+01  1.166152e+04
d_2_TRUE  1.561770e+05 -1.226927e+05 -7.497869e+03  1.230695e+02  5.777407e+04
                 b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0       9.774716e+05 -5.287567e+03 -462.16182439  5.349648e+02 -6.331843e+01
a_1      -3.557853e+05  5.042330e+04 1419.53589323 -7.754070e+02  1.500778e+01
a_2      -8.614784e+04  1.537903e+03   67.16197896 -1.818598e+01  1.314617e+00
a_3       1.424095e+03 -1.562159e+02   -4.69291158  9.179026e-01  9.331443e-02
b_1_1    -3.407777e+05 -1.156130e+05 -234.07147346  6.411984e+02  1.044661e+02
b_1_2     5.199641e+04 -7.565352e+02  -34.17844638  2.997873e+00 -4.200193e-01
b_1_3    -7.565352e+02  2.135384e+02    0.29605614 -4.175223e-01 -2.386521e-01
b_2_2    -3.417845e+01  2.960561e-01    9.94324722 -4.733715e-01  2.620572e-02
b_2_3     2.997873e+00 -4.175223e-01   -0.47337146  3.910336e-02 -2.032843e-03
b_3_3    -4.200193e-01 -2.386521e-01    0.02620572 -2.032843e-03  4.892521e-04
d_1       1.230516e+03  6.374708e+00    5.49499092  1.426872e-01 -4.383903e-02
d_2_TRUE  3.154118e+03 -6.971139e+01   19.70587516  1.778301e+00 -7.410620e-02
                   d_1      d_2_TRUE
a_0       7.176252e+04  1.561770e+05
a_1      -5.661244e+04 -1.226927e+05
a_2      -2.356082e+03 -7.497869e+03
a_3       1.717875e+01  1.230695e+02
b_1_1     1.166152e+04  5.777407e+04
b_1_2     1.230516e+03  3.154118e+03
b_1_3     6.374708e+00 -6.971139e+01
b_2_2     5.494991e+00  1.970588e+01
b_2_3     1.426872e-01  1.778301e+00
b_3_3    -4.383903e-02 -7.410620e-02
d_1       1.008284e+02  1.466224e+02
d_2_TRUE  1.466224e+02  2.961268e+03

$r2
[1] 0.995019

$r2bar
[1] 0.98817

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "time"   "reUnif"

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3   b_1_1   b_1_2     b_1_3    b_2_2    b_2_3
 [1,] 1 1.44 23.40 556.5471 1.03680 33.6960  801.4279 273.7800 13023.20
 [2,] 1 1.45 24.20 606.6394 1.05125 35.0900  879.6271 292.8200 14680.67
 [3,] 1 1.44 24.69 607.9155 1.03680 35.5536  875.3984 304.7981 15009.43
 [4,] 1 1.48 24.91 653.9603 1.09520 36.8668  967.8612 310.2541 16290.15
 [5,] 1 1.48 24.91 647.6268 1.09520 36.8668  958.4876 310.2541 16132.38
 [6,] 1 1.47 25.23 656.9892 1.08045 37.0881  965.7741 318.2765 16575.84
 [7,] 1 1.45 25.91 673.4591 1.05125 37.5695  976.5157 335.6641 17449.33
 [8,] 1 1.49 25.97 647.9037 1.11005 38.6953  965.3766 337.2204 16826.06
 [9,] 1 1.48 25.18 639.9773 1.09520 37.2664  947.1665 317.0162 16114.63
[10,] 1 1.53 26.07 648.4779 1.17045 39.8871  992.1712 339.8225 16905.82
[11,] 1 1.53 26.77 682.3780 1.17045 40.9581 1044.0383 358.3164 18267.26
[12,] 1 1.69 29.87 760.9644 1.42805 50.4803 1286.0298 446.1085 22730.01
[13,] 1 1.70 31.11 801.2621 1.44500 52.8870 1362.1456 483.9160 24927.26
[14,] 1 1.67 32.19 797.8057 1.39445 53.7573 1332.3355 518.0980 25681.37
[15,] 1 1.65 31.52 736.9826 1.36125 52.0080 1216.0213 496.7552 23229.69
[16,] 1 1.61 31.88 718.7734 1.29605 51.3268 1157.2251 508.1672 22914.49
[17,] 1 1.62 33.54 700.6963 1.31220 54.3348 1135.1279 562.4658 23501.35
[18,] 1 1.62 35.06 701.7920 1.31220 56.7972 1136.9030 614.6018 24604.83
[19,] 1 1.62 37.31 731.2555 1.31220 60.4422 1184.6339 696.0181 27283.14
[20,] 1 1.62 39.39 770.1724 1.31220 63.8118 1247.6793 775.7861 30337.09
         b_3_3 d_1 d_2_
 [1,] 154872.4   1    0
 [2,] 184005.7   2    0
 [3,] 184780.6   3    0
 [4,] 213832.0   4    0
 [5,] 209710.2   5    0
 [6,] 215817.4   6    0
 [7,] 226773.6   7    0
 [8,] 209889.6   8    0
 [9,] 204785.5   9    0
[10,] 210261.8  10    0
[11,] 232819.8  11    0
[12,] 289533.4  12    0
[13,] 321010.5  13    0
[14,] 318247.0  14    0
[15,] 271571.7  15    0
[16,] 258317.6  16    1
[17,] 245487.6  17    1
[18,] 246256.0  18    1
[19,] 267367.3  19    1
[20,] 296582.8  20    1

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "reUnif" ), data = germanFarms, 
+    coef( estResultShifterLogi2 ) )
> all.equal( fitted, estResultShifterLogi2$fitted )
[1] TRUE
> 
> ## estimate a quadratic production function with some shifters are factors
> estResultShifterFac2 <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "decade" ), data = germanFarms )
> coef( estResultShifterFac2 )
          a_0           a_1           a_2           a_3         b_1_1 
-1.533586e+04  1.248207e+04  3.849607e+02  1.884377e+00 -2.203466e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-1.825149e+02 -5.967992e+00 -7.364281e-01 -2.677647e-02  1.285215e-02 
          d_1       d_2_80s       d_2_90s 
 7.933391e+00 -1.299204e+01 -1.036800e+02 
> print( estResultShifterFac2 )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput"), 
    data = germanFarms, shifterNames = c("time", "decade"))

$nExog
[1] 3

$nShifter
[1] 2

$est

Call:
lm(formula = as.formula(estFormula), data = estData)

Coefficients:
(Intercept)          a_1          a_2          a_3        b_1_1        b_1_2  
 -1.534e+04    1.248e+04    3.850e+02    1.884e+00   -2.203e+03   -1.825e+02  
      b_1_3        b_2_2        b_2_3        b_3_3          d_1      d_2_80s  
 -5.968e+00   -7.364e-01   -2.678e-02    1.285e-02    7.933e+00   -1.299e+01  
    d_2_90s  
 -1.037e+02  


$residuals
         1          2          3          4          5          6          7 
 20.435203 -61.147414   6.753737  15.414744  18.543729   5.954008  -8.588738 
         8          9         10         11         12         13         14 
 28.469921  13.033456 -26.620618 -20.552483  18.127756 -20.668360   7.973745 
        15         16         17         18         19         20 
  2.871313  13.395550 -22.011987   1.494182  14.170992  -7.048737 

$fitted
        1         2         3         4         5         6         7         8 
 925.6978 1023.8779 1062.8254 1156.3817 1159.5723 1179.8560 1247.9466 1260.0910 
        9        10        11        12        13        14        15        16 
1194.6727 1305.0291 1381.1451 1522.6563 1595.7030 1687.9856 1641.8178 1612.6356 
       17        18        19        20 
1677.0518 1754.1056 1873.2493 1998.9428 

$coef
          a_0           a_1           a_2           a_3         b_1_1 
-1.533586e+04  1.248207e+04  3.849607e+02  1.884377e+00 -2.203466e+03 
        b_1_2         b_1_3         b_2_2         b_2_3         b_3_3 
-1.825149e+02 -5.967992e+00 -7.364281e-01 -2.677647e-02  1.285215e-02 
          d_1       d_2_80s       d_2_90s 
 7.933391e+00 -1.299204e+01 -1.036800e+02 

$coefCov
                  a_0           a_1           a_2           a_3         b_1_1
a_0      1.028964e+08 -1.153035e+08 -1.955330e+06  4.387249e+04  6.585985e+07
a_1     -1.153035e+08  1.690881e+08  6.871191e+05 -7.865044e+04 -1.433175e+08
a_2     -1.955330e+06  6.871191e+05  1.830216e+05 -3.167519e+03  7.322066e+05
a_3      4.387249e+04 -7.865044e+04 -3.167519e+03  1.739126e+02  1.045571e+05
b_1_1    6.585985e+07 -1.433175e+08  7.322066e+05  1.045571e+05  1.753480e+08
b_1_2    8.957894e+05 -8.059300e+03 -1.042020e+05  1.572771e+03 -8.125595e+05
b_1_3   -1.796925e+04  7.944141e+04  1.377461e+03 -1.795225e+02 -1.550959e+05
b_2_2    1.552279e+03 -2.250775e+03  1.397240e+02 -4.910192e+00  3.894982e+03
b_2_3    5.055171e+02 -6.912778e+02 -2.371886e+01  1.020856e+00  5.244784e+02
b_3_3   -4.333145e+01 -3.591782e+01  2.362359e+00  1.114624e-01  1.755135e+02
d_1      1.174013e+05 -1.311741e+05 -1.569076e+03  2.662113e+01  8.540236e+04
d_2_80s -1.813319e+05  3.371447e+05 -5.550957e+03 -3.594365e+01 -3.633343e+05
d_2_90s -5.510834e+04  2.926133e+05 -1.561115e+04  9.353169e+01 -3.997694e+05
                b_1_2         b_1_3         b_2_2         b_2_3         b_3_3
a_0      8.957894e+05 -1.796925e+04  1.552279e+03  5.055171e+02 -4.333145e+01
a_1     -8.059300e+03  7.944141e+04 -2.250775e+03 -6.912778e+02 -3.591782e+01
a_2     -1.042020e+05  1.377461e+03  1.397240e+02 -2.371886e+01  2.362359e+00
a_3      1.572771e+03 -1.795225e+02 -4.910192e+00  1.020856e+00  1.114624e-01
b_1_1   -8.125595e+05 -1.550959e+05  3.894982e+03  5.244784e+02  1.755135e+02
b_1_2    6.321135e+04 -6.187865e+02 -8.022740e+01  5.419426e+00 -1.044937e+00
b_1_3   -6.187865e+02  2.556158e+02 -1.998993e+00 -3.597537e-01 -3.026463e-01
b_2_2   -8.022740e+01 -1.998993e+00  1.168055e+01 -5.565249e-01  3.526923e-02
b_2_3    5.419426e+00 -3.597537e-01 -5.565249e-01  4.530383e-02 -2.575664e-03
b_3_3   -1.044937e+00 -3.026463e-01  3.526923e-02 -2.575664e-03  6.309419e-04
d_1      6.759716e+02 -3.327561e+01  1.325559e+01 -1.803233e-01  4.660501e-02
d_2_80s  3.621534e+03  2.038939e+02 -3.535908e+01  1.722237e+00 -4.848534e-01
d_2_90s  8.214506e+03  1.820534e+02 -2.293429e+01  4.222090e+00 -7.049391e-01
                  d_1       d_2_80s       d_2_90s
a_0      1.174013e+05 -1.813319e+05 -5.510834e+04
a_1     -1.311741e+05  3.371447e+05  2.926133e+05
a_2     -1.569076e+03 -5.550957e+03 -1.561115e+04
a_3      2.662113e+01 -3.594365e+01  9.353169e+01
b_1_1    8.540236e+04 -3.633343e+05 -3.997694e+05
b_1_2    6.759716e+02  3.621534e+03  8.214506e+03
b_1_3   -3.327561e+01  2.038939e+02  1.820534e+02
b_2_2    1.325559e+01 -3.535908e+01 -2.293429e+01
b_2_3   -1.803233e-01  1.722237e+00  4.222090e+00
b_3_3    4.660501e-02 -4.848534e-01 -7.049391e-01
d_1      2.362018e+02 -6.134366e+02 -6.192960e+02
d_2_80s -6.134366e+02  3.087950e+03  3.954424e+03
d_2_90s -6.192960e+02  3.954424e+03  8.422112e+03

$r2
[1] 0.9950576

$r2bar
[1] 0.9865848

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$shifterNames
[1] "time"   "decade"

$regScale
[1] 1

$model.matrix
          a_1    a_2     a_3        b_1_1     b_1_2     b_1_3       b_2_2     
 [1,] "1" "1.44" "23.40" "556.5471" "1.03680" "33.6960" " 801.4279" "273.7800"
 [2,] "1" "1.45" "24.20" "606.6394" "1.05125" "35.0900" " 879.6271" "292.8200"
 [3,] "1" "1.44" "24.69" "607.9155" "1.03680" "35.5536" " 875.3984" "304.7981"
 [4,] "1" "1.48" "24.91" "653.9603" "1.09520" "36.8668" " 967.8612" "310.2541"
 [5,] "1" "1.48" "24.91" "647.6268" "1.09520" "36.8668" " 958.4876" "310.2541"
 [6,] "1" "1.47" "25.23" "656.9892" "1.08045" "37.0881" " 965.7741" "318.2765"
 [7,] "1" "1.45" "25.91" "673.4591" "1.05125" "37.5695" " 976.5157" "335.6641"
 [8,] "1" "1.49" "25.97" "647.9037" "1.11005" "38.6953" " 965.3766" "337.2204"
 [9,] "1" "1.48" "25.18" "639.9773" "1.09520" "37.2664" " 947.1665" "317.0162"
[10,] "1" "1.53" "26.07" "648.4779" "1.17045" "39.8871" " 992.1712" "339.8225"
[11,] "1" "1.53" "26.77" "682.3780" "1.17045" "40.9581" "1044.0383" "358.3164"
[12,] "1" "1.69" "29.87" "760.9644" "1.42805" "50.4803" "1286.0298" "446.1085"
[13,] "1" "1.70" "31.11" "801.2621" "1.44500" "52.8870" "1362.1456" "483.9160"
[14,] "1" "1.67" "32.19" "797.8057" "1.39445" "53.7573" "1332.3355" "518.0980"
[15,] "1" "1.65" "31.52" "736.9826" "1.36125" "52.0080" "1216.0213" "496.7552"
[16,] "1" "1.61" "31.88" "718.7734" "1.29605" "51.3268" "1157.2251" "508.1672"
[17,] "1" "1.62" "33.54" "700.6963" "1.31220" "54.3348" "1135.1279" "562.4658"
[18,] "1" "1.62" "35.06" "701.7920" "1.31220" "56.7972" "1136.9030" "614.6018"
[19,] "1" "1.62" "37.31" "731.2555" "1.31220" "60.4422" "1184.6339" "696.0181"
[20,] "1" "1.62" "39.39" "770.1724" "1.31220" "63.8118" "1247.6793" "775.7861"
      b_2_3      b_3_3      d_1  d_2_ 
 [1,] "13023.20" "154872.4" " 1" "70s"
 [2,] "14680.67" "184005.7" " 2" "70s"
 [3,] "15009.43" "184780.6" " 3" "70s"
 [4,] "16290.15" "213832.0" " 4" "70s"
 [5,] "16132.38" "209710.2" " 5" "70s"
 [6,] "16575.84" "215817.4" " 6" "80s"
 [7,] "17449.33" "226773.6" " 7" "80s"
 [8,] "16826.06" "209889.6" " 8" "80s"
 [9,] "16114.63" "204785.5" " 9" "80s"
[10,] "16905.82" "210261.8" "10" "80s"
[11,] "18267.26" "232819.8" "11" "80s"
[12,] "22730.01" "289533.4" "12" "80s"
[13,] "24927.26" "321010.5" "13" "80s"
[14,] "25681.37" "318247.0" "14" "80s"
[15,] "23229.69" "271571.7" "15" "80s"
[16,] "22914.49" "258317.6" "16" "90s"
[17,] "23501.35" "245487.6" "17" "90s"
[18,] "24604.83" "246256.0" "18" "90s"
[19,] "27283.14" "267367.3" "19" "90s"
[20,] "30337.09" "296582.8" "20" "90s"

attr(,"class")
[1] "quadFuncEst"
> # compute fitted values
> fitted <- quadFuncCalc( c( "qLabor", "land", "qVarInput" ),
+    shifterNames = c( "time", "decade" ), data = germanFarms, 
+    coef( estResultShifterFac2 ) )
> all.equal( fitted, estResultShifterFac2$fitted )
[1] TRUE
> 
> ## estimate with further argument passed to lm()
> estResult2 <- quadFuncEst( yName = "qOutput",
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    germanFarms, x = TRUE, y = TRUE )
> coef( estResult2 )
          a_0           a_1           a_2           a_3           a_4 
-1.890329e+04  1.639013e+04  2.886098e+01  1.922564e+01 -1.504347e+02 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
-1.144804e+04  2.449445e+02 -5.292270e+00 -1.445663e+02 -4.788050e+00 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
-3.671761e-01  5.183312e+00 -7.898751e-03  5.062034e-01 -1.299008e+01 
> print( estResult2 )
$call
quadFuncEst(yName = "qOutput", xNames = c("qLabor", "land", "qVarInput", 
    "time"), data = germanFarms, x = TRUE, y = TRUE)

$nExog
[1] 4

$nShifter
[1] 0

$est

Call:
lm(formula = as.formula(estFormula), data = estData, x = TRUE,     y = TRUE)

Coefficients:
(Intercept)          a_1          a_2          a_3          a_4        b_1_1  
 -1.890e+04    1.639e+04    2.886e+01    1.923e+01   -1.504e+02   -1.145e+04  
      b_1_2        b_1_3        b_1_4        b_2_2        b_2_3        b_2_4  
  2.449e+02   -5.292e+00   -1.446e+02   -4.788e+00   -3.672e-01    5.183e+00  
      b_3_3        b_3_4        b_4_4  
 -7.899e-03    5.062e-01   -1.299e+01  


$residuals
          1           2           3           4           5           6 
  7.4317860 -39.3646837  21.6522928  32.4670677  -0.8156718 -21.6511019 
          7           8           9          10          11          12 
 -0.6396827  -4.2412344  12.9712813  -7.8273551  -2.8674999   2.9882212 
         13          14          15          16          17          18 
 -6.2501512   0.8632305   7.9416167   7.0569408 -20.6303595  13.7220787 
         19          20 
 -3.0665614   0.2597858 

$fitted
        1         2         3         4         5         6         7         8 
 938.7012 1002.0952 1047.9269 1139.3294 1178.9317 1207.4611 1239.9975 1292.8022 
        9        10        11        12        13        14        15        16 
1194.7349 1286.2359 1363.4601 1537.7959 1581.2848 1695.0962 1636.7475 1618.9742 
       17        18        19        20 
1675.6702 1741.8777 1890.4868 1991.6342 

$coef
          a_0           a_1           a_2           a_3           a_4 
-1.890329e+04  1.639013e+04  2.886098e+01  1.922564e+01 -1.504347e+02 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
-1.144804e+04  2.449445e+02 -5.292270e+00 -1.445663e+02 -4.788050e+00 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
-3.671761e-01  5.183312e+00 -7.898751e-03  5.062034e-01 -1.299008e+01 

$coefCov
                a_0           a_1           a_2           a_3           a_4
a_0    1.938122e+08 -2.197867e+08 -6.683403e+06  1.050371e+05  6.704211e+06
a_1   -2.197867e+08  2.810922e+08  6.632692e+06 -1.514196e+05 -7.658821e+06
a_2   -6.683403e+06  6.632692e+06  5.131468e+05 -1.060698e+04 -3.640068e+05
a_3    1.050371e+05 -1.514196e+05 -1.060698e+04  3.563356e+02  6.676131e+03
a_4    6.704211e+06 -7.658821e+06 -3.640068e+05  6.676131e+03  3.825467e+05
b_1_1  1.133446e+08 -1.693338e+08 -2.554375e+06  9.829579e+04  3.868908e+06
b_1_2  4.309227e+06 -4.617578e+06 -3.150258e+05  6.976473e+03  2.356747e+05
b_1_3 -5.148538e+04  8.652791e+04  5.883334e+03 -2.180073e+02 -3.895930e+03
b_1_4 -4.176748e+06  5.216439e+06  1.981659e+05 -4.235694e+03 -2.252302e+05
b_2_2 -3.051665e+04  5.436021e+04 -4.263755e+03  1.124861e+02  1.337243e+03
b_2_3  2.266125e+03 -2.433241e+03  1.662791e+01 -2.317933e+00  4.271345e+01
b_2_4 -4.872109e+04  4.085485e+04  6.713622e+03 -1.439969e+02 -4.858701e+03
b_3_3 -1.406268e+02  1.445588e+02  3.274342e+00  3.755283e-03 -3.919035e+00
b_3_4  3.100540e+02 -8.513935e+02 -9.783905e+01  4.006433e+00  5.871038e+01
b_4_4  8.309591e+04 -8.740156e+04 -5.399927e+03  9.410803e+01  5.214854e+03
              b_1_1         b_1_2         b_1_3         b_1_4         b_2_2
a_0    1.133446e+08  4.309227e+06 -5.148538e+04 -4.176748e+06 -3.051665e+04
a_1   -1.693338e+08 -4.617578e+06  8.652791e+04  5.216439e+06  5.436021e+04
a_2   -2.554375e+06 -3.150258e+05  5.883334e+03  1.981659e+05 -4.263755e+03
a_3    9.829579e+04  6.976473e+03 -2.180073e+02 -4.235694e+03  1.124861e+02
a_4    3.868908e+06  2.356747e+05 -3.895930e+03 -2.252302e+05  1.337243e+03
b_1_1  1.536166e+08  1.381829e+06 -1.231421e+05 -2.282655e+06 -2.619113e+04
b_1_2  1.381829e+06  2.194998e+05 -3.003684e+03 -1.550354e+05  1.317924e+03
b_1_3 -1.231421e+05 -3.003684e+03  2.468251e+02  1.525546e+03 -8.483942e+01
b_1_4 -2.282655e+06 -1.550354e+05  1.525546e+03  1.627540e+05  9.865411e+02
b_2_2 -2.619113e+04  1.317924e+03 -8.483942e+01  9.865411e+02  2.331666e+02
b_2_3  2.204152e+03 -2.736497e+01 -8.324291e-02 -1.759347e+01 -3.652819e+00
b_2_4 -2.312610e+04 -3.261164e+03  1.008205e+02  1.549118e+03 -1.687507e+02
b_3_3  4.577387e+01 -3.770877e+00 -2.224067e-01  4.528008e+00  1.562563e-01
b_3_4 -3.902702e+02  8.932954e+01 -6.175708e-01 -6.056596e+01  1.402122e+00
b_4_4  5.262098e+04  2.806790e+03 -7.191939e+01 -2.310513e+03  8.048059e+01
              b_2_3         b_2_4         b_3_3         b_3_4         b_4_4
a_0    2.266125e+03 -4.872109e+04 -1.406268e+02  310.05398037  8.309591e+04
a_1   -2.433241e+03  4.085485e+04  1.445588e+02 -851.39349501 -8.740156e+04
a_2    1.662791e+01  6.713622e+03  3.274342e+00  -97.83905287 -5.399927e+03
a_3   -2.317933e+00 -1.439969e+02  3.755283e-03    4.00643287  9.410803e+01
a_4    4.271345e+01 -4.858701e+03 -3.919035e+00   58.71038264  5.214854e+03
b_1_1  2.204152e+03 -2.312610e+04  4.577387e+01 -390.27017427  5.262098e+04
b_1_2 -2.736497e+01 -3.261164e+03 -3.770877e+00   89.32953972  2.806790e+03
b_1_3 -8.324291e-02  1.008205e+02 -2.224067e-01   -0.61757075 -7.191939e+01
b_1_4 -1.759347e+01  1.549118e+03  4.528008e+00  -60.56595685 -2.310513e+03
b_2_2 -3.652819e+00 -1.687507e+02  1.562563e-01    1.40212158  8.048059e+01
b_2_3  1.655302e-01  1.595141e+00 -2.065730e-03   -0.08986483  1.744246e-01
b_2_4  1.595141e+00  1.669957e+02 -5.795714e-02   -1.38071726 -1.096750e+02
b_3_3 -2.065730e-03 -5.795714e-02  6.190495e-04   -0.00219636  8.291250e-03
b_3_4 -8.986483e-02 -1.380717e+00 -2.196360e-03    0.09710849  4.405664e-01
b_4_4  1.744246e-01 -1.096750e+02  8.291250e-03    0.44056644  1.014342e+02

$r2
[1] 0.9973797

$r2bar
[1] 0.9900427

$nObs
[1] 20

$yName
[1] "qOutput"

$xNames
[1] "qLabor"    "land"      "qVarInput" "time"     

$regScale
[1] 1

$model.matrix
         a_1   a_2      a_3 a_4   b_1_1   b_1_2     b_1_3 b_1_4    b_2_2
 [1,] 1 1.44 23.40 556.5471   1 1.03680 33.6960  801.4279  1.44 273.7800
 [2,] 1 1.45 24.20 606.6394   2 1.05125 35.0900  879.6271  2.90 292.8200
 [3,] 1 1.44 24.69 607.9155   3 1.03680 35.5536  875.3984  4.32 304.7981
 [4,] 1 1.48 24.91 653.9603   4 1.09520 36.8668  967.8612  5.92 310.2541
 [5,] 1 1.48 24.91 647.6268   5 1.09520 36.8668  958.4876  7.40 310.2541
 [6,] 1 1.47 25.23 656.9892   6 1.08045 37.0881  965.7741  8.82 318.2765
 [7,] 1 1.45 25.91 673.4591   7 1.05125 37.5695  976.5157 10.15 335.6641
 [8,] 1 1.49 25.97 647.9037   8 1.11005 38.6953  965.3766 11.92 337.2204
 [9,] 1 1.48 25.18 639.9773   9 1.09520 37.2664  947.1665 13.32 317.0162
[10,] 1 1.53 26.07 648.4779  10 1.17045 39.8871  992.1712 15.30 339.8225
[11,] 1 1.53 26.77 682.3780  11 1.17045 40.9581 1044.0383 16.83 358.3164
[12,] 1 1.69 29.87 760.9644  12 1.42805 50.4803 1286.0298 20.28 446.1085
[13,] 1 1.70 31.11 801.2621  13 1.44500 52.8870 1362.1456 22.10 483.9160
[14,] 1 1.67 32.19 797.8057  14 1.39445 53.7573 1332.3355 23.38 518.0980
[15,] 1 1.65 31.52 736.9826  15 1.36125 52.0080 1216.0213 24.75 496.7552
[16,] 1 1.61 31.88 718.7734  16 1.29605 51.3268 1157.2251 25.76 508.1672
[17,] 1 1.62 33.54 700.6963  17 1.31220 54.3348 1135.1279 27.54 562.4658
[18,] 1 1.62 35.06 701.7920  18 1.31220 56.7972 1136.9030 29.16 614.6018
[19,] 1 1.62 37.31 731.2555  19 1.31220 60.4422 1184.6339 30.78 696.0181
[20,] 1 1.62 39.39 770.1724  20 1.31220 63.8118 1247.6793 32.40 775.7861
         b_2_3  b_2_4    b_3_3      b_3_4 b_4_4
 [1,] 13023.20  23.40 154872.4   556.5471   0.5
 [2,] 14680.67  48.40 184005.7  1213.2788   2.0
 [3,] 15009.43  74.07 184780.6  1823.7466   4.5
 [4,] 16290.15  99.64 213832.0  2615.8410   8.0
 [5,] 16132.38 124.55 209710.2  3238.1338  12.5
 [6,] 16575.84 151.38 215817.4  3941.9352  18.0
 [7,] 17449.33 181.37 226773.6  4714.2138  24.5
 [8,] 16826.06 207.76 209889.6  5183.2298  32.0
 [9,] 16114.63 226.62 204785.5  5759.7961  40.5
[10,] 16905.82 260.70 210261.8  6484.7792  50.0
[11,] 18267.26 294.47 232819.8  7506.1577  60.5
[12,] 22730.01 358.44 289533.4  9131.5727  72.0
[13,] 24927.26 404.43 321010.5 10416.4075  84.5
[14,] 25681.37 450.66 318247.0 11169.2800  98.0
[15,] 23229.69 472.80 271571.7 11054.7392 112.5
[16,] 22914.49 510.08 258317.6 11500.3736 128.0
[17,] 23501.35 570.18 245487.6 11911.8363 144.5
[18,] 24604.83 631.08 246256.0 12632.2561 162.0
[19,] 27283.14 708.89 267367.3 13893.8541 180.5
[20,] 30337.09 787.80 296582.8 15403.4478 200.0

attr(,"class")
[1] "quadFuncEst"
> 
> ## calculating elasticities
> estElaFit <- quadFuncEla( 
+    xNames = c( "qLabor", "land", "qVarInput", "time" ), 
+    data = germanFarms, coef = coef( estResult ) )
> all.equal( estElaFit, elas( estResult ) )
[1] TRUE
> print( estElaFit )
       qLabor     land   qVarInput        time
1   3.9067199 1.754268 -0.51994951  0.03346678
2   3.2101042 1.347122 -0.67383871  0.09277184
3   3.1628435 1.312384 -0.43158645  0.10914261
4   1.9607325 1.152726 -0.51310537  0.15377497
5   1.7554617 1.272660 -0.18551097  0.11707196
6   1.7008788 1.211832  0.01631034  0.11159376
7   1.8252482 1.023389  0.14243345  0.13672919
8   1.2774167 1.467527  0.36915183 -0.04441456
9   1.1479794 1.738357  0.88298712 -0.20210425
10  0.4552941 1.875422  0.75426155 -0.29645592
11  0.2583648 1.608280  0.73943539 -0.24471509
12 -1.5414041 1.604219 -0.30782745 -0.08274988
13 -1.6891202 1.367121 -0.47752535  0.01468336
14 -1.0733282 1.204391 -0.30435860 -0.02493184
15 -0.8541443 1.718699  0.31150456 -0.43420691
16 -0.3474438 1.764262  0.63103646 -0.61212251
17 -0.1026238 1.919868  0.58872974 -0.78037129
18  0.1076974 1.880339  0.54283928 -0.84195754
19  0.3140019 1.519889  0.30738974 -0.68231804
20  0.4273530 1.146063  0.08885107 -0.50610786
> estElaObs <- quadFuncEla( 
+    xNames = c( "qLabor", "land", "qVarInput", "time" ), 
+    data = germanFarms, coef = coef( estResult ),
+    yName = "qOutput" )
> all.equal( estElaObs, elas( estResult, yObs = TRUE ) )
[1] TRUE
> print( estElaObs )
       qLabor     land   qVarInput        time
1   3.8760330 1.740488 -0.51586536  0.03320391
2   3.3413608 1.402204 -0.70139101  0.09656515
3   3.0988157 1.285816 -0.42284952  0.10693316
4   1.9064063 1.120788 -0.49888872  0.14951432
5   1.7566771 1.273542 -0.18563941  0.11715302
6   1.7319343 1.233958  0.01660814  0.11363129
7   1.8261903 1.023918  0.14250697  0.13679976
8   1.2816212 1.472357  0.37036688 -0.04456075
9   1.1356496 1.719687  0.87350346 -0.19993357
10  0.4580817 1.886904  0.75887970 -0.29827104
11  0.2589093 1.611669  0.74099378 -0.24523083
12 -1.5384147 1.601108 -0.30723044 -0.08258939
13 -1.6958230 1.372546 -0.47942030  0.01474163
14 -1.0727819 1.203778 -0.30420369 -0.02491915
15 -0.8500199 1.710400  0.31000042 -0.43211028
16 -0.3459359 1.756605  0.62829778 -0.60946592
17 -0.1039031 1.943799  0.59606836 -0.79009876
18  0.1068557 1.865641  0.53859635 -0.83537665
19  0.3145121 1.522358  0.30788917 -0.68342663
20  0.4272972 1.145913  0.08883948 -0.50604185
> max( abs( estElaFit - estElaObs ) )
[1] 0.1312566
> # only at mean values
> estElaMeanFit <- elas( estResult, data = germanFarmsMeans )
> print( estElaMeanFit )
    qLabor    land qVarInput        time
1 0.559696 1.34958 0.1184950 -0.08982257
> estElaMeanObs <- elas( estResult, data = germanFarmsMeans, yObs = TRUE )
> print( estElaMeanObs )
     qLabor     land qVarInput        time
1 0.6162868 1.486036  0.130476 -0.09890453
> print( estElaMeanFit - estElaMeanObs )
       qLabor       land   qVarInput        time
1 -0.05659083 -0.1364560 -0.01198102 0.009081956
> # with a shifter
> estElaShifterFit <- quadFuncEla( 
+    xNames = c( "qLabor", "land", "qVarInput" ), 
+    data = germanFarms, coef = coef( estResultShifter ),
+    shifterNames = "time" )
> all.equal( estElaShifterFit, elas( estResultShifter ) )
[1] TRUE
> print( estElaShifterFit )
       qLabor      land qVarInput
1   2.5380359 1.1319785 0.3673567
2   1.6879082 1.0716982 0.5896364
3   1.6070063 1.0858660 0.6358114
4   0.9487955 0.9574937 0.6850877
5   1.0047298 0.9513031 0.6467777
6   0.8873653 0.9609826 0.7304441
7   0.6893270 0.9832754 0.8837495
8   0.8228643 0.9034775 0.5859333
9   1.0122974 0.9212117 0.5865410
10  0.7028766 0.8119414 0.4248432
11  0.3361451 0.8071711 0.5807243
12 -0.9060920 0.6060780 0.3986213
13 -1.2934586 0.6048434 0.5580841
14 -1.2075118 0.6316826 0.6349821
15 -0.7023142 0.6366197 0.4251292
16 -0.4928991 0.6772872 0.4693096
17 -0.4973844 0.6576557 0.3738531
18 -0.5924044 0.6550046 0.3852179
19 -0.8843066 0.6589949 0.5049167
20 -1.1748246 0.6607294 0.6509026
> estElaShifterObs <- quadFuncEla( 
+    xNames = c( "qLabor", "land", "qVarInput" ), 
+    data = germanFarms, coef = coef( estResultShifter ),
+    yName = "qOutput" )
> all.equal( estElaShifterObs, elas( estResultShifter, yObs = TRUE ) )
[1] TRUE
> print( estElaShifterObs )
       qLabor      land qVarInput
1   2.4899333 1.1105245 0.3603943
2   1.8033885 1.1450197 0.6299771
3   1.5779308 1.0662194 0.6243077
4   0.9404717 0.9490937 0.6790775
5   0.9923886 0.9396182 0.6388332
6   0.8918302 0.9658179 0.7341194
7   0.6920055 0.9870961 0.8871834
8   0.7962504 0.8742563 0.5669825
9   1.0105126 0.9195875 0.5855069
10  0.7129063 0.8235273 0.4309055
11  0.3382326 0.8121838 0.5843308
12 -0.8976832 0.6004534 0.3949220
13 -1.3165008 0.6156183 0.5680260
14 -1.1959051 0.6256108 0.6288787
15 -0.6906336 0.6260317 0.4180586
16 -0.4985686 0.6850775 0.4747078
17 -0.5072639 0.6707185 0.3812789
18 -0.5900343 0.6523841 0.3836767
19 -0.8738784 0.6512237 0.4989625
20 -1.1807817 0.6640797 0.6542031
> max( abs( estElaShifterFit - estElaShifterObs ) )
[1] 0.1154803
> estElaShifterObs2 <- quadFuncEla( 
+    xNames = c( "qLabor", "land", "qVarInput" ), 
+    data = germanFarms, coef = coef( estResultShifter ),
+    yName = "qOutput", shifterNames = "time" )
> all.equal( estElaShifterObs, estElaShifterObs2 )
[1] TRUE
> # only at mean values
> estElaShifterMeanFit <- elas( estResultShifter, data = germanFarmsMeans )
> print( estElaShifterMeanFit )
      qLabor      land qVarInput
1 0.06309733 0.7751863 0.5264432
> estElaShifterMeanObs <- elas( estResultShifter, data = germanFarmsMeans,
+    yObs = TRUE )
> print( estElaShifterMeanObs )
      qLabor      land qVarInput
1 0.06525597 0.8017064 0.5444535
> print( estElaShifterMeanFit - estElaShifterMeanObs )
        qLabor        land   qVarInput
1 -0.002158641 -0.02652013 -0.01801030
> 
> 
> ################ imposing homogeneity #####################
> ## linear functions with homogeneity imposed
> estResultLinHom <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, linear = TRUE, 
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> coef( estResultLinHom )
          a_0           a_1           a_2           a_3           a_4 
-204866.29706      35.00369 -169743.59534  107690.54362   62053.05172 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
      0.00000       0.00000       0.00000       0.00000       0.00000 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
      0.00000       0.00000       0.00000       0.00000       0.00000 
> all.equal( sum( coef( estResultLinHom )[3:4] ), - coef( estResultLinHom )[5],
+    check.attributes = FALSE )
[1] TRUE
> vcov( estResultLinHom )
                a_0           a_1           a_2           a_3           a_4
a_0    2849737704.3  197398.24103  2342807089.3 -1483057708.7 -859749380.60
a_1        197398.2      23.45175      165444.1     -105986.7     -59457.32
a_2    2342807089.3  165444.06435  1927795476.4 -1221045218.8 -706750257.61
a_3   -1483057708.7 -105986.74450 -1221045218.8   773678582.7  447366636.12
a_4    -859749380.6  -59457.31985  -706750257.6   447366636.1  259383621.49
b_1_1           0.0       0.00000           0.0           0.0          0.00
b_1_2           0.0       0.00000           0.0           0.0          0.00
b_1_3           0.0       0.00000           0.0           0.0          0.00
b_1_4           0.0       0.00000           0.0           0.0          0.00
b_2_2           0.0       0.00000           0.0           0.0          0.00
b_2_3           0.0       0.00000           0.0           0.0          0.00
b_2_4           0.0       0.00000           0.0           0.0          0.00
b_3_3           0.0       0.00000           0.0           0.0          0.00
b_3_4           0.0       0.00000           0.0           0.0          0.00
b_4_4           0.0       0.00000           0.0           0.0          0.00
      b_1_1 b_1_2 b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 b_3_4 b_4_4
a_0       0     0     0     0     0     0     0     0     0     0
a_1       0     0     0     0     0     0     0     0     0     0
a_2       0     0     0     0     0     0     0     0     0     0
a_3       0     0     0     0     0     0     0     0     0     0
a_4       0     0     0     0     0     0     0     0     0     0
b_1_1     0     0     0     0     0     0     0     0     0     0
b_1_2     0     0     0     0     0     0     0     0     0     0
b_1_3     0     0     0     0     0     0     0     0     0     0
b_1_4     0     0     0     0     0     0     0     0     0     0
b_2_2     0     0     0     0     0     0     0     0     0     0
b_2_3     0     0     0     0     0     0     0     0     0     0
b_2_4     0     0     0     0     0     0     0     0     0     0
b_3_3     0     0     0     0     0     0     0     0     0     0
b_3_4     0     0     0     0     0     0     0     0     0     0
b_4_4     0     0     0     0     0     0     0     0     0     0
> all.equal( rowSums( vcov( estResultLinHom )[ , 3:4 ] ), 
+    - vcov( estResultLinHom )[ , 5 ] )
[1] TRUE
> all.equal( colSums( vcov( estResultLinHom )[ 3:4, ] ), 
+    - vcov( estResultLinHom )[ 5, ] )
[1] TRUE
> # different order of weights
> estResultLinHom2 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, linear = TRUE, 
+    homWeights = c( qVarInput = 0.3, land = 0.5, qLabor = 0.2 ) )
> all.equal( coef( estResultLinHom ), coef( estResultLinHom2 ) )
[1] TRUE
> all.equal( vcov( estResultLinHom ), vcov( estResultLinHom2 ) )
[1] TRUE
> # different order of xNames
> estResultLinHom3 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    data = germanFarms, linear = TRUE, 
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> all.equal( coef( estResultLinHom ), 
+    coef( estResultLinHom3 )[ c( 1, 5, 2:4, 6:15 ) ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( vcov( estResultLinHom ), 
+    vcov( estResultLinHom3 )[ c( 1, 5, 2:4, 6:15 ), c( 1, 5, 2:4, 6:15 ) ],
+    check.attributes = FALSE )
[1] TRUE
> # homogenous in all variables
> estResultLinHom4 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, linear = TRUE, 
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3, time = 0 ) )
> coef( estResultLinHom4 )
       a_0        a_1        a_2        a_3        a_4      b_1_1      b_1_2 
-281897.53    6870.61 -240607.07  148455.93   85280.52       0.00       0.00 
     b_1_3      b_1_4      b_2_2      b_2_3      b_2_4      b_3_3      b_3_4 
      0.00       0.00       0.00       0.00       0.00       0.00       0.00 
     b_4_4 
      0.00 
> all.equal( sum( coef( estResultLinHom4 )[2:4] ), 
+  - coef( estResultLinHom4 )[5], check.attributes = FALSE )
[1] TRUE
> vcov( estResultLinHom4 )
              a_0       a_1         a_2         a_3         a_4 b_1_1 b_1_2
a_0    4022245963  62725525  3235440872 -2084488113 -1213678284     0     0
a_1      62725525   1980508    50755181   -33849741   -18885947     0     0
a_2    3235440872  50755181  2603870701 -1678422712  -976203169     0     0
a_3   -2084488113 -33849741 -1678422712  1083404187   628868267     0     0
a_4   -1213678284 -18885947  -976203169   628868267   366220850     0     0
b_1_1           0         0           0           0           0     0     0
b_1_2           0         0           0           0           0     0     0
b_1_3           0         0           0           0           0     0     0
b_1_4           0         0           0           0           0     0     0
b_2_2           0         0           0           0           0     0     0
b_2_3           0         0           0           0           0     0     0
b_2_4           0         0           0           0           0     0     0
b_3_3           0         0           0           0           0     0     0
b_3_4           0         0           0           0           0     0     0
b_4_4           0         0           0           0           0     0     0
      b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 b_3_4 b_4_4
a_0       0     0     0     0     0     0     0     0
a_1       0     0     0     0     0     0     0     0
a_2       0     0     0     0     0     0     0     0
a_3       0     0     0     0     0     0     0     0
a_4       0     0     0     0     0     0     0     0
b_1_1     0     0     0     0     0     0     0     0
b_1_2     0     0     0     0     0     0     0     0
b_1_3     0     0     0     0     0     0     0     0
b_1_4     0     0     0     0     0     0     0     0
b_2_2     0     0     0     0     0     0     0     0
b_2_3     0     0     0     0     0     0     0     0
b_2_4     0     0     0     0     0     0     0     0
b_3_3     0     0     0     0     0     0     0     0
b_3_4     0     0     0     0     0     0     0     0
b_4_4     0     0     0     0     0     0     0     0
> all.equal( rowSums( vcov( estResultLinHom4 )[ , 2:4 ] ), 
+    - vcov( estResultLinHom4 )[ , 5 ] )
[1] TRUE
> all.equal( colSums( vcov( estResultLinHom4 )[ 2:4, ] ), 
+    - vcov( estResultLinHom4 )[ 5, ] )
[1] TRUE
> 
> ## computing fitted values of linear functions with homogeneity imposed
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom ), data = germanFarms, 
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> all.equal( estResultLinHom$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.3, land = 0.5, qLabor = 0.2 ) )
> all.equal( estResultLinHom$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom2 ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.3, land = 0.5, qLabor = 0.2 ) )
> all.equal( estResultLinHom2$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultLinHom3 ), data = germanFarms,
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> all.equal( estResultLinHom3$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom4 ), data = germanFarms,
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3, time = 0 ) )
> all.equal( estResultLinHom4$fitted, fitted )
[1] TRUE
> 
> ## derivatives of linear functions with homogeneity imposed
> estResultLinHomDeriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom ), data = germanFarms, 
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> print( estResultLinHomDeriv )
       time     qLabor     land qVarInput
1  35.00369 -1178.4390 27.04124  1.912124
2  35.00369 -1084.9966 24.64462  1.610257
3  35.00369 -1081.5401 24.50168  1.566782
4  35.00369 -1009.4570 22.79144  1.416388
5  35.00369 -1018.7123 23.02246  1.442505
6  35.00369 -1004.3502 22.62432  1.378383
7  35.00369  -979.7844 21.93796  1.265518
8  35.00369 -1015.7088 22.91918  1.417178
9  35.00369 -1029.4467 23.27705  1.464841
10 35.00369 -1014.5477 22.98394  1.469698
11 35.00369  -965.7368 21.73324  1.312731
12 35.00369  -865.9962 19.45889  1.159445
13 35.00369  -823.0884 18.37840  1.032744
14 35.00369  -824.7389 18.33428  0.986623
15 35.00369  -889.3152 19.89781  1.140042
16 35.00369  -909.6247 20.30333  1.136973
17 35.00369  -928.0012 20.70432  1.154479
18 35.00369  -923.6061 20.53430  1.106181
19 35.00369  -885.0597 19.51752  0.964913
20 35.00369  -840.2963 18.38134  0.827398
> all.equal( estResultLinHomDeriv$qLabor * germanFarms$qLabor +
+    estResultLinHomDeriv$land * germanFarms$land,
+    - estResultLinHomDeriv$qVarInput * germanFarms$qVarInput )
[1] TRUE
> # different order of weights (different from order used for estimation)
> estResultLinHom1Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.3, land = 0.5, qLabor = 0.2 ) )
> all.equal( estResultLinHomDeriv, estResultLinHom1Deriv )
[1] TRUE
> # different order of weights (same order as used for estimation)
> estResultLinHom2Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom2 ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.3, land = 0.5, qLabor = 0.2 ) )
> all.equal( estResultLinHomDeriv, estResultLinHom2Deriv )
[1] TRUE
> # different order of independent variables
> estResultLinHom3Deriv <- quadFuncDeriv(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultLinHom3 ), data = germanFarms,
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3 ) )
> all.equal( estResultLinHomDeriv, 
+    estResultLinHom3Deriv[ , c( 4, 1, 2, 3 ) ] )
[1] TRUE
> # homogenous in all independent variables
> estResultLinHom4Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultLinHom4 ), data = germanFarms,
+    homWeights = c( qLabor = 0.2, land = 0.5, qVarInput = 0.3, time = 0 ) )
> print( estResultLinHom4Deriv )
       time    qLabor     land qVarInput
1  38.39356 -1660.528 39.59729 2.5625684
2  35.34595 -1528.890 36.02354 2.1008025
3  35.23251 -1524.056 35.72655 1.9852346
4  32.88332 -1422.503 33.18017 1.7543156
5  33.18510 -1435.579 33.43161 1.7385777
6  32.71629 -1415.368 32.78441 1.6090717
7  31.91436 -1380.774 31.73200 1.4203479
8  33.08680 -1431.443 33.04181 1.5589649
9  33.53493 -1450.839 33.46721 1.5668100
10 33.05015 -1429.870 32.97370 1.5383324
11 31.45821 -1361.091 31.14948 1.3226638
12 28.20884 -1220.512 27.90588 1.1703705
13 26.80966 -1160.046 26.34044 1.0035442
14 26.86238 -1162.395 26.22263 0.9037540
15 28.96733 -1253.461 28.32844 1.0051633
16 29.62824 -1282.122 28.81818 0.9341477
17 30.22667 -1308.061 29.29308 0.8887099
18 30.08259 -1301.892 28.98846 0.7854790
19 28.82504 -1247.564 27.53856 0.6097922
20 27.36524 -1184.466 25.93625 0.4543152
> all.equal( estResultLinHom4Deriv$qLabor * germanFarms$qLabor +
+    estResultLinHom4Deriv$land * germanFarms$land +
+    estResultLinHom4Deriv$qVarInput * germanFarms$qVarInput,
+    - estResultLinHom4Deriv$time * germanFarms$time )
[1] TRUE
> 
> ## quadratic functions with homogeneity imposed
> estResultHom <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> coef( estResultHom )
          a_0           a_1           a_2           a_3           a_4 
-1.007365e+08 -3.358735e+04 -6.652651e+07  2.595864e+07  4.056787e+07 
        b_1_1         b_1_2         b_1_3         b_1_4         b_2_2 
-1.529145e+00 -1.079879e+04  4.018839e+03  6.779952e+03 -2.190423e+07 
        b_2_3         b_2_4         b_3_3         b_3_4         b_4_4 
 8.506145e+06  1.339809e+07 -3.276468e+06 -5.229677e+06 -8.168412e+06 
> all.equal( sum( coef( estResultHom )[3:4] ), - coef( estResultHom )[5],
+    check.attributes = FALSE ) # a_2:4
[1] TRUE
> all.equal( sum( coef( estResultHom )[7:8] ), - coef( estResultHom )[9],
+    check.attributes = FALSE ) # b_1_2:4
[1] TRUE
> all.equal( sum( coef( estResultHom )[10:11] ), - coef( estResultHom )[12],
+    check.attributes = FALSE ) # b_2_2:4
[1] TRUE
> all.equal( sum( coef( estResultHom )[13:14] ), - coef( estResultHom )[11],
+    check.attributes = FALSE ) # b_3_2:4
[1] TRUE
> all.equal( sum( coef( estResultHom )[14:15] ), - coef( estResultHom )[12],
+    check.attributes = FALSE ) # b_4_2:4
[1] TRUE
> vcov( estResultHom )
                a_0           a_1           a_2           a_3           a_4
a_0    1.339701e+16  3.834391e+12  8.718858e+15 -3.316354e+15 -5.402503e+15
a_1    3.834391e+12  1.303552e+09  2.535004e+12 -9.898898e+11 -1.545114e+12
a_2    8.718858e+15  2.535004e+12  5.684368e+15 -2.168706e+15 -3.515662e+15
a_3   -3.316354e+15 -9.898898e+11 -2.168706e+15  8.316786e+14  1.337027e+15
a_4   -5.402503e+15 -1.545114e+12 -3.515662e+15  1.337027e+15  2.178635e+15
b_1_1  6.193738e+08  2.360274e+05  4.131175e+08 -1.636391e+08 -2.494784e+08
b_1_2  1.270894e+12  4.413086e+08  8.422188e+11 -3.301550e+11 -5.120638e+11
b_1_3 -4.985740e+11 -1.790628e+08 -3.316917e+11  1.308458e+11  2.008459e+11
b_1_4 -7.723204e+11 -2.622458e+08 -5.105271e+11  1.993092e+11  3.112178e+11
b_2_2  2.845094e+15  8.417236e+11  1.858407e+15 -7.113038e+14 -1.147103e+15
b_2_3 -1.087385e+15 -3.310995e+11 -7.125580e+14  2.742111e+14  4.383469e+14
b_2_4 -1.757709e+15 -5.106241e+11 -1.145849e+15  4.370927e+14  7.087559e+14
b_3_3  4.189979e+14  1.317908e+11  2.755175e+14 -1.066402e+14 -1.688773e+14
b_3_4  6.683870e+14  1.993087e+11  4.370405e+14 -1.675709e+14 -2.694696e+14
b_4_4  1.089322e+15  3.113154e+11  7.088081e+14 -2.695218e+14 -4.392863e+14
              b_1_1         b_1_2         b_1_3         b_1_4         b_2_2
a_0    6.193738e+08  1.270894e+12 -4.985740e+11 -7.723204e+11  2.845094e+15
a_1    2.360274e+05  4.413086e+08 -1.790628e+08 -2.622458e+08  8.417236e+11
a_2    4.131175e+08  8.422188e+11 -3.316917e+11 -5.105271e+11  1.858407e+15
a_3   -1.636391e+08 -3.301550e+11  1.308458e+11  1.993092e+11 -7.113038e+14
a_4   -2.494784e+08 -5.120638e+11  2.008459e+11  3.112178e+11 -1.147103e+15
b_1_1  5.170363e+01  8.059477e+04 -3.312411e+04 -4.747066e+04  1.385763e+08
b_1_2  8.059477e+04  1.499934e+08 -6.123365e+07 -8.875976e+07  2.804220e+11
b_1_3 -3.312411e+04 -6.123365e+07  2.523276e+07  3.600089e+07 -1.109340e+11
b_1_4 -4.747066e+04 -8.875976e+07  3.600089e+07  5.275887e+07 -1.694880e+11
b_2_2  1.385763e+08  2.804220e+11 -1.109340e+11 -1.694880e+11  6.088342e+14
b_2_3 -5.540625e+07 -1.107972e+11  4.414520e+10  6.665202e+10 -2.342584e+14
b_2_4 -8.317006e+07 -1.696247e+11  6.678880e+10  1.028360e+11 -3.745759e+14
b_3_3  2.248116e+07  4.433341e+10 -1.781155e+10 -2.652185e+10  9.093284e+13
b_3_4  3.292508e+07  6.646382e+10 -2.633365e+10 -4.013017e+10  1.433255e+14
b_4_4  5.024498e+07  1.031609e+11 -4.045515e+10 -6.270578e+10  2.312503e+14
              b_2_3         b_2_4         b_3_3         b_3_4         b_4_4
a_0   -1.087385e+15 -1.757709e+15  4.189979e+14  6.683870e+14  1.089322e+15
a_1   -3.310995e+11 -5.106241e+11  1.317908e+11  1.993087e+11  3.113154e+11
a_2   -7.125580e+14 -1.145849e+15  2.755175e+14  4.370405e+14  7.088081e+14
a_3    2.742111e+14  4.370927e+14 -1.066402e+14 -1.675709e+14 -2.695218e+14
a_4    4.383469e+14  7.087559e+14 -1.688773e+14 -2.694696e+14 -4.392863e+14
b_1_1 -5.540625e+07 -8.317006e+07  2.248116e+07  3.292508e+07  5.024498e+07
b_1_2 -1.107972e+11 -1.696247e+11  4.433341e+10  6.646382e+10  1.031609e+11
b_1_3  4.414520e+10  6.678880e+10 -1.781155e+10 -2.633365e+10 -4.045515e+10
b_1_4  6.665202e+10  1.028360e+11 -2.652185e+10 -4.013017e+10 -6.270578e+10
b_2_2 -2.342584e+14 -3.745759e+14  9.093284e+13  1.433255e+14  2.312503e+14
b_2_3  9.066270e+13  1.435957e+14 -3.542121e+13 -5.524149e+13 -8.835419e+13
b_2_4  1.435957e+14  2.309802e+14 -5.551163e+13 -8.808405e+13 -1.428961e+14
b_3_3 -3.542121e+13 -5.551163e+13  1.394302e+13  2.147819e+13  3.403344e+13
b_3_4 -5.524149e+13 -8.808405e+13  2.147819e+13  3.376330e+13  5.432075e+13
b_4_4 -8.835419e+13 -1.428961e+14  3.403344e+13  5.432075e+13  8.857539e+13
> all.equal( rowSums( vcov( estResultHom )[ , 3:4 ] ), 
+    - vcov( estResultHom )[ , 5 ] ) # a_2:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom )[ , 7:8 ] ), 
+    - vcov( estResultHom )[ , 9 ] ) # b_1_2:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom )[ , 10:11 ] ), 
+    - vcov( estResultHom )[ , 12 ] ) # b_2_2:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom )[ , 13:14 ] ), 
+    - vcov( estResultHom )[ , 11 ] ) # b_3_2:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom )[ , 14:15 ] ), 
+    - vcov( estResultHom )[ , 12 ] ) # b_4_2:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom )[ 3:4, ] ), 
+    - vcov( estResultHom )[ 5, ] ) # a_2:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom )[ 7:8, ] ), 
+    - vcov( estResultHom )[ 9, ] ) # b_1_2:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom )[ 10:11, ] ), 
+    - vcov( estResultHom )[ 12, ] ) # b_2_2:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom )[ 13:14, ] ), 
+    - vcov( estResultHom )[ 11, ] ) # b_3_2:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom )[ 14:15, ] ), 
+    - vcov( estResultHom )[ 12, ] ) # b_4_2:4
[1] TRUE
> # different order of weights
> estResultHom2 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms,
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( coef( estResultHom ), coef( estResultHom2 ) )
[1] TRUE
> all.equal( vcov( estResultHom ), vcov( estResultHom2 ) )
[1] TRUE
> # different order of xNames
> estResultHom3 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    data = germanFarms, 
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> coefOrderHom3 <- c( 1, 5, 2:4, 15, 9, 12, 14, 6:8, 10, 11, 13 )
> all.equal( coef( estResultHom ), coef( estResultHom3 )[ coefOrderHom3 ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( vcov( estResultHom ), 
+    vcov( estResultHom3 )[ coefOrderHom3, coefOrderHom3 ],
+    check.attributes = FALSE )
[1] TRUE
> # homogenous in all variables
> estResultHom4 <- quadFuncEst( yName = "qOutput", 
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, 
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2, time = 0 ) )
> coef( estResultHom4 )
         a_0          a_1          a_2          a_3          a_4        b_1_1 
-133415236.6   -8585603.2  -79934396.9   34803265.0   53716735.2    -133043.4 
       b_1_2        b_1_3        b_1_4        b_2_2        b_2_3        b_2_4 
  -2666126.0    1067894.8    1731274.6  -23940029.0   10518573.1   16087581.9 
       b_3_3        b_3_4        b_4_4 
  -4581512.0   -7004955.9  -10813900.6 
> all.equal( sum( coef( estResultHom4 )[2:4] ), - coef( estResultHom4 )[5], 
+    check.attributes = FALSE ) # a_1:4
[1] TRUE
> all.equal( sum( coef( estResultHom4 )[6:8] ), - coef( estResultHom4 )[9], 
+    check.attributes = FALSE ) # b_1_1:4
[1] TRUE
> all.equal( sum( coef( estResultHom4 )[10:12] ), - coef( estResultHom4 )[7], 
+    check.attributes = FALSE ) # b_2_1:4
[1] TRUE
> all.equal( sum( coef( estResultHom4 )[c(11,13,14)] ), - coef( estResultHom4 )[8], 
+    check.attributes = FALSE ) # b_3_1:4
[1] TRUE
> all.equal( sum( coef( estResultHom4 )[c(12,14,15)] ), - coef( estResultHom4 )[9], 
+    check.attributes = FALSE ) # b_4_1:4
[1] TRUE
> vcov( estResultHom4 )
                a_0           a_1           a_2           a_3           a_4
a_0    1.230559e+16  4.906283e+14  7.413734e+15 -2.939060e+15 -4.965303e+15
a_1    4.906283e+14  2.877796e+13  2.942418e+14 -1.252431e+14 -1.977766e+14
a_2    7.413734e+15  2.942418e+14  4.470043e+15 -1.772957e+15 -2.991328e+15
a_3   -2.939060e+15 -1.252431e+14 -1.772957e+15  7.126046e+14  1.185596e+15
a_4   -4.965303e+15 -1.977766e+14 -2.991328e+15  1.185596e+15  2.003509e+15
b_1_1  1.148811e+13  8.541561e+11  6.895006e+12 -3.123427e+12 -4.625735e+12
b_1_2  1.482486e+14  8.995788e+12  8.881032e+13 -3.804950e+13 -5.975661e+13
b_1_3 -6.082341e+13 -4.065055e+12 -3.638109e+13  1.593694e+13  2.450921e+13
b_1_4 -9.891328e+13 -5.784889e+12 -5.932423e+13  2.523599e+13  3.987313e+13
b_2_2  2.234647e+15  8.830613e+13  1.348422e+15 -5.351177e+14 -9.016100e+14
b_2_3 -8.872509e+14 -3.800916e+13 -5.354767e+14  2.155918e+14  3.578940e+14
b_2_4 -1.495644e+15 -5.929275e+13 -9.017552e+14  3.575753e+14  6.034726e+14
b_3_3  3.552714e+14  1.686029e+13  2.142586e+14 -8.784963e+13 -1.432693e+14
b_3_4  5.928029e+14  2.521393e+13  3.575991e+14 -1.436791e+14 -2.391339e+14
b_4_4  1.001755e+15  3.986371e+13  6.034803e+14 -2.391322e+14 -4.042119e+14
              b_1_1         b_1_2         b_1_3         b_1_4         b_2_2
a_0    1.148811e+13  1.482486e+14 -6.082341e+13 -9.891328e+13  2.234647e+15
a_1    8.541561e+11  8.995788e+12 -4.065055e+12 -5.784889e+12  8.830613e+13
a_2    6.895006e+12  8.881032e+13 -3.638109e+13 -5.932423e+13  1.348422e+15
a_3   -3.123427e+12 -3.804950e+13  1.593694e+13  2.523599e+13 -5.351177e+14
a_4   -4.625735e+12 -5.975661e+13  2.450921e+13  3.987313e+13 -9.016100e+14
b_1_1  3.581021e+10  2.639298e+11 -1.282383e+11 -1.715017e+11  2.081066e+12
b_1_2  2.639298e+11  2.831097e+12 -1.287355e+12 -1.807672e+12  2.661597e+13
b_1_3 -1.282383e+11 -1.287355e+12  5.993186e+11  8.162751e+11 -1.089196e+13
b_1_4 -1.715017e+11 -1.807672e+12  8.162751e+11  1.162898e+12 -1.780508e+13
b_2_2  2.081066e+12  2.661597e+13 -1.089196e+13 -1.780508e+13  4.071062e+14
b_2_3 -9.575762e+11 -1.155232e+13  4.851709e+12  7.658186e+12 -1.617113e+14
b_2_4 -1.387420e+12 -1.789475e+13  7.327608e+12  1.195456e+13 -2.720108e+14
b_3_3  4.582239e+11  5.181031e+12 -2.245394e+12 -3.393861e+12  6.467393e+13
b_3_4  6.275906e+11  7.658643e+12 -3.205633e+12 -5.080600e+12  1.079294e+14
b_4_4  9.313308e+11  1.204378e+13 -4.938249e+12 -8.036859e+12  1.818865e+14
              b_2_3         b_2_4         b_3_3         b_3_4         b_4_4
a_0   -8.872509e+14 -1.495644e+15  3.552714e+14  5.928029e+14  1.001755e+15
a_1   -3.800916e+13 -5.929275e+13  1.686029e+13  2.521393e+13  3.986371e+13
a_2   -5.354767e+14 -9.017552e+14  2.142586e+14  3.575991e+14  6.034803e+14
a_3    2.155918e+14  3.575753e+14 -8.784963e+13 -1.436791e+14 -2.391322e+14
a_4    3.578940e+14  6.034726e+14 -1.432693e+14 -2.391339e+14 -4.042119e+14
b_1_1 -9.575762e+11 -1.387420e+12  4.582239e+11  6.275906e+11  9.313308e+11
b_1_2 -1.155232e+13 -1.789475e+13  5.181031e+12  7.658643e+12  1.204378e+13
b_1_3  4.851709e+12  7.327608e+12 -2.245394e+12 -3.205633e+12 -4.938249e+12
b_1_4  7.658186e+12  1.195456e+13 -3.393861e+12 -5.080600e+12 -8.036859e+12
b_2_2 -1.617113e+14 -2.720108e+14  6.467393e+13  1.079294e+14  1.818865e+14
b_2_3  6.527289e+13  1.079908e+14 -2.665879e+13 -4.346581e+13 -7.218313e+13
b_2_4  1.079908e+14  1.819148e+14 -4.319618e+13 -7.212218e+13 -1.217472e+14
b_3_3 -2.665879e+13 -4.319618e+13  1.120243e+13  1.770175e+13  2.888829e+13
b_3_4 -4.346581e+13 -7.212218e+13  1.770175e+13  2.896970e+13  4.823309e+13
b_4_4 -7.218313e+13 -1.217472e+14  2.888829e+13  4.823309e+13  8.155095e+13
> all.equal( rowSums( vcov( estResultHom4 )[ , 2:4 ] ), 
+    - vcov( estResultHom4 )[ , 5 ] ) # a_1:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom4 )[ , 6:8 ] ), 
+    - vcov( estResultHom4 )[ , 9 ] ) # b_1_1:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom4 )[ , 10:12 ] ), 
+    - vcov( estResultHom4 )[ , 7 ] ) # b_2_1:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom4 )[ , c(11,13,14) ] ), 
+    - vcov( estResultHom4 )[ , 8 ] ) # b_3_1:4
[1] TRUE
> all.equal( rowSums( vcov( estResultHom4 )[ , c(12,14,15) ] ), 
+    - vcov( estResultHom4 )[ , 9 ] ) # b_4_1:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom4 )[ 2:4, ] ), 
+    - vcov( estResultHom4 )[ 5, ] ) # a_1:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom4 )[ 6:8, ] ), 
+    - vcov( estResultHom4 )[ 9, ] ) # b_1_1:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom4 )[ 10:12, ] ), 
+    - vcov( estResultHom4 )[ 7, ] ) # b_2_1:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom4 )[ c(11,13,14), ] ), 
+    - vcov( estResultHom4 )[ 8, ] ) # b_3_1:4
[1] TRUE
> all.equal( colSums( vcov( estResultHom4 )[ c(12,14,15), ] ), 
+    - vcov( estResultHom4 )[ 9, ] ) # b_4_1:4
[1] TRUE
> 
> ## computing fitted values of quadratic functions with homogeneity imposed
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, 
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHom$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHom$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom2 ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHom2$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultHom3 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHom3$fitted, fitted )
[1] TRUE
> fitted <- quadFuncCalc(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom4 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2, time = 0 ) )
> all.equal( estResultHom4$fitted, fitted )
[1] TRUE
> 
> ## derivatives of quadratic functions with homogeneity imposed
> estResultHomDeriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, 
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> print( estResultHomDeriv )
        time      qLabor       land qVarInput
1   5.570767 -1158.69402  26.066323 1.9020266
2  30.035570  -196.11320  -7.962407 0.7863887
3  34.395179  -125.58337 -10.407945 0.7201859
4  42.461348   -94.90863 -18.437067 0.9170773
5  38.420460  -446.53677 -10.235982 1.4141676
6  44.686086  -339.03226 -15.220252 1.3430729
7  57.501418    71.58386 -27.923282 0.9201682
8  36.581545  -982.56253   1.837118 2.1859856
9  30.551788 -1519.06448  12.353442 3.0269131
10 23.941363 -1935.72889  24.140588 3.5966067
11 38.896289 -1415.96528   6.833414 2.9067415
12 40.997827 -1343.64038   6.316471 2.7361060
13 54.705105  -931.98574  -6.169027 2.2168703
14 62.760146  -697.95510 -11.594364 1.9287999
15 44.582069 -1522.60182  11.795401 2.9044131
16 47.899609 -1493.18626  11.611655 2.8296129
17 45.487519 -1589.51131  19.150920 2.7582372
18 51.167361 -1385.46948  16.048696 2.3964270
19 68.463112  -718.06286  -1.172802 1.6506120
20 85.948230  -145.60137 -17.405512 1.1964559
> all.equal( estResultHomDeriv$qLabor * germanFarms$qLabor +
+    estResultHomDeriv$land * germanFarms$land,
+    - estResultHomDeriv$qVarInput * germanFarms$qVarInput )
[1] TRUE
> # different order of weights (different from order used for estimation)
> estResultHom1Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHomDeriv, estResultHom1Deriv )
[1] TRUE
> # different order of weights (same order as used for estimation)
> estResultHom2Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom2 ), data = germanFarms, 
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHomDeriv, estResultHom2Deriv )
[1] TRUE
> # different order of independent variables
> estResultHom3Deriv <- quadFuncDeriv(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultHom3 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHomDeriv, 
+    estResultHom3Deriv[ , c( 4, 1, 2, 3 ) ] )
[1] TRUE
> # homogenous in all independent variables
> estResultHom4Deriv <- quadFuncDeriv(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom4 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2, time = 0 ) )
> print( estResultHom4Deriv )
        time      qLabor       land   qVarInput
1  11.350230  -606.91202   7.656194  1.22801484
2  51.772621   293.18816 -19.611718 -0.08912130
3  56.280852   192.46655 -21.266615  0.13008114
4  60.854725    76.99890 -15.939893  0.06068481
5  49.439822  -535.89877  -1.177296  0.88825471
6  56.472649  -529.59723  -4.109440  0.82703522
7  75.518507   -90.20073 -19.935964  0.17625769
8  34.660916 -1656.95081  21.229655  2.53160332
9  16.833432 -2579.70049  46.590123  3.89594502
10  1.747514 -3170.22564  61.331554  4.98714971
11 26.669639 -2422.76825  39.549836  3.45075658
12 31.265858 -1895.98716  27.510183  2.63783546
13 50.763770 -1241.44142   8.365598  1.48549099
14 62.463271  -991.21034  -3.478080  1.11906301
15 31.211787 -2455.00756  30.995623  3.53550220
16 34.205043 -2639.38903  29.978562  3.82098071
17 29.725138 -2955.81997  30.477384  4.65378476
18 39.116972 -2742.60992  18.779413  4.38950049
19 69.074919 -1651.65027 -14.259502  2.59180554
20 96.013513  -627.62087 -42.790031  1.01532446
> all.equal( estResultHom4Deriv$qLabor * germanFarms$qLabor +
+    estResultHom4Deriv$land * germanFarms$land +
+    estResultHom4Deriv$qVarInput * germanFarms$qVarInput,
+    - estResultHom4Deriv$time * germanFarms$time )
[1] TRUE
> 
> ## elasticities of quadratic functions with homogeneity imposed
> estResultHomEla <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHomEla, elas( estResultHom ) )
[1] TRUE
> print( estResultHomEla )
          time      qLabor        land qVarInput
1  0.005943199 -1.78006796  0.65073020 1.1293378
2  0.058888959 -0.27876795 -0.18889816 0.4676661
3  0.098238561 -0.17217013 -0.24465227 0.4168224
4  0.151745565 -0.12549594 -0.41032482 0.5358208
5  0.166704749 -0.57350122 -0.22126803 0.7947693
6  0.222200265 -0.41302788 -0.31824392 0.7312718
7  0.318418521  0.08211166 -0.57234198 0.4902303
8  0.233419758 -1.16770207  0.03805350 1.1296486
9  0.215891766 -1.76520381  0.24423091 1.5209729
10 0.190183490 -2.35266400  0.49993417 1.8527298
11 0.303314980 -1.53580841  0.12968183 1.4061266
12 0.334258743 -1.54280288  0.12818890 1.4146140
13 0.442408519 -0.98562216 -0.11939028 1.1050124
14 0.524896209 -0.69631445 -0.22296124 0.9192757
15 0.416744197 -1.56562724  0.23169517 1.3339321
16 0.460788667 -1.44540550  0.22256777 1.2228377
17 0.463222324 -1.54250630  0.38476982 1.1577365
18 0.527117179 -1.28455772  0.32202776 0.9625300
19 0.691089546 -0.61801862 -0.02324739 0.6412660
20 0.861960553 -0.11827717 -0.34379000 0.4620672
> all.equal( estResultHomEla$qLabor + estResultHomEla$land,
+    - estResultHomEla$qVarInput )
[1] TRUE
> estResultHomElaObs <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, yName = "qOutput",
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHomElaObs, elas( estResultHom, yObs = TRUE ) )
[1] TRUE
> print( estResultHomElaObs )
          time     qLabor        land qVarInput
1  0.005887932 -1.7635146  0.64467888 1.1188357
2  0.062396631 -0.2953725 -0.20014972 0.4955223
3  0.096473024 -0.1690759 -0.24025539 0.4093313
4  0.144944448 -0.1198713 -0.39193439 0.5118057
5  0.163058896 -0.5609587 -0.21642887 0.7773876
6  0.226104110 -0.4202844 -0.32383516 0.7441195
7  0.324772974  0.0837503 -0.58376380 0.5000135
8  0.227115660 -1.1361653  0.03702577 1.0991395
9  0.227676314 -1.8615582  0.25756237 1.6039959
10 0.187274746 -2.3166814  0.49228797 1.8243934
11 0.314465312 -1.5922671  0.13444913 1.4578180
12 0.319301016 -1.4737641  0.12245258 1.3513115
13 0.451524263 -1.0059307 -0.12185030 1.1277810
14 0.518079651 -0.6872718 -0.22006576 0.9073375
15 0.406600269 -1.5275185  0.22605551 1.3014630
16 0.471327840 -1.4784649  0.22765834 1.2508065
17 0.467232145 -1.5558588  0.38810053 1.1677583
18 0.524614149 -1.2784580  0.32049860 0.9579594
19 0.689194219 -0.6163237 -0.02318363 0.6395073
20 0.862979947 -0.1184171 -0.34419658 0.4626136
> all.equal( estResultHomElaObs$qLabor + estResultHomElaObs$land,
+    - estResultHomElaObs$qVarInput )
[1] TRUE
> max( abs( estResultHomEla - estResultHomElaObs ) )
[1] 0.09635443
> # only at mean values
> estResultHomElaMeanFit <- elas( estResultHom, data = germanFarmsMeans )
> print( estResultHomElaMeanFit )
       time    qLabor        land qVarInput
1 0.3507008 -0.914567 -0.04139098  0.955958
> estResultHomElaMeanObs <- elas( estResultHom, data = germanFarmsMeans,
+    yObs = TRUE )
> print( estResultHomElaMeanObs )
       time     qLabor        land qVarInput
1 0.3428515 -0.8940974 -0.04046458  0.934562
> print( estResultHomElaMeanFit - estResultHomElaMeanObs )
         time      qLabor          land  qVarInput
1 0.007849273 -0.02046954 -0.0009263997 0.02139594
> # different order of weights (different from order used for estimation)
> estResultHom1Ela <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms,
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHomEla, estResultHom1Ela )
[1] TRUE
> estResultHom1ElaObs <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom ), data = germanFarms, yName = "qOutput",
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHomElaObs, estResultHom1ElaObs )
[1] TRUE
> # different order of weights (same order as used for estimation)
> estResultHom2Ela <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom2 ), data = germanFarms,
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHom2Ela, elas( estResultHom2 ) )
[1] TRUE
> all.equal( estResultHomEla, estResultHom2Ela )
[1] TRUE
> estResultHom2ElaObs <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom2 ), data = germanFarms, yName = "qOutput",
+    homWeights = c( qVarInput = 0.2, land = 0.1, qLabor = 0.7 ) )
> all.equal( estResultHom2ElaObs, elas( estResultHom2, yObs = TRUE ) )
[1] TRUE
> all.equal( estResultHomElaObs, estResultHom2ElaObs )
[1] TRUE
> # different order of independent variables
> estResultHom3Ela <- quadFuncEla(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultHom3 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHom3Ela, elas( estResultHom3 ) )
[1] TRUE
> all.equal( estResultHomEla, estResultHom3Ela[ , c( 4, 1, 2, 3 ) ] )
[1] TRUE
> estResultHom3ElaObs <- quadFuncEla(
+    xNames = c( "qLabor", "land", "qVarInput", "time" ),
+    coef = coef( estResultHom3 ), data = germanFarms, yName = "qOutput",
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( estResultHom3ElaObs, elas( estResultHom3, yObs = TRUE ) )
[1] TRUE
> all.equal( estResultHomElaObs, estResultHom3ElaObs[ , c( 4, 1, 2, 3 ) ] )
[1] TRUE
> # homogenous in all independent variables
> estResultHom4Ela <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom4 ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2, time = 0 ) )
> all.equal( estResultHom4Ela, elas( estResultHom4 ) )
[1] TRUE
> print( estResultHom4Ela )
         time     qLabor        land   qVarInput
1  0.01196856 -0.9215639  0.18891483  0.72068055
2  0.10347880  0.4248501 -0.47429906 -0.05402980
3  0.16199697  0.2659149 -0.50378407  0.07587218
4  0.21996933  0.1029803 -0.35881200  0.03586239
5  0.21331834 -0.6844248 -0.02530700  0.49641350
6  0.27674984 -0.6358593 -0.08468332  0.44379275
7  0.40773449 -0.1008798 -0.39841041  0.09155568
8  0.21577172 -1.9211461  0.42902183  1.27635251
9  0.11835893 -2.9827499  0.91650622  1.94788471
10 0.01419384 -3.9396783  1.29868600  2.62679850
11 0.20617519 -2.6051329  0.74408002  1.65487770
12 0.25892459 -2.2112803  0.56708793  1.38526780
13 0.41801331 -1.3368049  0.16485036  0.75394127
14 0.52459200 -0.9930044 -0.06716290  0.53557536
15 0.29188322 -2.5254340  0.60909609  1.62445466
16 0.32526953 -2.5255882  0.56801835  1.63230036
17 0.30434730 -2.8839628  0.61565499  1.96396048
18 0.40531894 -2.5576329  0.37901212  1.77330189
19 0.69172559 -1.4102398 -0.28040740  0.99892161
20 0.96572320 -0.5113317 -0.84765453  0.39326301
> all.equal( estResultHom4Ela$qLabor + estResultHom4Ela$land +
+    estResultHom4Ela$qVarInput, - estResultHom4Ela$time )
[1] TRUE
> estResultHom4ElaObs <- quadFuncEla(
+    xNames = c( "time", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHom4 ), data = germanFarms, yName = "qOutput",
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2, time = 0 ) )
> all.equal( estResultHom4ElaObs, elas( estResultHom4, yObs = TRUE ) )
[1] TRUE
> print( estResultHom4ElaObs )
         time     qLabor        land   qVarInput
1  0.01199644 -0.9237108  0.18935493  0.72235947
2  0.10755372  0.4415803 -0.49297658 -0.05615746
3  0.15785887  0.2591223 -0.49091525  0.07393408
4  0.20773138  0.0972510 -0.33884957  0.03386719
5  0.20982577 -0.6732191 -0.02489266  0.48828595
6  0.28574215 -0.6565200 -0.08743489  0.45821271
7  0.42653505 -0.1055313 -0.41678103  0.09577730
8  0.21519148 -1.9159798  0.42786813  1.27292021
9  0.12544515 -3.1613291  0.97137806  2.06450586
10 0.01366945 -3.7941278  1.25070633  2.52975200
11 0.21561637 -2.7244271  0.77815292  1.73065785
12 0.24350608 -2.0796024  0.53331883  1.30277750
13 0.41899333 -1.3399390  0.16523684  0.75570886
14 0.51562897 -0.9760383 -0.06601538  0.52642467
15 0.28465976 -2.4629351  0.59402231  1.58425299
16 0.33657454 -2.6133672  0.58776030  1.68903231
17 0.30532639 -2.8932405  0.61763556  1.97027856
18 0.40106265 -2.5307750  0.37503207  1.75468027
19 0.69535306 -1.4176352 -0.28187788  1.00416004
20 0.96404239 -0.5104417 -0.84617922  0.39257855
> all.equal( estResultHom4ElaObs$qLabor + estResultHom4ElaObs$land +
+    estResultHom4ElaObs$qVarInput, - estResultHom4ElaObs$time )
[1] TRUE
> max( abs( estResultHom4Ela - estResultHom4ElaObs ) )
[1] 0.1785792
> 
> 
> ################ panel data #####################
> data( "GrunfeldGreene", package = "systemfit" )
> ggData <- plm.data( GrunfeldGreene, c( "firm", "year" ) )
> # fixed effects
> ggResult <- quadFuncEst( "invest", c( "value", "capital" ), ggData )
> coef( ggResult )
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
5.311242e+01 5.089985e-02 1.108780e-01 7.569854e-06 3.008554e-05 1.230247e-04 
> print( ggResult )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData)

$nExog
[1] 2

$nShifter
[1] 0

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

Coefficients:
       a_1        a_2      b_1_1      b_1_2      b_2_2 
5.0900e-02 1.1088e-01 7.5699e-06 3.0086e-05 1.2302e-04 


$residuals
           1            2            3            4            5            6 
  23.6351776  -41.9402777 -118.6137892  -58.2218382 -111.4754880  -12.1913627 
           7            8            9           10           11           12 
  33.8713011   73.2251075   64.4602012   99.7623972   52.9754969  133.0579145 
          13           14           15           16           17           18 
  40.6064652  -22.3174897  -76.5665905  -22.7978563  -78.5650968  -48.5479632 
          19           20           21           22           23           24 
  13.2946243   56.3490668  -14.0903871   -5.1020975  -17.6988342   -9.1728714 
          25           26           27           28           29           30 
 -23.8009654   -9.9929396   -7.2859946  -15.0337975  -23.9316359  -17.1961547 
          31           32           33           34           35           36 
   4.1921241  -17.6901588  -12.2225340    5.7431226   -3.8497553    9.2348715 
          37           38           39           40           41           42 
  55.7337247   31.0564792   32.8190765   38.2887274   46.4683294    1.4533772 
          43           44           45           46           47           48 
 -26.1086943  -10.3576274  -25.6783839    6.8770104   60.2433445   43.7856093 
          49           50           51           52           53           54 
  -4.9144934   -5.1223462    8.1421702   53.3397738   59.3346495   43.2640746 
          55           56           57           58           59           60 
  -8.0288374  -34.2086480  -15.8192687  -30.2824390  -54.7227803 -107.6648203 
          61           62           63           64           65           66 
   8.1683834    3.8614124    0.2810341   -3.8204778   -6.3184039   -3.0635382 
          67           68           69           70           71           72 
  20.7351398   10.9222977   -1.8660271   -2.5840571   -7.7953317    5.9381332 
          73           74           75           76           77           78 
  15.0009465    1.3913307  -13.0805696  -15.2029425    2.6504980    9.0884811 
          79           80           81           82           83           84 
   1.7367331  -26.0430420 -106.7352118   10.5415472   51.1896096 -120.7417888 
          85           86           87           88           89           90 
-174.7419676 -149.8172974   46.3613449   27.4075482  -43.3617809  -99.4647412 
          91           92           93           94           95           96 
-118.7655666   23.3691474   36.9271812  114.9935736   13.6960624   25.2520400 
          97           98           99          100 
 151.2150306  195.4748188  158.9002296  -41.6997793 

$fitted
          1           2           3           4           5           6 
 293.964822  433.740278  529.213789  315.921838  442.275488  473.391363 
          7           8           9          10          11          12 
 478.128699  374.774893  435.139799  447.737603  508.224503  555.042086 
         13          14          15          16          17          18 
 528.293535  551.517490  631.666591  665.697856  834.465097  939.747963 
         19          20          21          22          23          24 
1291.105376 1430.350933   54.380387   77.862098   83.958834   60.772871 
         25          26          27          28          29          30 
  76.210965   79.402940   75.635995   61.833797   71.331636   76.766155 
         31          32          33          34          35          36 
  84.587876   91.810159   74.902534   83.616877   82.829755   91.425129 
         37          38          39          40          41          42 
 104.886275  113.943521  142.110923  134.201273  -13.368329   43.546623 
         43          44          45          46          47          48 
 103.308694   54.957627   73.778384   67.522990   52.756656   48.114391 
         49          50          51          52          53          54 
  66.214493   61.922346   85.457830  106.560226   87.865351  103.035925 
         55          56          57          58          59          60 
 106.328837  127.708648  151.019269  187.582439  234.222780  297.264820 
         61          62          63          64          65          66 
   4.761617   22.038588   34.768966   26.710478   25.158404   31.633538 
         67          68          69          70          71          72 
  27.774860   32.417702   38.886027   40.394057   47.065332   47.521867 
         73          74          75          76          77          78 
  40.559054   48.168669   45.120570   47.442942   51.729502   62.691519 
         79          80          81          82          83          84 
  88.343267   94.643042  316.635212  344.758453  418.710390  383.041789 
         85          86          87          88          89          90 
 405.141968  411.417297  426.438655  418.192452  404.961781  387.664741 
         91          92          93          94          95          96 
 377.465567  396.930853  383.572819  379.506426  391.403938  393.547960 
         97          98          99         100 
 436.984969  449.725181  482.099770  500.999779 

$coef
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
5.311242e+01 5.089985e-02 1.108780e-01 7.569854e-06 3.008554e-05 1.230247e-04 

$coefCov
      a_0           a_1           a_2         b_1_1         b_1_2         b_2_2
a_0    NA            NA            NA            NA            NA            NA
a_1    NA  1.782111e-03 -9.302214e-04 -4.931213e-07  2.114129e-07  1.607408e-07
a_2    NA -9.302214e-04  4.604248e-03  4.193545e-07 -1.046991e-06  3.042654e-07
b_1_1  NA -4.931213e-07  4.193545e-07  1.640629e-10 -1.395656e-10  1.346447e-10
b_1_2  NA  2.114129e-07 -1.046991e-06 -1.395656e-10  7.162004e-10 -2.467402e-09
b_2_2  NA  1.607408e-07  3.042654e-07  1.346447e-10 -2.467402e-09  1.275228e-08

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2
1   1 3078.5    2.8  4738581.12     8619.80       3.920
2   1 4661.7   52.6 10865723.44   245205.42    1383.380
3   1 5387.1  156.9 14510423.21   845235.99   12308.805
4   1 2792.2  209.2  3898190.42   584128.24   21882.320
5   1 4313.2  203.4  9301847.12   877304.88   20685.780
6   1 4643.9  207.2 10782903.60   962216.08   21465.920
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520
8   1 3244.1  303.7  5262092.40   985233.17   46116.845
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405
10  1 4379.3  201.6  9589134.25   882866.88   20321.280
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845
21  1  417.5   10.5    87153.12     4383.75      55.125
22  1  837.8   10.2   350954.42     8545.56      52.020
23  1  883.9   34.7   390639.60    30671.33     602.045
24  1  437.9   51.8    95878.20    22683.22    1341.620
25  1  679.7   64.3   230996.05    43704.71    2067.245
26  1  727.8   67.1   264846.42    48835.38    2251.205
27  1  643.6   75.2   207110.48    48398.72    2827.520
28  1  410.9   71.4    84419.40    29338.26    2548.980
29  1  588.4   67.1   173107.28    39481.64    2251.205
30  1  698.4   60.5   243881.28    42253.20    1830.125
31  1  846.4   54.6   358196.48    46213.44    1490.580
32  1  893.8   84.8   399439.22    75794.24    3595.520
33  1  579.0   96.8   167620.50    56047.20    4685.120
34  1  694.6  110.2   241234.58    76544.92    6072.020
35  1  590.3  147.4   174227.04    87010.22   10863.380
36  1  693.5  163.2   240471.12   113179.20   13317.120
37  1  809.0  203.5   327240.50   164631.50   20706.125
38  1  727.0  290.6   264264.50   211266.20   42224.180
39  1 1001.5  346.1   501501.12   346619.15   59892.605
40  1  703.2  414.9   247245.12   291757.68   86071.005
41  1 1170.6   97.8   685152.18   114484.68    4782.420
42  1 2015.8  104.4  2031724.82   210449.52    5449.680
43  1 2803.3  118.0  3929245.45   330789.40    6962.000
44  1 2039.7  156.2  2080188.05   318601.14   12199.220
45  1 2256.2  172.6  2545219.22   389420.12   14895.380
46  1 2132.2  186.6  2273138.42   397868.52   17409.780
47  1 1834.1  220.9  1681961.40   405152.69   24398.405
48  1 1588.0  287.8  1260872.00   457026.40   41414.420
49  1 1749.4  319.9  1530200.18   559633.06   51168.005
50  1 1687.2  321.3  1423321.92   542097.36   51616.845
51  1 2007.7  319.6  2015429.65   641660.92   51072.080
52  1 2208.3  346.0  2438294.45   764071.80   59858.000
53  1 1656.7  456.4  1372327.45   756117.88  104150.480
54  1 1604.4  543.4  1287049.68   871830.96  147641.780
55  1 1431.8  618.3  1025025.62   885281.94  191147.445
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605
61  1  191.5    1.8    18336.12      344.70       1.620
62  1  516.0    0.8   133128.00      412.80       0.320
63  1  729.0    7.4   265720.50     5394.60      27.380
64  1  560.4   18.1   157024.08    10143.24     163.805
65  1  519.9   23.5   135148.00    12217.65     276.125
66  1  628.5   26.5   197506.12    16655.25     351.125
67  1  537.1   36.2   144238.21    19443.02     655.220
68  1  561.2   60.8   157472.72    34120.96    1848.320
69  1  617.2   84.4   190467.92    52091.68    3561.680
70  1  626.7   91.2   196376.45    57155.04    4158.720
71  1  737.2   92.4   271731.92    68117.28    4268.880
72  1  760.5   86.0   289180.12    65403.00    3698.000
73  1  581.4  111.1   169012.98    64593.54    6171.605
74  1  662.3  130.6   219320.64    86496.38    8528.180
75  1  583.8  141.8   170411.22    82782.84   10053.620
76  1  635.2  136.7   201739.52    86831.84    9343.445
77  1  723.8  129.7   261943.22    93876.86    8411.045
78  1  864.1  145.5   373334.41   125726.55   10585.125
79  1 1193.5  174.8   712221.12   208623.80   15277.520
80  1 1188.9  213.5   706741.61   253830.15   22791.125
81  1 1362.4   53.8   928066.88    73297.12    1447.220
82  1 1807.1   50.5  1632805.20    91258.55    1275.125
83  1 2676.3  118.1  3581290.85   316071.03    6973.805
84  1 1801.9  260.2  1623421.81   468854.38   33852.020
85  1 1957.3  312.7  1915511.65   612047.71   48890.645
86  1 2202.9  254.2  2426384.21   559977.18   32308.820
87  1 2380.5  261.4  2833390.12   622262.70   34164.980
88  1 2168.6  298.7  2351412.98   647760.82   44610.845
89  1 1985.1  301.8  1970311.00   599103.18   45541.620
90  1 1813.9  279.1  1645116.61   506259.49   38948.405
91  1 1850.2  213.8  1711620.02   395572.76   22855.220
92  1 2067.7  232.6  2137691.64   480947.02   27051.380
93  1 1796.7  264.8  1614065.45   475766.16   35059.520
94  1 1625.8  306.9  1321612.82   498958.02   47093.805
95  1 1667.0  351.1  1389444.50   585283.70   61635.605
96  1 1677.4  357.8  1406835.38   600173.72   64010.420
97  1 2289.5  342.1  2620905.12   783237.95   58516.205
98  1 2159.4  444.2  2331504.18   959205.48   98656.820
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045

attr(,"class")
[1] "quadFuncEst"
> # random effects
> ggResultRan <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    model = "random", random.method = "amemiya" )
> coef( ggResultRan )
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
3.949693e+01 6.159186e-02 1.075103e-01 5.177555e-06 3.163931e-05 1.186991e-04 
> print( ggResultRan )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, model = "random", random.method = "amemiya")

$nExog
[1] 2

$nShifter
[1] 0

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

Coefficients:
(Intercept)         a_1         a_2       b_1_1       b_1_2       b_2_2 
 3.9497e+01  6.1592e-02  1.0751e-01  5.1776e-06  3.1639e-05  1.1870e-04 


$residuals
           1            2            3            4            5            6 
  30.6507076  -37.3882895 -113.6323659  -50.2601319 -107.3293900   -8.1537400 
           7            8            9           10           11           12 
  37.7805564   79.4178121   68.7492668  103.8727501   56.8973174  136.6279416 
          13           14           15           16           17           18 
  46.0215209  -15.5652400  -71.3321695  -17.5825895  -75.5486460  -45.2971985 
          19           20           21           22           23           24 
  17.3384182   61.4347541  -13.7421915   -8.6241489  -21.5683390   -8.9057027 
          25           26           27           28           29           30 
 -25.7833082  -12.4063341   -8.9067946  -14.4444689  -25.0594992  -19.3591801 
          31           32           33           34           35           36 
   0.6926672  -21.5329042  -13.1782092    3.7468363   -4.7614252    7.4014255 
          37           38           39           40           41           42 
  52.9606657   29.3234517   28.7716621   37.2526573   32.1762196  -18.7782020 
          43           44           45           46           47           48 
 -50.3554260  -30.6932073  -47.2594321  -13.9842312   41.2895402   26.6740382 
          49           50           51           52           53           54 
 -23.1165737  -22.8811661  -11.7897175   32.2114033   42.1296190   26.7155507 
          55           56           57           58           59           60 
 -22.9392323  -50.4462398  -33.5624157  -49.6931098  -75.8081463 -130.7591986 
          61           62           63           64           65           66 
   5.9514417   -1.5539465   -7.0799171   -9.6095459  -11.7113319   -9.4649058 
          67           68           69           70           71           72 
  15.2132388    5.2395801   -8.0095962   -8.7974497  -15.0224327   -1.5161554 
          73           74           75           76           77           78 
   9.2706060   -5.0418101  -18.7413078  -21.3648412   -4.3532401    0.8642628 
          79           80           81           82           83           84 
  -9.2085445  -36.8596548  -80.2981387   33.8700664   69.7890007  -97.1196963 
          85           86           87           88           89           90 
-152.0632800 -128.7302363   66.4586855   48.7486720  -20.8803161  -75.8914768 
          91           92           93           94           95           96 
 -95.5388674   45.2384389   60.5924640  139.9442861   38.4461622   49.9422476 
          97           98           99          100 
 171.9040044  217.1065501  181.8001544  -19.2313870 

$fitted
           1            2            3            4            5            6 
 286.9492924  429.1882895  524.2323659  307.9601319  438.1293900  469.3537400 
           7            8            9           10           11           12 
 474.2194436  368.5821879  430.8507332  443.6272499  504.3026826  551.4720584 
          13           14           15           16           17           18 
 522.8784791  544.7652400  626.4321695  660.4825895  831.4486460  936.4971985 
          19           20           21           22           23           24 
1287.0615818 1425.2652459   54.0321915   81.3841489   87.8283390   60.5057027 
          25           26           27           28           29           30 
  78.1933082   81.8163341   77.2567946   61.2444689   72.4594992   78.9291801 
          31           32           33           34           35           36 
  88.0873328   95.6529042   75.8582092   85.6131637   83.7414252   93.2585745 
          37           38           39           40           41           42 
 107.6593343  115.6765483  146.1583379  135.2373427    0.9237804   63.7782020 
          43           44           45           46           47           48 
 127.5554260   75.2932073   95.3594321   88.3842312   71.7104598   65.2259618 
          49           50           51           52           53           54 
  84.4165737   79.6811661  105.3897175  127.6885967  105.0703810  119.5844493 
          55           56           57           58           59           60 
 121.2392323  143.9462398  168.7624157  206.9931098  255.3081463  320.3591986 
          61           62           63           64           65           66 
   6.9785583   27.4539465   42.1299171   32.4995459   30.5513319   38.0349058 
          67           68           69           70           71           72 
  33.2967612   38.1004199   45.0295962   46.6074497   54.2924327   54.9761554 
          73           74           75           76           77           78 
  46.2893940   54.6018101   50.7813078   53.6048412   58.7332401   70.9157372 
          79           80           81           82           83           84 
  99.2885445  105.4596548  290.1981387  321.4299336  400.1109993  359.4196963 
          85           86           87           88           89           90 
 382.4632800  390.3302363  406.3413145  396.8513280  382.4803161  364.0914768 
          91           92           93           94           95           96 
 354.2388674  375.0615611  359.9075360  354.5557139  366.6538378  368.8577524 
          97           98           99          100 
 416.2959956  428.0934499  459.1998456  478.5313870 

$coef
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
3.949693e+01 6.159186e-02 1.075103e-01 5.177555e-06 3.163931e-05 1.186991e-04 

$coefCov
                a_0           a_1           a_2         b_1_1         b_1_2
a_0    4.458138e+03 -1.662544e+00  1.041177e-01  4.064712e-04 -4.725754e-05
a_1   -1.662544e+00  1.577233e-03 -9.498012e-04 -4.522919e-07  2.088252e-07
a_2    1.041177e-01 -9.498012e-04  4.643085e-03  4.251534e-07 -1.055680e-06
b_1_1  4.064712e-04 -4.522919e-07  4.251534e-07  1.558674e-10 -1.398413e-10
b_1_2 -4.725754e-05  2.088252e-07 -1.055680e-06 -1.398413e-10  7.224317e-10
b_2_2 -4.999798e-05  1.895827e-07  3.055948e-07  1.309990e-10 -2.489367e-09
              b_2_2
a_0   -4.999798e-05
a_1    1.895827e-07
a_2    3.055948e-07
b_1_1  1.309990e-10
b_1_2 -2.489367e-09
b_2_2  1.286653e-08

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2
1   1 3078.5    2.8  4738581.12     8619.80       3.920
2   1 4661.7   52.6 10865723.44   245205.42    1383.380
3   1 5387.1  156.9 14510423.21   845235.99   12308.805
4   1 2792.2  209.2  3898190.42   584128.24   21882.320
5   1 4313.2  203.4  9301847.12   877304.88   20685.780
6   1 4643.9  207.2 10782903.60   962216.08   21465.920
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520
8   1 3244.1  303.7  5262092.40   985233.17   46116.845
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405
10  1 4379.3  201.6  9589134.25   882866.88   20321.280
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845
21  1  417.5   10.5    87153.12     4383.75      55.125
22  1  837.8   10.2   350954.42     8545.56      52.020
23  1  883.9   34.7   390639.60    30671.33     602.045
24  1  437.9   51.8    95878.20    22683.22    1341.620
25  1  679.7   64.3   230996.05    43704.71    2067.245
26  1  727.8   67.1   264846.42    48835.38    2251.205
27  1  643.6   75.2   207110.48    48398.72    2827.520
28  1  410.9   71.4    84419.40    29338.26    2548.980
29  1  588.4   67.1   173107.28    39481.64    2251.205
30  1  698.4   60.5   243881.28    42253.20    1830.125
31  1  846.4   54.6   358196.48    46213.44    1490.580
32  1  893.8   84.8   399439.22    75794.24    3595.520
33  1  579.0   96.8   167620.50    56047.20    4685.120
34  1  694.6  110.2   241234.58    76544.92    6072.020
35  1  590.3  147.4   174227.04    87010.22   10863.380
36  1  693.5  163.2   240471.12   113179.20   13317.120
37  1  809.0  203.5   327240.50   164631.50   20706.125
38  1  727.0  290.6   264264.50   211266.20   42224.180
39  1 1001.5  346.1   501501.12   346619.15   59892.605
40  1  703.2  414.9   247245.12   291757.68   86071.005
41  1 1170.6   97.8   685152.18   114484.68    4782.420
42  1 2015.8  104.4  2031724.82   210449.52    5449.680
43  1 2803.3  118.0  3929245.45   330789.40    6962.000
44  1 2039.7  156.2  2080188.05   318601.14   12199.220
45  1 2256.2  172.6  2545219.22   389420.12   14895.380
46  1 2132.2  186.6  2273138.42   397868.52   17409.780
47  1 1834.1  220.9  1681961.40   405152.69   24398.405
48  1 1588.0  287.8  1260872.00   457026.40   41414.420
49  1 1749.4  319.9  1530200.18   559633.06   51168.005
50  1 1687.2  321.3  1423321.92   542097.36   51616.845
51  1 2007.7  319.6  2015429.65   641660.92   51072.080
52  1 2208.3  346.0  2438294.45   764071.80   59858.000
53  1 1656.7  456.4  1372327.45   756117.88  104150.480
54  1 1604.4  543.4  1287049.68   871830.96  147641.780
55  1 1431.8  618.3  1025025.62   885281.94  191147.445
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605
61  1  191.5    1.8    18336.12      344.70       1.620
62  1  516.0    0.8   133128.00      412.80       0.320
63  1  729.0    7.4   265720.50     5394.60      27.380
64  1  560.4   18.1   157024.08    10143.24     163.805
65  1  519.9   23.5   135148.00    12217.65     276.125
66  1  628.5   26.5   197506.12    16655.25     351.125
67  1  537.1   36.2   144238.21    19443.02     655.220
68  1  561.2   60.8   157472.72    34120.96    1848.320
69  1  617.2   84.4   190467.92    52091.68    3561.680
70  1  626.7   91.2   196376.45    57155.04    4158.720
71  1  737.2   92.4   271731.92    68117.28    4268.880
72  1  760.5   86.0   289180.12    65403.00    3698.000
73  1  581.4  111.1   169012.98    64593.54    6171.605
74  1  662.3  130.6   219320.64    86496.38    8528.180
75  1  583.8  141.8   170411.22    82782.84   10053.620
76  1  635.2  136.7   201739.52    86831.84    9343.445
77  1  723.8  129.7   261943.22    93876.86    8411.045
78  1  864.1  145.5   373334.41   125726.55   10585.125
79  1 1193.5  174.8   712221.12   208623.80   15277.520
80  1 1188.9  213.5   706741.61   253830.15   22791.125
81  1 1362.4   53.8   928066.88    73297.12    1447.220
82  1 1807.1   50.5  1632805.20    91258.55    1275.125
83  1 2676.3  118.1  3581290.85   316071.03    6973.805
84  1 1801.9  260.2  1623421.81   468854.38   33852.020
85  1 1957.3  312.7  1915511.65   612047.71   48890.645
86  1 2202.9  254.2  2426384.21   559977.18   32308.820
87  1 2380.5  261.4  2833390.12   622262.70   34164.980
88  1 2168.6  298.7  2351412.98   647760.82   44610.845
89  1 1985.1  301.8  1970311.00   599103.18   45541.620
90  1 1813.9  279.1  1645116.61   506259.49   38948.405
91  1 1850.2  213.8  1711620.02   395572.76   22855.220
92  1 2067.7  232.6  2137691.64   480947.02   27051.380
93  1 1796.7  264.8  1614065.45   475766.16   35059.520
94  1 1625.8  306.9  1321612.82   498958.02   47093.805
95  1 1667.0  351.1  1389444.50   585283.70   61635.605
96  1 1677.4  357.8  1406835.38   600173.72   64010.420
97  1 2289.5  342.1  2620905.12   783237.95   58516.205
98  1 2159.4  444.2  2331504.18   959205.48   98656.820
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045

attr(,"class")
[1] "quadFuncEst"
> 
> ## panel data with a shifter
> ggData$yearInt <- as.integer( as.character( ggData$year ) )
> ggData$tech <- exp( ggData$yearInt - min( ggData$yearInt ) )
> # fixed effects
> ggResShifter <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "tech" )
> coef( ggResShifter )
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
5.341766e+01 5.071286e-02 1.104716e-01 7.591567e-06 3.024672e-05 1.224109e-04 
         d_1 
3.015003e-09 
> print.default( ggResShifter )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "tech")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1

Coefficients:
       a_1        a_2      b_1_1      b_1_2      b_2_2        d_1 
5.0713e-02 1.1047e-01 7.5916e-06 3.0247e-05 1.2241e-04 3.0150e-09 


$residuals
           1            2            3            4            5            6 
  23.5345996  -41.8948965 -118.5595218  -58.3531571 -111.4900665  -12.1879242 
           7            8            9           10           11           12 
  33.8608625   73.1373031   64.4228863   99.7520650   52.9756098  133.0356992 
          13           14           15           16           17           18 
  40.6119015  -22.2462120  -76.4744849  -22.6795936  -78.5171508  -48.4623975 
          19           20           21           22           23           24 
  13.1715272   56.3629507  -14.1351865   -5.0748256  -17.6570758   -9.1994219 
          25           26           27           28           29           30 
 -23.7830976   -9.9663888   -7.2702201  -15.0575178  -23.9276611  -17.1765499 
          31           32           33           34           35           36 
   4.2336356  -17.6319964  -12.2097860    5.7780387   -3.8188081    9.2811571 
          37           38           39           40           41           42 
  55.7954086   31.0992494   32.7944718   37.9265744   46.3158146    1.4172958 
          43           44           45           46           47           48 
 -26.0516605  -10.3825299  -25.6759944    6.8679911   60.2084727   43.7431306 
          49           50           51           52           53           54 
  -4.9301508   -5.1436586    8.1508182   53.3730287   59.3609293   43.3249850 
          55           56           57           58           59           60 
  -7.9418289  -34.1025880  -15.7082807  -30.1805907  -54.7032013 -107.9419821 
          61           62           63           64           65           66 
   8.0996263    3.8504245    0.3088928   -3.8181197   -6.3212151   -3.0468461 
          67           68           69           70           71           72 
  20.7395757   10.9393142   -1.8315152   -2.5455987   -7.7391001    5.9957150 
          73           74           75           76           77           78 
  15.0391855    1.4486029  -13.0331202  -15.1559530    2.6912599    9.1096460 
          79           80           81           82           83           84 
   1.6884241  -26.4191989 -106.8325717   10.5076999   51.2707240 -120.7320496 
          85           86           87           88           89           90 
-174.7020251 -149.7680815   46.4289590   27.4634620  -43.3222376  -99.4484734 
          91           92           93           94           95           96 
-118.7625722   23.3999030   36.9371570  114.9978569   13.7172598   25.2703548 
          97           98           99          100 
 151.2652489  195.4987272  158.8630106  -42.0523521 

$fitted
          1           2           3           4           5           6 
 294.065400  433.694897  529.159522  316.053157  442.290066  473.387924 
          7           8           9          10          11          12 
 478.139138  374.862697  435.177114  447.747935  508.224390  555.064301 
         13          14          15          16          17          18 
 528.288098  551.446212  631.574485  665.579594  834.417151  939.662398 
         19          20          21          22          23          24 
1291.228473 1430.337049   54.425187   77.834826   83.917076   60.799422 
         25          26          27          28          29          30 
  76.193098   79.376389   75.620220   61.857518   71.327661   76.746550 
         31          32          33          34          35          36 
  84.546364   91.751996   74.889786   83.581961   82.798808   91.378843 
         37          38          39          40          41          42 
 104.824591  113.900751  142.135528  134.563426  -13.215815   43.582704 
         43          44          45          46          47          48 
 103.251660   54.982530   73.775994   67.532009   52.791527   48.156869 
         49          50          51          52          53          54 
  66.230151   61.943659   85.449182  106.526971   87.839071  102.975015 
         55          56          57          58          59          60 
 106.241829  127.602588  150.908281  187.480591  234.203201  297.541982 
         61          62          63          64          65          66 
   4.830374   22.049576   34.741107   26.708120   25.161215   31.616846 
         67          68          69          70          71          72 
  27.770424   32.400686   38.851515   40.355599   47.009100   47.464285 
         73          74          75          76          77          78 
  40.520814   48.111397   45.073120   47.395953   51.688740   62.670354 
         79          80          81          82          83          84 
  88.391576   95.019199  316.732572  344.792300  418.629276  383.032050 
         85          86          87          88          89          90 
 405.102025  411.368081  426.371041  418.136538  404.922238  387.648473 
         91          92          93          94          95          96 
 377.462572  396.900097  383.562843  379.502143  391.382740  393.529645 
         97          98          99         100 
 436.934751  449.701273  482.136989  501.352352 

$coef
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
5.341766e+01 5.071286e-02 1.104716e-01 7.591567e-06 3.024672e-05 1.224109e-04 
         d_1 
3.015003e-09 

$coefCov
      a_0           a_1           a_2         b_1_1         b_1_2         b_2_2
a_0    NA            NA            NA            NA            NA            NA
a_1    NA  1.991033e-03 -5.301471e-04 -5.205963e-07  5.096632e-08  7.826615e-07
a_2    NA -5.301471e-04  5.548125e-03  3.763955e-07 -1.412598e-06  1.655321e-06
b_1_1  NA -5.205963e-07  3.763955e-07  1.684531e-10 -1.222266e-10  6.414962e-11
b_1_2  NA  5.096632e-08 -1.412598e-06 -1.222266e-10  8.645875e-10 -3.029619e-09
b_2_2  NA  7.826615e-07  1.655321e-06  6.414962e-11 -3.029619e-09  1.493120e-08
d_1    NA -3.045756e-09 -6.619054e-09  3.536729e-13  2.625240e-12 -9.998373e-12
                d_1
a_0              NA
a_1   -3.045756e-09
a_2   -6.619054e-09
b_1_1  3.536729e-13
b_1_2  2.625240e-12
b_2_2 -9.998373e-12
d_1    4.910799e-14

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "tech"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2          d_1
1   1 3078.5    2.8  4738581.12     8619.80       3.920 1.000000e+00
2   1 4661.7   52.6 10865723.44   245205.42    1383.380 2.718282e+00
3   1 5387.1  156.9 14510423.21   845235.99   12308.805 7.389056e+00
4   1 2792.2  209.2  3898190.42   584128.24   21882.320 2.008554e+01
5   1 4313.2  203.4  9301847.12   877304.88   20685.780 5.459815e+01
6   1 4643.9  207.2 10782903.60   962216.08   21465.920 1.484132e+02
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520 4.034288e+02
8   1 3244.1  303.7  5262092.40   985233.17   46116.845 1.096633e+03
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405 2.980958e+03
10  1 4379.3  201.6  9589134.25   882866.88   20321.280 8.103084e+03
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500 2.202647e+04
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420 5.987414e+04
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125 1.627548e+05
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880 4.424134e+05
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005 1.202604e+06
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500 3.269017e+06
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645 8.886111e+06
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125 2.415495e+07
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645 6.565997e+07
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845 1.784823e+08
21  1  417.5   10.5    87153.12     4383.75      55.125 1.000000e+00
22  1  837.8   10.2   350954.42     8545.56      52.020 2.718282e+00
23  1  883.9   34.7   390639.60    30671.33     602.045 7.389056e+00
24  1  437.9   51.8    95878.20    22683.22    1341.620 2.008554e+01
25  1  679.7   64.3   230996.05    43704.71    2067.245 5.459815e+01
26  1  727.8   67.1   264846.42    48835.38    2251.205 1.484132e+02
27  1  643.6   75.2   207110.48    48398.72    2827.520 4.034288e+02
28  1  410.9   71.4    84419.40    29338.26    2548.980 1.096633e+03
29  1  588.4   67.1   173107.28    39481.64    2251.205 2.980958e+03
30  1  698.4   60.5   243881.28    42253.20    1830.125 8.103084e+03
31  1  846.4   54.6   358196.48    46213.44    1490.580 2.202647e+04
32  1  893.8   84.8   399439.22    75794.24    3595.520 5.987414e+04
33  1  579.0   96.8   167620.50    56047.20    4685.120 1.627548e+05
34  1  694.6  110.2   241234.58    76544.92    6072.020 4.424134e+05
35  1  590.3  147.4   174227.04    87010.22   10863.380 1.202604e+06
36  1  693.5  163.2   240471.12   113179.20   13317.120 3.269017e+06
37  1  809.0  203.5   327240.50   164631.50   20706.125 8.886111e+06
38  1  727.0  290.6   264264.50   211266.20   42224.180 2.415495e+07
39  1 1001.5  346.1   501501.12   346619.15   59892.605 6.565997e+07
40  1  703.2  414.9   247245.12   291757.68   86071.005 1.784823e+08
41  1 1170.6   97.8   685152.18   114484.68    4782.420 1.000000e+00
42  1 2015.8  104.4  2031724.82   210449.52    5449.680 2.718282e+00
43  1 2803.3  118.0  3929245.45   330789.40    6962.000 7.389056e+00
44  1 2039.7  156.2  2080188.05   318601.14   12199.220 2.008554e+01
45  1 2256.2  172.6  2545219.22   389420.12   14895.380 5.459815e+01
46  1 2132.2  186.6  2273138.42   397868.52   17409.780 1.484132e+02
47  1 1834.1  220.9  1681961.40   405152.69   24398.405 4.034288e+02
48  1 1588.0  287.8  1260872.00   457026.40   41414.420 1.096633e+03
49  1 1749.4  319.9  1530200.18   559633.06   51168.005 2.980958e+03
50  1 1687.2  321.3  1423321.92   542097.36   51616.845 8.103084e+03
51  1 2007.7  319.6  2015429.65   641660.92   51072.080 2.202647e+04
52  1 2208.3  346.0  2438294.45   764071.80   59858.000 5.987414e+04
53  1 1656.7  456.4  1372327.45   756117.88  104150.480 1.627548e+05
54  1 1604.4  543.4  1287049.68   871830.96  147641.780 4.424134e+05
55  1 1431.8  618.3  1025025.62   885281.94  191147.445 1.202604e+06
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380 3.269017e+06
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845 8.886111e+06
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605 2.415495e+07
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045 6.565997e+07
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605 1.784823e+08
61  1  191.5    1.8    18336.12      344.70       1.620 1.000000e+00
62  1  516.0    0.8   133128.00      412.80       0.320 2.718282e+00
63  1  729.0    7.4   265720.50     5394.60      27.380 7.389056e+00
64  1  560.4   18.1   157024.08    10143.24     163.805 2.008554e+01
65  1  519.9   23.5   135148.00    12217.65     276.125 5.459815e+01
66  1  628.5   26.5   197506.12    16655.25     351.125 1.484132e+02
67  1  537.1   36.2   144238.21    19443.02     655.220 4.034288e+02
68  1  561.2   60.8   157472.72    34120.96    1848.320 1.096633e+03
69  1  617.2   84.4   190467.92    52091.68    3561.680 2.980958e+03
70  1  626.7   91.2   196376.45    57155.04    4158.720 8.103084e+03
71  1  737.2   92.4   271731.92    68117.28    4268.880 2.202647e+04
72  1  760.5   86.0   289180.12    65403.00    3698.000 5.987414e+04
73  1  581.4  111.1   169012.98    64593.54    6171.605 1.627548e+05
74  1  662.3  130.6   219320.64    86496.38    8528.180 4.424134e+05
75  1  583.8  141.8   170411.22    82782.84   10053.620 1.202604e+06
76  1  635.2  136.7   201739.52    86831.84    9343.445 3.269017e+06
77  1  723.8  129.7   261943.22    93876.86    8411.045 8.886111e+06
78  1  864.1  145.5   373334.41   125726.55   10585.125 2.415495e+07
79  1 1193.5  174.8   712221.12   208623.80   15277.520 6.565997e+07
80  1 1188.9  213.5   706741.61   253830.15   22791.125 1.784823e+08
81  1 1362.4   53.8   928066.88    73297.12    1447.220 1.000000e+00
82  1 1807.1   50.5  1632805.20    91258.55    1275.125 2.718282e+00
83  1 2676.3  118.1  3581290.85   316071.03    6973.805 7.389056e+00
84  1 1801.9  260.2  1623421.81   468854.38   33852.020 2.008554e+01
85  1 1957.3  312.7  1915511.65   612047.71   48890.645 5.459815e+01
86  1 2202.9  254.2  2426384.21   559977.18   32308.820 1.484132e+02
87  1 2380.5  261.4  2833390.12   622262.70   34164.980 4.034288e+02
88  1 2168.6  298.7  2351412.98   647760.82   44610.845 1.096633e+03
89  1 1985.1  301.8  1970311.00   599103.18   45541.620 2.980958e+03
90  1 1813.9  279.1  1645116.61   506259.49   38948.405 8.103084e+03
91  1 1850.2  213.8  1711620.02   395572.76   22855.220 2.202647e+04
92  1 2067.7  232.6  2137691.64   480947.02   27051.380 5.987414e+04
93  1 1796.7  264.8  1614065.45   475766.16   35059.520 1.627548e+05
94  1 1625.8  306.9  1321612.82   498958.02   47093.805 4.424134e+05
95  1 1667.0  351.1  1389444.50   585283.70   61635.605 1.202604e+06
96  1 1677.4  357.8  1406835.38   600173.72   64010.420 3.269017e+06
97  1 2289.5  342.1  2620905.12   783237.95   58516.205 8.886111e+06
98  1 2159.4  444.2  2331504.18   959205.48   98656.820 2.415495e+07
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480 6.565997e+07
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045 1.784823e+08

attr(,"class")
[1] "quadFuncEst"
> # random effects
> ggResShifterRan <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "tech", model = "random", random.method = "amemiya" )
> coef( ggResShifterRan )
          a_0           a_1           a_2         b_1_1         b_1_2 
 3.770917e+01  6.265801e-02  1.102823e-01  5.069918e-06  3.052773e-05 
        b_2_2           d_1 
 1.229737e-04 -2.100077e-08 
> print.default( ggResShifterRan )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "tech", model = "random", random.method = "amemiya")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1

Coefficients:
(Intercept)         a_1         a_2       b_1_1       b_1_2       b_2_2 
 3.7709e+01  6.2658e-02  1.1028e-01  5.0699e-06  3.0528e-05  1.2297e-04 
        d_1 
-2.1001e-08 


$residuals
           1            2            3            4            5            6 
  31.0877047  -37.8606858 -114.1546891  -49.6342897 -107.3964588   -8.3334519 
           7            8            9           10           11           12 
  37.6947970   79.7889991   68.8280079  103.7790302   56.7464335  136.6344769 
          13           14           15           16           17           18 
  45.7765460  -16.2868089  -72.1638172  -18.5915406  -76.0273892  -46.0358261 
          19           20           21           22           23           24 
  18.0198609   61.1883867  -13.3639635   -8.6601606  -21.6948994   -8.6479263 
          25           26           27           28           29           30 
 -25.7831687  -12.4566760   -8.8989774  -14.2112116  -24.9814314  -19.3674881 
          31           32           33           34           35           36 
   0.5613734  -21.7693305  -13.1616732    3.6336328   -4.8666431    7.2115094 
          37           38           39           40           41           42 
  52.6888079   29.1713130   29.1451199   39.9225390   32.9413629  -18.6837084 
          43           44           45           46           47           48 
 -50.8066844  -30.6712003  -47.3964578  -14.0585024   41.3526069   26.7536538 
          49           50           51           52           53           54 
 -23.1966253  -22.9315910  -12.0001067   31.8587857   41.7483128   26.0882497 
          55           56           57           58           59           60 
 -23.7733950  -51.3827426  -34.5000589  -50.5276490  -76.0288779 -128.8655608 
          61           62           63           64           65           66 
   6.4451739   -1.3909729   -7.1426360   -9.5291754  -11.6032790   -9.4696273 
          67           68           69           70           71           72 
  15.2751462    5.2202567   -8.1378006   -8.9508124  -15.2768142   -1.7755414 
          73           74           75           76           77           78 
   9.1103441   -5.3168168  -18.9636161  -21.5735078   -4.5007040    0.8821770 
          79           80           81           82           83           84 
  -8.6428392  -34.0094226  -79.6358335   34.1639563   69.4040659  -97.1220865 
          85           86           87           88           89           90 
-152.2505543 -128.9492055   66.1355235   48.4798602  -21.0611280  -75.9367531 
          91           92           93           94           95           96 
 -95.4886278   45.1282949   60.5877985  139.9538575   38.3463485   49.8644415 
          97           98           99          100 
 171.6927422  217.0644968  182.1725196  -16.6490910 

$fitted
           1            2            3            4            5            6 
 286.5122953  429.6606858  524.7546891  307.3342897  438.1964588  469.5334519 
           7            8            9           10           11           12 
 474.3052030  368.2110009  430.7719921  443.7209698  504.4535665  551.4655231 
          13           14           15           16           17           18 
 523.1234540  545.4868089  627.2638172  661.4915406  831.9273892  937.2358261 
          19           20           21           22           23           24 
1286.3801391 1425.5116133   53.6539635   81.4201606   87.9548994   60.2479263 
          25           26           27           28           29           30 
  78.1931687   81.8666760   77.2489774   61.0112116   72.3814314   78.9374881 
          31           32           33           34           35           36 
  88.2186266   95.8893305   75.8416732   85.7263672   83.8466431   93.4484906 
          37           38           39           40           41           42 
 107.9311921  115.8286870  145.7848801  132.5674610    0.1586371   63.6837084 
          43           44           45           46           47           48 
 128.0066844   75.2712003   95.4964578   88.4585024   71.6473931   65.1463462 
          49           50           51           52           53           54 
  84.4966253   79.7315910  105.6001067  128.0412143  105.4516872  120.2117503 
          55           56           57           58           59           60 
 122.0733950  144.8827426  169.7000589  207.8276490  255.5288779  318.4655608 
          61           62           63           64           65           66 
   6.4848261   27.2909729   42.1926360   32.4191754   30.4432790   38.0396273 
          67           68           69           70           71           72 
  33.2348538   38.1197433   45.1578006   46.7608124   54.5468142   55.2355414 
          73           74           75           76           77           78 
  46.4496559   54.8768168   51.0036161   53.8135078   58.8807040   70.8978230 
          79           80           81           82           83           84 
  98.7228392  102.6094226  289.5358335  321.1360437  400.4959341  359.4220865 
          85           86           87           88           89           90 
 382.6505543  390.5492055  406.6644765  397.1201398  382.6611280  364.1367531 
          91           92           93           94           95           96 
 354.1886278  375.1717051  359.9122015  354.5461425  366.7536515  368.9355585 
          97           98           99          100 
 416.5072578  428.1355032  458.8274804  475.9490910 

$coef
          a_0           a_1           a_2         b_1_1         b_1_2 
 3.770917e+01  6.265801e-02  1.102823e-01  5.069918e-06  3.052773e-05 
        b_2_2           d_1 
 1.229737e-04 -2.100077e-08 

$coefCov
                a_0           a_1           a_2         b_1_1         b_1_2
a_0    4.776851e+03 -1.851747e+00 -3.941853e-01  4.258677e-04  1.528483e-04
a_1   -1.851747e+00  1.693819e-03 -6.695763e-04 -4.659075e-07  9.431302e-08
a_2   -3.941853e-01 -6.695763e-04  5.534172e-03  4.040959e-07 -1.404405e-06
b_1_1  4.258677e-04 -4.659075e-07  4.040959e-07  1.583191e-10 -1.310267e-10
b_1_2  1.528483e-04  9.431302e-08 -1.404405e-06 -1.310267e-10  8.657785e-10
b_2_2 -8.189796e-04  6.392226e-07  1.599203e-06  9.271684e-11 -3.035194e-09
d_1    3.736443e-06 -2.175862e-09 -6.276300e-09  1.931539e-13  2.519846e-12
              b_2_2           d_1
a_0   -8.189796e-04  3.736443e-06
a_1    6.392226e-07 -2.175862e-09
a_2    1.599203e-06 -6.276300e-09
b_1_1  9.271684e-11  1.931539e-13
b_1_2 -3.035194e-09  2.519846e-12
b_2_2  1.499394e-08 -9.649229e-12
d_1   -9.649229e-12  4.693922e-14

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "tech"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2          d_1
1   1 3078.5    2.8  4738581.12     8619.80       3.920 1.000000e+00
2   1 4661.7   52.6 10865723.44   245205.42    1383.380 2.718282e+00
3   1 5387.1  156.9 14510423.21   845235.99   12308.805 7.389056e+00
4   1 2792.2  209.2  3898190.42   584128.24   21882.320 2.008554e+01
5   1 4313.2  203.4  9301847.12   877304.88   20685.780 5.459815e+01
6   1 4643.9  207.2 10782903.60   962216.08   21465.920 1.484132e+02
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520 4.034288e+02
8   1 3244.1  303.7  5262092.40   985233.17   46116.845 1.096633e+03
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405 2.980958e+03
10  1 4379.3  201.6  9589134.25   882866.88   20321.280 8.103084e+03
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500 2.202647e+04
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420 5.987414e+04
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125 1.627548e+05
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880 4.424134e+05
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005 1.202604e+06
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500 3.269017e+06
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645 8.886111e+06
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125 2.415495e+07
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645 6.565997e+07
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845 1.784823e+08
21  1  417.5   10.5    87153.12     4383.75      55.125 1.000000e+00
22  1  837.8   10.2   350954.42     8545.56      52.020 2.718282e+00
23  1  883.9   34.7   390639.60    30671.33     602.045 7.389056e+00
24  1  437.9   51.8    95878.20    22683.22    1341.620 2.008554e+01
25  1  679.7   64.3   230996.05    43704.71    2067.245 5.459815e+01
26  1  727.8   67.1   264846.42    48835.38    2251.205 1.484132e+02
27  1  643.6   75.2   207110.48    48398.72    2827.520 4.034288e+02
28  1  410.9   71.4    84419.40    29338.26    2548.980 1.096633e+03
29  1  588.4   67.1   173107.28    39481.64    2251.205 2.980958e+03
30  1  698.4   60.5   243881.28    42253.20    1830.125 8.103084e+03
31  1  846.4   54.6   358196.48    46213.44    1490.580 2.202647e+04
32  1  893.8   84.8   399439.22    75794.24    3595.520 5.987414e+04
33  1  579.0   96.8   167620.50    56047.20    4685.120 1.627548e+05
34  1  694.6  110.2   241234.58    76544.92    6072.020 4.424134e+05
35  1  590.3  147.4   174227.04    87010.22   10863.380 1.202604e+06
36  1  693.5  163.2   240471.12   113179.20   13317.120 3.269017e+06
37  1  809.0  203.5   327240.50   164631.50   20706.125 8.886111e+06
38  1  727.0  290.6   264264.50   211266.20   42224.180 2.415495e+07
39  1 1001.5  346.1   501501.12   346619.15   59892.605 6.565997e+07
40  1  703.2  414.9   247245.12   291757.68   86071.005 1.784823e+08
41  1 1170.6   97.8   685152.18   114484.68    4782.420 1.000000e+00
42  1 2015.8  104.4  2031724.82   210449.52    5449.680 2.718282e+00
43  1 2803.3  118.0  3929245.45   330789.40    6962.000 7.389056e+00
44  1 2039.7  156.2  2080188.05   318601.14   12199.220 2.008554e+01
45  1 2256.2  172.6  2545219.22   389420.12   14895.380 5.459815e+01
46  1 2132.2  186.6  2273138.42   397868.52   17409.780 1.484132e+02
47  1 1834.1  220.9  1681961.40   405152.69   24398.405 4.034288e+02
48  1 1588.0  287.8  1260872.00   457026.40   41414.420 1.096633e+03
49  1 1749.4  319.9  1530200.18   559633.06   51168.005 2.980958e+03
50  1 1687.2  321.3  1423321.92   542097.36   51616.845 8.103084e+03
51  1 2007.7  319.6  2015429.65   641660.92   51072.080 2.202647e+04
52  1 2208.3  346.0  2438294.45   764071.80   59858.000 5.987414e+04
53  1 1656.7  456.4  1372327.45   756117.88  104150.480 1.627548e+05
54  1 1604.4  543.4  1287049.68   871830.96  147641.780 4.424134e+05
55  1 1431.8  618.3  1025025.62   885281.94  191147.445 1.202604e+06
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380 3.269017e+06
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845 8.886111e+06
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605 2.415495e+07
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045 6.565997e+07
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605 1.784823e+08
61  1  191.5    1.8    18336.12      344.70       1.620 1.000000e+00
62  1  516.0    0.8   133128.00      412.80       0.320 2.718282e+00
63  1  729.0    7.4   265720.50     5394.60      27.380 7.389056e+00
64  1  560.4   18.1   157024.08    10143.24     163.805 2.008554e+01
65  1  519.9   23.5   135148.00    12217.65     276.125 5.459815e+01
66  1  628.5   26.5   197506.12    16655.25     351.125 1.484132e+02
67  1  537.1   36.2   144238.21    19443.02     655.220 4.034288e+02
68  1  561.2   60.8   157472.72    34120.96    1848.320 1.096633e+03
69  1  617.2   84.4   190467.92    52091.68    3561.680 2.980958e+03
70  1  626.7   91.2   196376.45    57155.04    4158.720 8.103084e+03
71  1  737.2   92.4   271731.92    68117.28    4268.880 2.202647e+04
72  1  760.5   86.0   289180.12    65403.00    3698.000 5.987414e+04
73  1  581.4  111.1   169012.98    64593.54    6171.605 1.627548e+05
74  1  662.3  130.6   219320.64    86496.38    8528.180 4.424134e+05
75  1  583.8  141.8   170411.22    82782.84   10053.620 1.202604e+06
76  1  635.2  136.7   201739.52    86831.84    9343.445 3.269017e+06
77  1  723.8  129.7   261943.22    93876.86    8411.045 8.886111e+06
78  1  864.1  145.5   373334.41   125726.55   10585.125 2.415495e+07
79  1 1193.5  174.8   712221.12   208623.80   15277.520 6.565997e+07
80  1 1188.9  213.5   706741.61   253830.15   22791.125 1.784823e+08
81  1 1362.4   53.8   928066.88    73297.12    1447.220 1.000000e+00
82  1 1807.1   50.5  1632805.20    91258.55    1275.125 2.718282e+00
83  1 2676.3  118.1  3581290.85   316071.03    6973.805 7.389056e+00
84  1 1801.9  260.2  1623421.81   468854.38   33852.020 2.008554e+01
85  1 1957.3  312.7  1915511.65   612047.71   48890.645 5.459815e+01
86  1 2202.9  254.2  2426384.21   559977.18   32308.820 1.484132e+02
87  1 2380.5  261.4  2833390.12   622262.70   34164.980 4.034288e+02
88  1 2168.6  298.7  2351412.98   647760.82   44610.845 1.096633e+03
89  1 1985.1  301.8  1970311.00   599103.18   45541.620 2.980958e+03
90  1 1813.9  279.1  1645116.61   506259.49   38948.405 8.103084e+03
91  1 1850.2  213.8  1711620.02   395572.76   22855.220 2.202647e+04
92  1 2067.7  232.6  2137691.64   480947.02   27051.380 5.987414e+04
93  1 1796.7  264.8  1614065.45   475766.16   35059.520 1.627548e+05
94  1 1625.8  306.9  1321612.82   498958.02   47093.805 4.424134e+05
95  1 1667.0  351.1  1389444.50   585283.70   61635.605 1.202604e+06
96  1 1677.4  357.8  1406835.38   600173.72   64010.420 3.269017e+06
97  1 2289.5  342.1  2620905.12   783237.95   58516.205 8.886111e+06
98  1 2159.4  444.2  2331504.18   959205.48   98656.820 2.415495e+07
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480 6.565997e+07
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045 1.784823e+08

attr(,"class")
[1] "quadFuncEst"
> 
> ## panel data with a logical variable as shifter
> ggData$war <- ggData$yearInt >= 1939 & ggData$yearInt <= 1945
> # fixed effects
> ggResShifterLogi <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "war" )
> coef( ggResShifterLogi )
          a_0           a_1           a_2         b_1_1         b_1_2 
 5.977437e+01  5.338292e-02  9.034515e-02  6.618904e-06  3.483770e-05 
        b_2_2      d_1_TRUE 
 1.129886e-04 -1.579945e+01 
> print.default( ggResShifterLogi )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "war")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1_

Coefficients:
        a_1         a_2       b_1_1       b_1_2       b_2_2    d_1_TRUE 
 5.3383e-02  9.0345e-02  6.6189e-06  3.4838e-05  1.1299e-04 -1.5799e+01 


$residuals
            1             2             3             4             5 
  13.59719780  -50.17076161 -125.77978494  -66.62544695 -104.24211157 
            6             7             8             9            10 
  -4.68838404   41.34925552   81.07330649   71.77583376  107.03778972 
           11            12            13            14            15 
  60.67784497  125.09527679   36.63048423  -23.33664730  -77.93109528 
           16            17            18            19            20 
 -23.32118848  -81.99719532  -49.99940739    9.02996774   61.82506586 
           21            22            23            24            25 
 -21.09518807  -12.92563886  -25.19567774  -15.44607566  -14.58259290 
           26            27            28            29            30 
  -0.82685635    2.20843375   -5.06847396  -14.46220175   -8.08546896 
           31            32            33            34            35 
  12.90065280  -24.35891160  -17.97889477   -0.03862736   -8.67406779 
           36            37            38            39            40 
   4.44198642   51.39367822   28.64290724   30.62317719   38.52784015 
           41            42            43            44            45 
  37.57425288   -8.57269262  -36.56318399  -19.77957160  -19.36898980 
           46            47            48            49            50 
  13.50811573   67.79227134   52.84309202    4.26772789    4.22926905 
           51            52            53            54            55 
  16.74751181   46.09821462   55.19821531   40.84936201   -8.35352916 
           56            57            58            59            60 
 -34.68401770  -16.67311450  -31.16256310  -55.46149933 -108.48887086 
           61            62            63            64            65 
   2.15108968   -2.87334508   -6.74441430  -10.33214191    3.15128697 
           66            67            68            69            70 
   6.23705392   30.40100143   20.98823191    8.50860197    7.89415470 
           71            72            73            74            75 
   2.45381097    0.22232478   10.15962810   -3.28307296  -17.34363862 
           76            77            78            79            80 
 -19.69493572   -2.19081077    4.19960819   -3.39303445  -30.51139880 
           81            82            83            84            85 
-114.86600628    1.82186209   42.54141906 -126.61920521 -164.37961826 
           86            87            88            89            90 
-140.69911459   55.29605107   37.15961921  -33.21225382  -89.29041345 
           91            92            93            94            95 
-109.59443755   16.62835251   31.12750290  110.21514145    9.52309255 
           96            97            98            99           100 
  21.16042807  145.51059586  191.48125619  158.15301165  -41.95728346 

$fitted
          1           2           3           4           5           6 
 304.002802  441.970762  536.379785  324.325447  435.042112  465.888384 
          7           8           9          10          11          12 
 470.650744  366.926694  427.824166  440.462210  500.522155  563.004723 
         13          14          15          16          17          18 
 532.269516  552.536647  633.031095  666.221188  837.897195  941.199407 
         19          20          21          22          23          24 
1295.370032 1424.874934   61.385188   85.685639   91.455678   67.046076 
         25          26          27          28          29          30 
  66.992593   70.236856   66.141566   51.868474   61.862202   67.655469 
         31          32          33          34          35          36 
  75.879347   98.478912   80.658895   89.398627   87.654068   96.218014 
         37          38          39          40          41          42 
 109.226322  116.357093  144.306823  133.962160   -4.474253   53.572693 
         43          44          45          46          47          48 
 113.763184   64.379572   67.468990   60.891884   45.207729   39.056908 
         49          50          51          52          53          54 
  57.032272   52.570731   76.852488  113.801785   92.001785  105.450638 
         55          56          57          58          59          60 
 106.653529  128.184018  151.873115  188.462563  234.961499  298.088871 
         61          62          63          64          65          66 
  10.778910   28.773345   41.794414   33.222142   15.688713   22.332946 
         67          68          69          70          71          72 
  18.108999   22.351768   28.511398   29.915845   36.816189   53.237675 
         73          74          75          76          77          78 
  45.400372   52.843073   49.383639   51.934936   56.570811   67.580392 
         79          80          81          82          83          84 
  93.473034   99.111399  324.766006  353.478138  427.358581  388.919205 
         85          86          87          88          89          90 
 394.779618  402.299115  417.503949  408.440381  394.812254  377.490413 
         91          92          93          94          95          96 
 368.294438  403.671647  389.372497  384.284859  395.576907  397.639572 
         97          98          99         100 
 442.689404  453.718744  482.846988  501.257283 

$coef
          a_0           a_1           a_2         b_1_1         b_1_2 
 5.977437e+01  5.338292e-02  9.034515e-02  6.618904e-06  3.483770e-05 
        b_2_2      d_1_TRUE 
 1.129886e-04 -1.579945e+01 

$coefCov
         a_0           a_1           a_2         b_1_1         b_1_2
a_0       NA            NA            NA            NA            NA
a_1       NA  1.782066e-03 -9.683581e-04 -4.936324e-07  2.202502e-07
a_2       NA -9.683581e-04  4.928218e-03  4.337839e-07 -1.122023e-06
b_1_1     NA -4.936324e-07  4.337839e-07  1.643278e-10 -1.427866e-10
b_1_2     NA  2.202502e-07 -1.122023e-06 -1.427866e-10  7.322443e-10
b_2_2     NA  1.403835e-07  4.680459e-07  1.418938e-10 -2.498623e-09
d_1_TRUE  NA -3.134166e-02  2.591681e-01  1.200303e-05 -5.998246e-05
                 b_2_2      d_1_TRUE
a_0                 NA            NA
a_1       1.403835e-07 -3.134166e-02
a_2       4.680459e-07  2.591681e-01
b_1_1     1.418938e-10  1.200303e-05
b_1_2    -2.498623e-09 -5.998246e-05
b_2_2     1.279718e-08  1.266778e-04
d_1_TRUE  1.266778e-04  1.994230e+02

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "war"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2 d_1_
1   1 3078.5    2.8  4738581.12     8619.80       3.920    0
2   1 4661.7   52.6 10865723.44   245205.42    1383.380    0
3   1 5387.1  156.9 14510423.21   845235.99   12308.805    0
4   1 2792.2  209.2  3898190.42   584128.24   21882.320    0
5   1 4313.2  203.4  9301847.12   877304.88   20685.780    1
6   1 4643.9  207.2 10782903.60   962216.08   21465.920    1
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520    1
8   1 3244.1  303.7  5262092.40   985233.17   46116.845    1
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405    1
10  1 4379.3  201.6  9589134.25   882866.88   20321.280    1
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500    1
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420    0
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125    0
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880    0
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005    0
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500    0
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645    0
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125    0
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645    0
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845    0
21  1  417.5   10.5    87153.12     4383.75      55.125    0
22  1  837.8   10.2   350954.42     8545.56      52.020    0
23  1  883.9   34.7   390639.60    30671.33     602.045    0
24  1  437.9   51.8    95878.20    22683.22    1341.620    0
25  1  679.7   64.3   230996.05    43704.71    2067.245    1
26  1  727.8   67.1   264846.42    48835.38    2251.205    1
27  1  643.6   75.2   207110.48    48398.72    2827.520    1
28  1  410.9   71.4    84419.40    29338.26    2548.980    1
29  1  588.4   67.1   173107.28    39481.64    2251.205    1
30  1  698.4   60.5   243881.28    42253.20    1830.125    1
31  1  846.4   54.6   358196.48    46213.44    1490.580    1
32  1  893.8   84.8   399439.22    75794.24    3595.520    0
33  1  579.0   96.8   167620.50    56047.20    4685.120    0
34  1  694.6  110.2   241234.58    76544.92    6072.020    0
35  1  590.3  147.4   174227.04    87010.22   10863.380    0
36  1  693.5  163.2   240471.12   113179.20   13317.120    0
37  1  809.0  203.5   327240.50   164631.50   20706.125    0
38  1  727.0  290.6   264264.50   211266.20   42224.180    0
39  1 1001.5  346.1   501501.12   346619.15   59892.605    0
40  1  703.2  414.9   247245.12   291757.68   86071.005    0
41  1 1170.6   97.8   685152.18   114484.68    4782.420    0
42  1 2015.8  104.4  2031724.82   210449.52    5449.680    0
43  1 2803.3  118.0  3929245.45   330789.40    6962.000    0
44  1 2039.7  156.2  2080188.05   318601.14   12199.220    0
45  1 2256.2  172.6  2545219.22   389420.12   14895.380    1
46  1 2132.2  186.6  2273138.42   397868.52   17409.780    1
47  1 1834.1  220.9  1681961.40   405152.69   24398.405    1
48  1 1588.0  287.8  1260872.00   457026.40   41414.420    1
49  1 1749.4  319.9  1530200.18   559633.06   51168.005    1
50  1 1687.2  321.3  1423321.92   542097.36   51616.845    1
51  1 2007.7  319.6  2015429.65   641660.92   51072.080    1
52  1 2208.3  346.0  2438294.45   764071.80   59858.000    0
53  1 1656.7  456.4  1372327.45   756117.88  104150.480    0
54  1 1604.4  543.4  1287049.68   871830.96  147641.780    0
55  1 1431.8  618.3  1025025.62   885281.94  191147.445    0
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380    0
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845    0
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605    0
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045    0
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605    0
61  1  191.5    1.8    18336.12      344.70       1.620    0
62  1  516.0    0.8   133128.00      412.80       0.320    0
63  1  729.0    7.4   265720.50     5394.60      27.380    0
64  1  560.4   18.1   157024.08    10143.24     163.805    0
65  1  519.9   23.5   135148.00    12217.65     276.125    1
66  1  628.5   26.5   197506.12    16655.25     351.125    1
67  1  537.1   36.2   144238.21    19443.02     655.220    1
68  1  561.2   60.8   157472.72    34120.96    1848.320    1
69  1  617.2   84.4   190467.92    52091.68    3561.680    1
70  1  626.7   91.2   196376.45    57155.04    4158.720    1
71  1  737.2   92.4   271731.92    68117.28    4268.880    1
72  1  760.5   86.0   289180.12    65403.00    3698.000    0
73  1  581.4  111.1   169012.98    64593.54    6171.605    0
74  1  662.3  130.6   219320.64    86496.38    8528.180    0
75  1  583.8  141.8   170411.22    82782.84   10053.620    0
76  1  635.2  136.7   201739.52    86831.84    9343.445    0
77  1  723.8  129.7   261943.22    93876.86    8411.045    0
78  1  864.1  145.5   373334.41   125726.55   10585.125    0
79  1 1193.5  174.8   712221.12   208623.80   15277.520    0
80  1 1188.9  213.5   706741.61   253830.15   22791.125    0
81  1 1362.4   53.8   928066.88    73297.12    1447.220    0
82  1 1807.1   50.5  1632805.20    91258.55    1275.125    0
83  1 2676.3  118.1  3581290.85   316071.03    6973.805    0
84  1 1801.9  260.2  1623421.81   468854.38   33852.020    0
85  1 1957.3  312.7  1915511.65   612047.71   48890.645    1
86  1 2202.9  254.2  2426384.21   559977.18   32308.820    1
87  1 2380.5  261.4  2833390.12   622262.70   34164.980    1
88  1 2168.6  298.7  2351412.98   647760.82   44610.845    1
89  1 1985.1  301.8  1970311.00   599103.18   45541.620    1
90  1 1813.9  279.1  1645116.61   506259.49   38948.405    1
91  1 1850.2  213.8  1711620.02   395572.76   22855.220    1
92  1 2067.7  232.6  2137691.64   480947.02   27051.380    0
93  1 1796.7  264.8  1614065.45   475766.16   35059.520    0
94  1 1625.8  306.9  1321612.82   498958.02   47093.805    0
95  1 1667.0  351.1  1389444.50   585283.70   61635.605    0
96  1 1677.4  357.8  1406835.38   600173.72   64010.420    0
97  1 2289.5  342.1  2620905.12   783237.95   58516.205    0
98  1 2159.4  444.2  2331504.18   959205.48   98656.820    0
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480    0
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045    0

attr(,"class")
[1] "quadFuncEst"
> # random effects
> ggResShifterLogiRan <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "war", model = "random", random.method = "amemiya" )
> coef( ggResShifterLogiRan )
          a_0           a_1           a_2         b_1_1         b_1_2 
 4.601396e+01  6.428319e-02  8.673148e-02  4.174811e-06  3.645260e-05 
        b_2_2      d_1_TRUE 
 1.085287e-04 -1.600487e+01 
> print.default( ggResShifterLogiRan )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "war", model = "random", random.method = "amemiya")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1_

Coefficients:
(Intercept)         a_1         a_2       b_1_1       b_1_2       b_2_2 
 4.6014e+01  6.4283e-02  8.6731e-02  4.1748e-06  3.6453e-05  1.0853e-04 
   d_1_TRUE 
-1.6005e+01 


$residuals
           1            2            3            4            5            6 
  20.5354396  -45.7104692 -120.8619178  -58.7064007  -99.9896604   -0.5407236 
           7            8            9           10           11           12 
  45.3668975   87.4072769   76.1740910  111.2547773   64.7135132  128.5741879 
          13           14           15           16           17           18 
  42.0134893  -16.5691720  -72.7044440  -18.1054733  -79.0259823  -46.7694093 
          19           20           21           22           23           24 
  13.0720262   66.9933111  -20.8361190  -16.6110175  -29.2313074  -15.2626167 
          25           26           27           28           29           30 
 -16.4846981   -3.1678779    0.6766492   -4.3478275  -15.4928392  -10.1723619 
          31           32           33           34           35           36 
   9.4506864  -28.3594203  -19.0344718   -2.1528491   -9.6762670    2.5025651 
          37           38           39           40           41           42 
  48.5028428   26.8273827   26.4561331   37.4448893   23.4156323  -28.7812201 
          43           44           45           46           47           48 
 -60.8564030  -40.0875303  -40.7379330   -7.1260228   49.1059658   36.0440342 
          49           50           51           52           53           54 
 -13.6385711  -13.2248743   -2.9223594   25.0067528   38.1233520   24.4576454 
          55           56           57           58           59           60 
 -23.0612995  -50.7421128  -34.2646483  -50.4485790  -76.4472163 -131.5149765 
          61           62           63           64           65           66 
  -0.2014801   -8.4862202  -14.3390528  -16.3230528   -2.2295441   -0.1711282 
          67           68           69           70           71           72 
  24.8908192   15.3182136    2.3727149    1.6882150   -4.7853081   -7.4548370 
          73           74           75           76           77           78 
   4.2440474   -9.9119232  -23.1830834  -26.0462209   -9.4015475   -4.2528280 
          79           80           81           82           83           84 
 -14.6148115  -41.5960720  -88.4673796   25.0538860   60.9678590 -103.0601366 
          85           86           87           88           89           90 
-141.5695903 -119.5188367   75.4689133   58.6044519  -10.6047397  -65.5730806 
          91           92           93           94           95           96 
 -86.2392424   38.3974571   54.7312314  135.1352990   34.2451174   45.8223522 
          97           98           99          100 
 166.0908962  213.0361666  181.0270796  -19.5170725 

$fitted
          1           2           3           4           5           6 
 297.064560  437.510469  531.461918  316.406401  430.789660  461.740724 
          7           8           9          10          11          12 
 466.633103  360.592723  423.425909  436.245223  496.486487  559.525812 
         13          14          15          16          17          18 
 526.886511  545.769172  627.804444  661.005473  834.925982  937.969409 
         19          20          21          22          23          24 
1291.327974 1419.706689   61.126119   89.371018   95.491307   66.862617 
         25          26          27          28          29          30 
  68.894698   72.577878   67.673351   51.147827   62.892839   69.742362 
         31          32          33          34          35          36 
  79.329314  102.479420   81.714472   91.512849   88.656267   98.157435 
         37          38          39          40          41          42 
 112.117157  118.172617  148.473867  135.045111    9.684368   73.781220 
         43          44          45          46          47          48 
 138.056403   84.687530   88.837933   81.526023   63.894034   55.855966 
         49          50          51          52          53          54 
  74.938571   70.024874   96.522359  134.893247  109.076648  121.842355 
         55          56          57          58          59          60 
 121.361300  144.242113  169.464648  207.748579  255.947216  321.114977 
         61          62          63          64          65          66 
  13.131480   34.386220   49.389053   39.213053   21.069544   28.741128 
         67          68          69          70          71          72 
  23.619181   28.021786   34.647285   36.121785   44.055308   60.914837 
         73          74          75          76          77          78 
  51.315953   59.471923   55.223083   58.286221   63.781548   76.032828 
         79          80          81          82          83          84 
 104.694812  110.196072  298.367380  330.246114  408.932141  365.360137 
         85          86          87          88          89          90 
 371.969590  381.118837  397.331087  386.995548  372.204740  353.773081 
         91          92          93          94          95          96 
 344.939242  381.902543  365.768769  359.364701  370.854883  372.977648 
         97          98          99         100 
 422.109104  432.163833  459.972920  478.817072 

$coef
          a_0           a_1           a_2         b_1_1         b_1_2 
 4.601396e+01  6.428319e-02  8.673148e-02  4.174811e-06  3.645260e-05 
        b_2_2      d_1_TRUE 
 1.085287e-04 -1.600487e+01 

$coefCov
                   a_0           a_1           a_2         b_1_1         b_1_2
a_0       4.470904e+03 -1.643502e+00 -3.069390e-03  4.000716e-04 -2.235194e-05
a_1      -1.643502e+00  1.577913e-03 -9.906888e-04 -4.530207e-07  2.183035e-07
a_2      -3.069390e-03 -9.906888e-04  4.969323e-03  4.402548e-07 -1.131267e-06
b_1_1     4.000716e-04 -4.530207e-07  4.402548e-07  1.561955e-10 -1.432209e-10
b_1_2    -2.235194e-05  2.183035e-07 -1.131267e-06 -1.432209e-10  7.386279e-10
b_2_2    -1.022675e-04  1.678854e-07  4.705155e-07  1.385800e-10 -2.520952e-09
d_1_TRUE -8.241893e+01 -3.348591e-02  2.611927e-01  1.252837e-05 -6.047461e-05
                 b_2_2      d_1_TRUE
a_0      -1.022675e-04 -8.241893e+01
a_1       1.678854e-07 -3.348591e-02
a_2       4.705155e-07  2.611927e-01
b_1_1     1.385800e-10  1.252837e-05
b_1_2    -2.520952e-09 -6.047461e-05
b_2_2     1.291249e-08  1.277457e-04
d_1_TRUE  1.277457e-04  2.012923e+02

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "war"

$regScale
[1] 1

$model.matrix
         a_1    a_2       b_1_1       b_1_2       b_2_2 d_1_
1   1 3078.5    2.8  4738581.12     8619.80       3.920    0
2   1 4661.7   52.6 10865723.44   245205.42    1383.380    0
3   1 5387.1  156.9 14510423.21   845235.99   12308.805    0
4   1 2792.2  209.2  3898190.42   584128.24   21882.320    0
5   1 4313.2  203.4  9301847.12   877304.88   20685.780    1
6   1 4643.9  207.2 10782903.60   962216.08   21465.920    1
7   1 4551.2  255.2 10356710.72  1161466.24   32563.520    1
8   1 3244.1  303.7  5262092.40   985233.17   46116.845    1
9   1 4053.7  264.1  8216241.84  1070582.17   34874.405    1
10  1 4379.3  201.6  9589134.25   882866.88   20321.280    1
11  1 4840.9  265.0 11717156.40  1282838.50   35112.500    1
12  1 4900.9  402.2 12009410.40  1971141.98   80882.420    0
13  1 3526.5  761.5  6218101.12  2685429.75  289941.125    0
14  1 3254.7  922.4  5296536.04  3002135.28  425410.880    0
15  1 3700.2 1020.1  6845740.02  3774574.02  520302.005    0
16  1 3755.6 1099.0  7052265.68  4127404.40  603900.500    0
17  1 4833.0 1207.7 11678944.50  5836814.10  729269.645    0
18  1 4924.9 1430.5 12127320.00  7045069.45 1023165.125    0
19  1 6241.7 1777.3 19479409.45 11093373.41 1579397.645    0
20  1 5593.6 2226.3 15644180.48 12453031.68 2478205.845    0
21  1  417.5   10.5    87153.12     4383.75      55.125    0
22  1  837.8   10.2   350954.42     8545.56      52.020    0
23  1  883.9   34.7   390639.60    30671.33     602.045    0
24  1  437.9   51.8    95878.20    22683.22    1341.620    0
25  1  679.7   64.3   230996.05    43704.71    2067.245    1
26  1  727.8   67.1   264846.42    48835.38    2251.205    1
27  1  643.6   75.2   207110.48    48398.72    2827.520    1
28  1  410.9   71.4    84419.40    29338.26    2548.980    1
29  1  588.4   67.1   173107.28    39481.64    2251.205    1
30  1  698.4   60.5   243881.28    42253.20    1830.125    1
31  1  846.4   54.6   358196.48    46213.44    1490.580    1
32  1  893.8   84.8   399439.22    75794.24    3595.520    0
33  1  579.0   96.8   167620.50    56047.20    4685.120    0
34  1  694.6  110.2   241234.58    76544.92    6072.020    0
35  1  590.3  147.4   174227.04    87010.22   10863.380    0
36  1  693.5  163.2   240471.12   113179.20   13317.120    0
37  1  809.0  203.5   327240.50   164631.50   20706.125    0
38  1  727.0  290.6   264264.50   211266.20   42224.180    0
39  1 1001.5  346.1   501501.12   346619.15   59892.605    0
40  1  703.2  414.9   247245.12   291757.68   86071.005    0
41  1 1170.6   97.8   685152.18   114484.68    4782.420    0
42  1 2015.8  104.4  2031724.82   210449.52    5449.680    0
43  1 2803.3  118.0  3929245.45   330789.40    6962.000    0
44  1 2039.7  156.2  2080188.05   318601.14   12199.220    0
45  1 2256.2  172.6  2545219.22   389420.12   14895.380    1
46  1 2132.2  186.6  2273138.42   397868.52   17409.780    1
47  1 1834.1  220.9  1681961.40   405152.69   24398.405    1
48  1 1588.0  287.8  1260872.00   457026.40   41414.420    1
49  1 1749.4  319.9  1530200.18   559633.06   51168.005    1
50  1 1687.2  321.3  1423321.92   542097.36   51616.845    1
51  1 2007.7  319.6  2015429.65   641660.92   51072.080    1
52  1 2208.3  346.0  2438294.45   764071.80   59858.000    0
53  1 1656.7  456.4  1372327.45   756117.88  104150.480    0
54  1 1604.4  543.4  1287049.68   871830.96  147641.780    0
55  1 1431.8  618.3  1025025.62   885281.94  191147.445    0
56  1 1610.5  647.4  1296855.12  1042637.70  209563.380    0
57  1 1819.4  671.3  1655108.18  1221363.22  225321.845    0
58  1 2079.7  726.1  2162576.04  1510070.17  263610.605    0
59  1 2371.6  800.3  2812243.28  1897991.48  320240.045    0
60  1 2759.9  888.9  3808524.01  2453275.11  395071.605    0
61  1  191.5    1.8    18336.12      344.70       1.620    0
62  1  516.0    0.8   133128.00      412.80       0.320    0
63  1  729.0    7.4   265720.50     5394.60      27.380    0
64  1  560.4   18.1   157024.08    10143.24     163.805    0
65  1  519.9   23.5   135148.00    12217.65     276.125    1
66  1  628.5   26.5   197506.12    16655.25     351.125    1
67  1  537.1   36.2   144238.21    19443.02     655.220    1
68  1  561.2   60.8   157472.72    34120.96    1848.320    1
69  1  617.2   84.4   190467.92    52091.68    3561.680    1
70  1  626.7   91.2   196376.45    57155.04    4158.720    1
71  1  737.2   92.4   271731.92    68117.28    4268.880    1
72  1  760.5   86.0   289180.12    65403.00    3698.000    0
73  1  581.4  111.1   169012.98    64593.54    6171.605    0
74  1  662.3  130.6   219320.64    86496.38    8528.180    0
75  1  583.8  141.8   170411.22    82782.84   10053.620    0
76  1  635.2  136.7   201739.52    86831.84    9343.445    0
77  1  723.8  129.7   261943.22    93876.86    8411.045    0
78  1  864.1  145.5   373334.41   125726.55   10585.125    0
79  1 1193.5  174.8   712221.12   208623.80   15277.520    0
80  1 1188.9  213.5   706741.61   253830.15   22791.125    0
81  1 1362.4   53.8   928066.88    73297.12    1447.220    0
82  1 1807.1   50.5  1632805.20    91258.55    1275.125    0
83  1 2676.3  118.1  3581290.85   316071.03    6973.805    0
84  1 1801.9  260.2  1623421.81   468854.38   33852.020    0
85  1 1957.3  312.7  1915511.65   612047.71   48890.645    1
86  1 2202.9  254.2  2426384.21   559977.18   32308.820    1
87  1 2380.5  261.4  2833390.12   622262.70   34164.980    1
88  1 2168.6  298.7  2351412.98   647760.82   44610.845    1
89  1 1985.1  301.8  1970311.00   599103.18   45541.620    1
90  1 1813.9  279.1  1645116.61   506259.49   38948.405    1
91  1 1850.2  213.8  1711620.02   395572.76   22855.220    1
92  1 2067.7  232.6  2137691.64   480947.02   27051.380    0
93  1 1796.7  264.8  1614065.45   475766.16   35059.520    0
94  1 1625.8  306.9  1321612.82   498958.02   47093.805    0
95  1 1667.0  351.1  1389444.50   585283.70   61635.605    0
96  1 1677.4  357.8  1406835.38   600173.72   64010.420    0
97  1 2289.5  342.1  2620905.12   783237.95   58516.205    0
98  1 2159.4  444.2  2331504.18   959205.48   98656.820    0
99  1 2031.3  623.6  2063089.84  1266718.68  194438.480    0
100 1 2115.5  669.7  2237670.12  1416750.35  224249.045    0

attr(,"class")
[1] "quadFuncEst"
> 
> ## panel data with a factor as shifter
> ggData$decade <- as.factor( ifelse( ggData$yearInt <= 1939, "30s",
+    ifelse( ggData$yearInt <= 1949, "40s", "50s" ) ) )
> # fixed effects
> ggResShifterFac <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "decade" )
> coef( ggResShifterFac )
          a_0           a_1           a_2         b_1_1         b_1_2 
 8.218321e+01  2.569244e-02 -1.152257e-01  9.014871e-06  4.923642e-05 
        b_2_2       d_1_40s       d_1_50s 
 2.049045e-04  6.310224e+01  1.076940e+02 
> print.default( ggResShifterFac )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "decade")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1_

Coefficients:
        a_1         a_2       b_1_1       b_1_2       b_2_2     d_1_40s 
 2.5692e-02 -1.1523e-01  9.0149e-06  4.9236e-05  2.0490e-04  6.3102e+01 
    d_1_50s 
 1.0769e+02 


$residuals
          1           2           3           4           5           6 
   2.572103  -25.332605  -77.790378  -51.432504  -80.982070  -39.435055 
          7           8           9          10          11          12 
  11.035230   38.033537   35.740072   67.920989   35.158868  130.423598 
         13          14          15          16          17          18 
  62.137745   12.916746  -32.813295  -18.300728  -72.019555  -37.161130 
         19          20          21          22          23          24 
   2.590654   36.737779   15.340278   34.394768   27.973524   29.641711 
         25          26          27          28          29          30 
  23.277825  -24.333060  -21.872536  -35.780177  -41.473973  -33.578830 
         31          32          33          34          35          36 
 -10.007093  -24.664660  -23.795146   -0.498205   -4.805067  -30.936156 
         37          38          39          40          41          42 
  25.870382   16.255771   33.104933   45.885712   40.515419   14.459792 
         43          44          45          46          47          48 
   4.653178   12.269536    3.865301  -26.616328   27.133568   17.820411 
         49          50          51          52          53          54 
 -22.706100  -23.711795   -5.470408   47.078229   62.196546   58.824805 
         55          56          57          58          59          60 
  16.675054  -47.926531  -24.098177  -29.006743  -42.316768  -83.638988 
         61          62          63          64          65          66 
  37.665955   41.145613   44.137479   38.260263   35.945084  -20.667691 
         67          68          69          70          71          72 
   3.018921   -1.022182   -7.594967   -6.690413   -9.172790    3.774455 
         73          74          75          76          77          78 
  13.984430    6.138006   -7.763425  -54.399693  -36.041170  -23.443073 
         79          80          81          82          83          84 
 -18.328125  -38.946677 -103.204942   23.187168   93.442567  -70.698425 
         85          86          87          88          89          90 
-113.306640 -156.903644   43.446847   26.938115  -46.349530 -109.112753 
         91          92          93          94          95          96 
-138.921764   10.352059   24.559584  106.830084   13.622991  -18.140481 
         97          98          99         100 
 114.891814  172.718855  160.134328  -33.486230 

$fitted
          1           2           3           4           5           6 
 315.027897  417.132605  488.390378  309.132504  411.782070  500.635055 
          7           8           9          10          11          12 
 500.964770  409.966463  463.859928  479.579011  526.041132  557.676402 
         13          14          15          16          17          18 
 506.762255  516.283254  587.913295  661.200728  827.919555  928.361130 
         19          20          21          22          23          24 
1301.809346 1449.962221   24.949722   38.365232   38.286476   21.958289 
         25          26          27          28          29          30 
  29.132175   93.743060   90.222536   82.580177   88.873973   93.148830 
         31          32          33          34          35          36 
  98.787093   98.784660   86.475146   89.858205   83.785067  131.596156 
         37          38          39          40          41          42 
 134.749618  128.744229  141.825067  126.604288   -7.415419   30.540208 
         43          44          45          46          47          48 
  72.546822   32.330464   44.234699  101.016328   85.866432   74.079589 
         49          50          51          52          53          54 
  84.006100   80.511795   99.070408  112.821771   85.003454   87.475195 
         55          56          57          58          59          60 
  81.624946  141.426531  159.298177  186.306743  221.816768  273.238988 
         61          62          63          64          65          66 
 -24.735955  -15.245613   -9.087479  -15.370263  -17.105084   49.237691 
         67          68          69          70          71          72 
  45.491079   44.362182   44.614967   44.500413   48.442790   49.685545 
         73          74          75          76          77          78 
  41.575570   43.421994   39.803425   86.639693   90.421170   95.223073 
         79          80          81          82          83          84 
 108.408125  107.546677  313.104942  332.112832  376.457433  332.998425 
         85          86          87          88          89          90 
 343.706640  418.503644  429.353153  418.661885  407.949530  397.312753 
         91          92          93          94          95          96 
 397.621764  409.947941  395.940416  387.669916  391.477009  436.940481 
         97          98          99         100 
 473.308186  472.481145  480.865672  492.786230 

$coef
          a_0           a_1           a_2         b_1_1         b_1_2 
 8.218321e+01  2.569244e-02 -1.152257e-01  9.014871e-06  4.923642e-05 
        b_2_2       d_1_40s       d_1_50s 
 2.049045e-04  6.310224e+01  1.076940e+02 

$coefCov
        a_0           a_1           a_2         b_1_1         b_1_2
a_0      NA            NA            NA            NA            NA
a_1      NA  1.598121e-03 -3.175465e-04 -4.259765e-07  1.191185e-07
a_2      NA -3.175465e-04  7.303275e-03  3.239216e-07 -1.246197e-06
b_1_1    NA -4.259765e-07  3.239216e-07  1.401213e-10 -1.140125e-10
b_1_2    NA  1.191185e-07 -1.246197e-06 -1.140125e-10  6.545084e-10
b_2_2    NA  9.571731e-08 -5.328044e-07  1.141170e-10 -2.065891e-09
d_1_40s  NA -4.090026e-02 -6.409560e-01  5.341621e-07  3.255619e-05
d_1_50s  NA -2.200262e-01 -1.593682e+00  1.512231e-05  1.651055e-04
                b_2_2       d_1_40s       d_1_50s
a_0                NA            NA            NA
a_1      9.571731e-08 -4.090026e-02 -2.200262e-01
a_2     -5.328044e-07 -6.409560e-01 -1.593682e+00
b_1_1    1.141170e-10  5.341621e-07  1.512231e-05
b_1_2   -2.065891e-09  3.255619e-05  1.651055e-04
b_2_2    1.134951e-08  3.697388e-04  3.863747e-04
d_1_40s  3.697388e-04  2.751797e+02  3.113033e+02
d_1_50s  3.863747e-04  3.113033e+02  7.507415e+02

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "decade"

$regScale
[1] 1

$model.matrix
        a_1      a_2      b_1_1         b_1_2         b_2_2         d_1_ 
1   "1" "3078.5" "   2.8" " 4738581.12" "    8619.80" "      3.920" "30s"
2   "1" "4661.7" "  52.6" "10865723.44" "  245205.42" "   1383.380" "30s"
3   "1" "5387.1" " 156.9" "14510423.21" "  845235.99" "  12308.805" "30s"
4   "1" "2792.2" " 209.2" " 3898190.42" "  584128.24" "  21882.320" "30s"
5   "1" "4313.2" " 203.4" " 9301847.12" "  877304.88" "  20685.780" "30s"
6   "1" "4643.9" " 207.2" "10782903.60" "  962216.08" "  21465.920" "40s"
7   "1" "4551.2" " 255.2" "10356710.72" " 1161466.24" "  32563.520" "40s"
8   "1" "3244.1" " 303.7" " 5262092.40" "  985233.17" "  46116.845" "40s"
9   "1" "4053.7" " 264.1" " 8216241.84" " 1070582.17" "  34874.405" "40s"
10  "1" "4379.3" " 201.6" " 9589134.25" "  882866.88" "  20321.280" "40s"
11  "1" "4840.9" " 265.0" "11717156.40" " 1282838.50" "  35112.500" "40s"
12  "1" "4900.9" " 402.2" "12009410.40" " 1971141.98" "  80882.420" "40s"
13  "1" "3526.5" " 761.5" " 6218101.12" " 2685429.75" " 289941.125" "40s"
14  "1" "3254.7" " 922.4" " 5296536.04" " 3002135.28" " 425410.880" "40s"
15  "1" "3700.2" "1020.1" " 6845740.02" " 3774574.02" " 520302.005" "40s"
16  "1" "3755.6" "1099.0" " 7052265.68" " 4127404.40" " 603900.500" "50s"
17  "1" "4833.0" "1207.7" "11678944.50" " 5836814.10" " 729269.645" "50s"
18  "1" "4924.9" "1430.5" "12127320.00" " 7045069.45" "1023165.125" "50s"
19  "1" "6241.7" "1777.3" "19479409.45" "11093373.41" "1579397.645" "50s"
20  "1" "5593.6" "2226.3" "15644180.48" "12453031.68" "2478205.845" "50s"
21  "1" " 417.5" "  10.5" "   87153.12" "    4383.75" "     55.125" "30s"
22  "1" " 837.8" "  10.2" "  350954.42" "    8545.56" "     52.020" "30s"
23  "1" " 883.9" "  34.7" "  390639.60" "   30671.33" "    602.045" "30s"
24  "1" " 437.9" "  51.8" "   95878.20" "   22683.22" "   1341.620" "30s"
25  "1" " 679.7" "  64.3" "  230996.05" "   43704.71" "   2067.245" "30s"
26  "1" " 727.8" "  67.1" "  264846.42" "   48835.38" "   2251.205" "40s"
27  "1" " 643.6" "  75.2" "  207110.48" "   48398.72" "   2827.520" "40s"
28  "1" " 410.9" "  71.4" "   84419.40" "   29338.26" "   2548.980" "40s"
29  "1" " 588.4" "  67.1" "  173107.28" "   39481.64" "   2251.205" "40s"
30  "1" " 698.4" "  60.5" "  243881.28" "   42253.20" "   1830.125" "40s"
31  "1" " 846.4" "  54.6" "  358196.48" "   46213.44" "   1490.580" "40s"
32  "1" " 893.8" "  84.8" "  399439.22" "   75794.24" "   3595.520" "40s"
33  "1" " 579.0" "  96.8" "  167620.50" "   56047.20" "   4685.120" "40s"
34  "1" " 694.6" " 110.2" "  241234.58" "   76544.92" "   6072.020" "40s"
35  "1" " 590.3" " 147.4" "  174227.04" "   87010.22" "  10863.380" "40s"
36  "1" " 693.5" " 163.2" "  240471.12" "  113179.20" "  13317.120" "50s"
37  "1" " 809.0" " 203.5" "  327240.50" "  164631.50" "  20706.125" "50s"
38  "1" " 727.0" " 290.6" "  264264.50" "  211266.20" "  42224.180" "50s"
39  "1" "1001.5" " 346.1" "  501501.12" "  346619.15" "  59892.605" "50s"
40  "1" " 703.2" " 414.9" "  247245.12" "  291757.68" "  86071.005" "50s"
41  "1" "1170.6" "  97.8" "  685152.18" "  114484.68" "   4782.420" "30s"
42  "1" "2015.8" " 104.4" " 2031724.82" "  210449.52" "   5449.680" "30s"
43  "1" "2803.3" " 118.0" " 3929245.45" "  330789.40" "   6962.000" "30s"
44  "1" "2039.7" " 156.2" " 2080188.05" "  318601.14" "  12199.220" "30s"
45  "1" "2256.2" " 172.6" " 2545219.22" "  389420.12" "  14895.380" "30s"
46  "1" "2132.2" " 186.6" " 2273138.42" "  397868.52" "  17409.780" "40s"
47  "1" "1834.1" " 220.9" " 1681961.40" "  405152.69" "  24398.405" "40s"
48  "1" "1588.0" " 287.8" " 1260872.00" "  457026.40" "  41414.420" "40s"
49  "1" "1749.4" " 319.9" " 1530200.18" "  559633.06" "  51168.005" "40s"
50  "1" "1687.2" " 321.3" " 1423321.92" "  542097.36" "  51616.845" "40s"
51  "1" "2007.7" " 319.6" " 2015429.65" "  641660.92" "  51072.080" "40s"
52  "1" "2208.3" " 346.0" " 2438294.45" "  764071.80" "  59858.000" "40s"
53  "1" "1656.7" " 456.4" " 1372327.45" "  756117.88" " 104150.480" "40s"
54  "1" "1604.4" " 543.4" " 1287049.68" "  871830.96" " 147641.780" "40s"
55  "1" "1431.8" " 618.3" " 1025025.62" "  885281.94" " 191147.445" "40s"
56  "1" "1610.5" " 647.4" " 1296855.12" " 1042637.70" " 209563.380" "50s"
57  "1" "1819.4" " 671.3" " 1655108.18" " 1221363.22" " 225321.845" "50s"
58  "1" "2079.7" " 726.1" " 2162576.04" " 1510070.17" " 263610.605" "50s"
59  "1" "2371.6" " 800.3" " 2812243.28" " 1897991.48" " 320240.045" "50s"
60  "1" "2759.9" " 888.9" " 3808524.01" " 2453275.11" " 395071.605" "50s"
61  "1" " 191.5" "   1.8" "   18336.12" "     344.70" "      1.620" "30s"
62  "1" " 516.0" "   0.8" "  133128.00" "     412.80" "      0.320" "30s"
63  "1" " 729.0" "   7.4" "  265720.50" "    5394.60" "     27.380" "30s"
64  "1" " 560.4" "  18.1" "  157024.08" "   10143.24" "    163.805" "30s"
65  "1" " 519.9" "  23.5" "  135148.00" "   12217.65" "    276.125" "30s"
66  "1" " 628.5" "  26.5" "  197506.12" "   16655.25" "    351.125" "40s"
67  "1" " 537.1" "  36.2" "  144238.21" "   19443.02" "    655.220" "40s"
68  "1" " 561.2" "  60.8" "  157472.72" "   34120.96" "   1848.320" "40s"
69  "1" " 617.2" "  84.4" "  190467.92" "   52091.68" "   3561.680" "40s"
70  "1" " 626.7" "  91.2" "  196376.45" "   57155.04" "   4158.720" "40s"
71  "1" " 737.2" "  92.4" "  271731.92" "   68117.28" "   4268.880" "40s"
72  "1" " 760.5" "  86.0" "  289180.12" "   65403.00" "   3698.000" "40s"
73  "1" " 581.4" " 111.1" "  169012.98" "   64593.54" "   6171.605" "40s"
74  "1" " 662.3" " 130.6" "  219320.64" "   86496.38" "   8528.180" "40s"
75  "1" " 583.8" " 141.8" "  170411.22" "   82782.84" "  10053.620" "40s"
76  "1" " 635.2" " 136.7" "  201739.52" "   86831.84" "   9343.445" "50s"
77  "1" " 723.8" " 129.7" "  261943.22" "   93876.86" "   8411.045" "50s"
78  "1" " 864.1" " 145.5" "  373334.41" "  125726.55" "  10585.125" "50s"
79  "1" "1193.5" " 174.8" "  712221.12" "  208623.80" "  15277.520" "50s"
80  "1" "1188.9" " 213.5" "  706741.61" "  253830.15" "  22791.125" "50s"
81  "1" "1362.4" "  53.8" "  928066.88" "   73297.12" "   1447.220" "30s"
82  "1" "1807.1" "  50.5" " 1632805.20" "   91258.55" "   1275.125" "30s"
83  "1" "2676.3" " 118.1" " 3581290.85" "  316071.03" "   6973.805" "30s"
84  "1" "1801.9" " 260.2" " 1623421.81" "  468854.38" "  33852.020" "30s"
85  "1" "1957.3" " 312.7" " 1915511.65" "  612047.71" "  48890.645" "30s"
86  "1" "2202.9" " 254.2" " 2426384.21" "  559977.18" "  32308.820" "40s"
87  "1" "2380.5" " 261.4" " 2833390.12" "  622262.70" "  34164.980" "40s"
88  "1" "2168.6" " 298.7" " 2351412.98" "  647760.82" "  44610.845" "40s"
89  "1" "1985.1" " 301.8" " 1970311.00" "  599103.18" "  45541.620" "40s"
90  "1" "1813.9" " 279.1" " 1645116.61" "  506259.49" "  38948.405" "40s"
91  "1" "1850.2" " 213.8" " 1711620.02" "  395572.76" "  22855.220" "40s"
92  "1" "2067.7" " 232.6" " 2137691.64" "  480947.02" "  27051.380" "40s"
93  "1" "1796.7" " 264.8" " 1614065.45" "  475766.16" "  35059.520" "40s"
94  "1" "1625.8" " 306.9" " 1321612.82" "  498958.02" "  47093.805" "40s"
95  "1" "1667.0" " 351.1" " 1389444.50" "  585283.70" "  61635.605" "40s"
96  "1" "1677.4" " 357.8" " 1406835.38" "  600173.72" "  64010.420" "50s"
97  "1" "2289.5" " 342.1" " 2620905.12" "  783237.95" "  58516.205" "50s"
98  "1" "2159.4" " 444.2" " 2331504.18" "  959205.48" "  98656.820" "50s"
99  "1" "2031.3" " 623.6" " 2063089.84" " 1266718.68" " 194438.480" "50s"
100 "1" "2115.5" " 669.7" " 2237670.12" " 1416750.35" " 224249.045" "50s"

attr(,"class")
[1] "quadFuncEst"
> # random effects
> ggResShifterFacRan <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    shifterNames = "decade", model = "random", random.method = "amemiya" )
> coef( ggResShifterFacRan )
          a_0           a_1           a_2         b_1_1         b_1_2 
 5.908080e+01  4.247392e-02 -1.036923e-01  5.757541e-06  4.878037e-05 
        b_2_2       d_1_40s       d_1_50s 
 1.992566e-04  6.137612e+01  1.015753e+02 
> print.default( ggResShifterFacRan )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, shifterNames = "decade", model = "random", 
    random.method = "amemiya")

$nExog
[1] 2

$nShifter
[1] 1

$est

Model Formula: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2 + d_1_

Coefficients:
(Intercept)         a_1         a_2       b_1_1       b_1_2       b_2_2 
 5.9081e+01  4.2474e-02 -1.0369e-01  5.7575e-06  4.8780e-05  1.9926e-04 
    d_1_40s     d_1_50s 
 6.1376e+01  1.0158e+02 


$residuals
           1            2            3            4            5            6 
  18.0169291  -16.9567741  -70.5834336  -35.9150508  -73.1939142  -30.6468151 
           7            8            9           10           11           12 
  19.5908022   51.3661317   45.5411734   77.2830429   43.2409863  137.4408088 
          13           14           15           16           17           18 
  70.7177402   22.1099274  -26.2886046   -7.9173149  -64.4119235  -29.9939406 
          19           20           21           22           23           24 
  12.5961577   45.6447048   12.6388357   25.5046977   18.1697222   26.1656258 
          25           26           27           28           29           30 
  16.0536177  -30.5569817  -26.9618876  -37.3305614  -45.6616468  -39.3069257 
          31           32           33           34           35           36 
 -17.7785497  -33.4201493  -28.1641891   -6.7047691   -9.8767999  -33.2877756 
          37           38           39           40           41           42 
  21.4635367   12.1581086   24.6949220   40.9827522   36.6320360    0.7503466 
          43           44           45           46           47           48 
 -16.1842646   -2.1931161  -12.8574057  -40.5616750   15.9123161    8.7056269 
          49           50           51           52           53           54 
 -33.9204667  -34.2521003  -19.3985513   30.9620948   50.8381078   47.3612550 
          55           56           57           58           59           60 
   6.6424828  -55.8397455  -34.4552335  -42.3631453  -58.8145365 -103.7537746 
          61           62           63           64           65           66 
  33.4801665   31.8997061   31.6753179   28.1529278   26.3854411  -30.1527072 
          67           68           69           70           71           72 
  -5.2146653   -9.8873836  -17.5467734  -16.8551435  -20.9546352   -8.2722115 
          73           74           75           76           77           78 
   4.2760139   -4.9657671  -17.8314193  -60.7789336  -43.6324656  -33.1813972 
          79           80           81           82           83           84 
 -32.7640256  -53.7065243  -77.5181508   43.7520798  105.1229269  -52.1391881 
          85           86           87           88           89           90 
 -96.8590791 -140.6300986   58.0216020   43.1393343  -28.3629711  -89.1302396 
          91           92           93           94           95           96 
-118.7200308   28.1374814   44.8586526  128.6374791   34.5716598    7.0258565 
          97           98           99          100 
 133.9743649  192.1713956  179.4743666  -15.2854294 

$fitted
          1           2           3           4           5           6 
 299.583071  408.756774  481.183434  293.615051  403.993914  491.846815 
          7           8           9          10          11          12 
 492.409198  396.633868  454.058827  470.216957  517.959014  550.659191 
         13          14          15          16          17          18 
 498.182260  507.090073  581.388605  650.817315  820.311923  921.193941 
         19          20          21          22          23          24 
1291.803842 1441.055295   27.651164   47.255302   48.090278   25.434374 
         25          26          27          28          29          30 
  36.356382   99.966982   95.311888   84.130561   93.061647   98.876926 
         31          32          33          34          35          36 
 106.558550  107.540149   90.844189   96.064769   88.856800  133.947776 
         37          38          39          40          41          42 
 139.156463  132.841891  150.235078  131.507248   -3.532036   44.249653 
         43          44          45          46          47          48 
  93.384265   46.793116   60.957406  114.961675   97.087684   83.194373 
         49          50          51          52          53          54 
  95.220467   91.052100  112.998551  128.937905   96.361892   98.938745 
         55          56          57          58          59          60 
  91.657517  149.339745  169.655233  199.663145  238.314537  293.353775 
         61          62          63          64          65          66 
 -20.550167   -5.999706    3.374682   -5.262928   -7.545441   58.722707 
         67          68          69          70          71          72 
  53.724665   53.227384   54.566773   54.665144   60.224635   61.732212 
         73          74          75          76          77          78 
  51.283986   54.525767   49.871419   93.018934   98.012466  104.961397 
         79          80          81          82          83          84 
 122.844026  122.306524  287.418151  311.547920  364.777073  314.439188 
         85          86          87          88          89          90 
 327.259079  402.230099  414.778398  402.460666  389.962971  377.330240 
         91          92          93          94          95          96 
 377.420031  392.162519  375.641347  365.862521  370.528340  411.774143 
         97          98          99         100 
 454.225635  453.028604  461.525633  474.585429 

$coef
          a_0           a_1           a_2         b_1_1         b_1_2 
 5.908080e+01  4.247392e-02 -1.036923e-01  5.757541e-06  4.878037e-05 
        b_2_2       d_1_40s       d_1_50s 
 1.992566e-04  6.137612e+01  1.015753e+02 

$coefCov
                  a_0           a_1           a_2         b_1_1         b_1_2
a_0      5.301270e+03 -1.585013e+00 -4.363373e-01  3.667825e-04  4.517615e-05
a_1     -1.585013e+00  1.444229e-03 -4.791340e-04 -3.984152e-07  1.349201e-07
a_2     -4.363373e-01 -4.791340e-04  7.194952e-03  3.549393e-07 -1.238979e-06
b_1_1    3.667825e-04 -3.984152e-07  3.549393e-07  1.352172e-10 -1.174668e-10
b_1_2    4.517615e-05  1.349201e-07 -1.238979e-06 -1.174668e-10  6.576120e-10
b_2_2   -1.140232e-04  1.382576e-07 -4.981136e-07  1.076001e-10 -2.084903e-09
d_1_40s -4.162657e+01 -2.035393e-02 -6.249944e-01 -3.288855e-06  3.074853e-05
d_1_50s  2.370491e+02 -1.506678e-01 -1.534826e+00  2.387803e-06  1.593885e-04
                b_2_2       d_1_40s       d_1_50s
a_0     -1.140232e-04 -4.162657e+01  2.370491e+02
a_1      1.382576e-07 -2.035393e-02 -1.506678e-01
a_2     -4.981136e-07 -6.249944e-01 -1.534826e+00
b_1_1    1.076001e-10 -3.288855e-06  2.387803e-06
b_1_2   -2.084903e-09  3.074853e-05  1.593885e-04
b_2_2    1.142337e-08  3.674754e-04  3.715393e-04
d_1_40s  3.674754e-04  2.745784e+02  3.045426e+02
d_1_50s  3.715393e-04  3.045426e+02  7.252818e+02

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$shifterNames
[1] "decade"

$regScale
[1] 1

$model.matrix
        a_1      a_2      b_1_1         b_1_2         b_2_2         d_1_ 
1   "1" "3078.5" "   2.8" " 4738581.12" "    8619.80" "      3.920" "30s"
2   "1" "4661.7" "  52.6" "10865723.44" "  245205.42" "   1383.380" "30s"
3   "1" "5387.1" " 156.9" "14510423.21" "  845235.99" "  12308.805" "30s"
4   "1" "2792.2" " 209.2" " 3898190.42" "  584128.24" "  21882.320" "30s"
5   "1" "4313.2" " 203.4" " 9301847.12" "  877304.88" "  20685.780" "30s"
6   "1" "4643.9" " 207.2" "10782903.60" "  962216.08" "  21465.920" "40s"
7   "1" "4551.2" " 255.2" "10356710.72" " 1161466.24" "  32563.520" "40s"
8   "1" "3244.1" " 303.7" " 5262092.40" "  985233.17" "  46116.845" "40s"
9   "1" "4053.7" " 264.1" " 8216241.84" " 1070582.17" "  34874.405" "40s"
10  "1" "4379.3" " 201.6" " 9589134.25" "  882866.88" "  20321.280" "40s"
11  "1" "4840.9" " 265.0" "11717156.40" " 1282838.50" "  35112.500" "40s"
12  "1" "4900.9" " 402.2" "12009410.40" " 1971141.98" "  80882.420" "40s"
13  "1" "3526.5" " 761.5" " 6218101.12" " 2685429.75" " 289941.125" "40s"
14  "1" "3254.7" " 922.4" " 5296536.04" " 3002135.28" " 425410.880" "40s"
15  "1" "3700.2" "1020.1" " 6845740.02" " 3774574.02" " 520302.005" "40s"
16  "1" "3755.6" "1099.0" " 7052265.68" " 4127404.40" " 603900.500" "50s"
17  "1" "4833.0" "1207.7" "11678944.50" " 5836814.10" " 729269.645" "50s"
18  "1" "4924.9" "1430.5" "12127320.00" " 7045069.45" "1023165.125" "50s"
19  "1" "6241.7" "1777.3" "19479409.45" "11093373.41" "1579397.645" "50s"
20  "1" "5593.6" "2226.3" "15644180.48" "12453031.68" "2478205.845" "50s"
21  "1" " 417.5" "  10.5" "   87153.12" "    4383.75" "     55.125" "30s"
22  "1" " 837.8" "  10.2" "  350954.42" "    8545.56" "     52.020" "30s"
23  "1" " 883.9" "  34.7" "  390639.60" "   30671.33" "    602.045" "30s"
24  "1" " 437.9" "  51.8" "   95878.20" "   22683.22" "   1341.620" "30s"
25  "1" " 679.7" "  64.3" "  230996.05" "   43704.71" "   2067.245" "30s"
26  "1" " 727.8" "  67.1" "  264846.42" "   48835.38" "   2251.205" "40s"
27  "1" " 643.6" "  75.2" "  207110.48" "   48398.72" "   2827.520" "40s"
28  "1" " 410.9" "  71.4" "   84419.40" "   29338.26" "   2548.980" "40s"
29  "1" " 588.4" "  67.1" "  173107.28" "   39481.64" "   2251.205" "40s"
30  "1" " 698.4" "  60.5" "  243881.28" "   42253.20" "   1830.125" "40s"
31  "1" " 846.4" "  54.6" "  358196.48" "   46213.44" "   1490.580" "40s"
32  "1" " 893.8" "  84.8" "  399439.22" "   75794.24" "   3595.520" "40s"
33  "1" " 579.0" "  96.8" "  167620.50" "   56047.20" "   4685.120" "40s"
34  "1" " 694.6" " 110.2" "  241234.58" "   76544.92" "   6072.020" "40s"
35  "1" " 590.3" " 147.4" "  174227.04" "   87010.22" "  10863.380" "40s"
36  "1" " 693.5" " 163.2" "  240471.12" "  113179.20" "  13317.120" "50s"
37  "1" " 809.0" " 203.5" "  327240.50" "  164631.50" "  20706.125" "50s"
38  "1" " 727.0" " 290.6" "  264264.50" "  211266.20" "  42224.180" "50s"
39  "1" "1001.5" " 346.1" "  501501.12" "  346619.15" "  59892.605" "50s"
40  "1" " 703.2" " 414.9" "  247245.12" "  291757.68" "  86071.005" "50s"
41  "1" "1170.6" "  97.8" "  685152.18" "  114484.68" "   4782.420" "30s"
42  "1" "2015.8" " 104.4" " 2031724.82" "  210449.52" "   5449.680" "30s"
43  "1" "2803.3" " 118.0" " 3929245.45" "  330789.40" "   6962.000" "30s"
44  "1" "2039.7" " 156.2" " 2080188.05" "  318601.14" "  12199.220" "30s"
45  "1" "2256.2" " 172.6" " 2545219.22" "  389420.12" "  14895.380" "30s"
46  "1" "2132.2" " 186.6" " 2273138.42" "  397868.52" "  17409.780" "40s"
47  "1" "1834.1" " 220.9" " 1681961.40" "  405152.69" "  24398.405" "40s"
48  "1" "1588.0" " 287.8" " 1260872.00" "  457026.40" "  41414.420" "40s"
49  "1" "1749.4" " 319.9" " 1530200.18" "  559633.06" "  51168.005" "40s"
50  "1" "1687.2" " 321.3" " 1423321.92" "  542097.36" "  51616.845" "40s"
51  "1" "2007.7" " 319.6" " 2015429.65" "  641660.92" "  51072.080" "40s"
52  "1" "2208.3" " 346.0" " 2438294.45" "  764071.80" "  59858.000" "40s"
53  "1" "1656.7" " 456.4" " 1372327.45" "  756117.88" " 104150.480" "40s"
54  "1" "1604.4" " 543.4" " 1287049.68" "  871830.96" " 147641.780" "40s"
55  "1" "1431.8" " 618.3" " 1025025.62" "  885281.94" " 191147.445" "40s"
56  "1" "1610.5" " 647.4" " 1296855.12" " 1042637.70" " 209563.380" "50s"
57  "1" "1819.4" " 671.3" " 1655108.18" " 1221363.22" " 225321.845" "50s"
58  "1" "2079.7" " 726.1" " 2162576.04" " 1510070.17" " 263610.605" "50s"
59  "1" "2371.6" " 800.3" " 2812243.28" " 1897991.48" " 320240.045" "50s"
60  "1" "2759.9" " 888.9" " 3808524.01" " 2453275.11" " 395071.605" "50s"
61  "1" " 191.5" "   1.8" "   18336.12" "     344.70" "      1.620" "30s"
62  "1" " 516.0" "   0.8" "  133128.00" "     412.80" "      0.320" "30s"
63  "1" " 729.0" "   7.4" "  265720.50" "    5394.60" "     27.380" "30s"
64  "1" " 560.4" "  18.1" "  157024.08" "   10143.24" "    163.805" "30s"
65  "1" " 519.9" "  23.5" "  135148.00" "   12217.65" "    276.125" "30s"
66  "1" " 628.5" "  26.5" "  197506.12" "   16655.25" "    351.125" "40s"
67  "1" " 537.1" "  36.2" "  144238.21" "   19443.02" "    655.220" "40s"
68  "1" " 561.2" "  60.8" "  157472.72" "   34120.96" "   1848.320" "40s"
69  "1" " 617.2" "  84.4" "  190467.92" "   52091.68" "   3561.680" "40s"
70  "1" " 626.7" "  91.2" "  196376.45" "   57155.04" "   4158.720" "40s"
71  "1" " 737.2" "  92.4" "  271731.92" "   68117.28" "   4268.880" "40s"
72  "1" " 760.5" "  86.0" "  289180.12" "   65403.00" "   3698.000" "40s"
73  "1" " 581.4" " 111.1" "  169012.98" "   64593.54" "   6171.605" "40s"
74  "1" " 662.3" " 130.6" "  219320.64" "   86496.38" "   8528.180" "40s"
75  "1" " 583.8" " 141.8" "  170411.22" "   82782.84" "  10053.620" "40s"
76  "1" " 635.2" " 136.7" "  201739.52" "   86831.84" "   9343.445" "50s"
77  "1" " 723.8" " 129.7" "  261943.22" "   93876.86" "   8411.045" "50s"
78  "1" " 864.1" " 145.5" "  373334.41" "  125726.55" "  10585.125" "50s"
79  "1" "1193.5" " 174.8" "  712221.12" "  208623.80" "  15277.520" "50s"
80  "1" "1188.9" " 213.5" "  706741.61" "  253830.15" "  22791.125" "50s"
81  "1" "1362.4" "  53.8" "  928066.88" "   73297.12" "   1447.220" "30s"
82  "1" "1807.1" "  50.5" " 1632805.20" "   91258.55" "   1275.125" "30s"
83  "1" "2676.3" " 118.1" " 3581290.85" "  316071.03" "   6973.805" "30s"
84  "1" "1801.9" " 260.2" " 1623421.81" "  468854.38" "  33852.020" "30s"
85  "1" "1957.3" " 312.7" " 1915511.65" "  612047.71" "  48890.645" "30s"
86  "1" "2202.9" " 254.2" " 2426384.21" "  559977.18" "  32308.820" "40s"
87  "1" "2380.5" " 261.4" " 2833390.12" "  622262.70" "  34164.980" "40s"
88  "1" "2168.6" " 298.7" " 2351412.98" "  647760.82" "  44610.845" "40s"
89  "1" "1985.1" " 301.8" " 1970311.00" "  599103.18" "  45541.620" "40s"
90  "1" "1813.9" " 279.1" " 1645116.61" "  506259.49" "  38948.405" "40s"
91  "1" "1850.2" " 213.8" " 1711620.02" "  395572.76" "  22855.220" "40s"
92  "1" "2067.7" " 232.6" " 2137691.64" "  480947.02" "  27051.380" "40s"
93  "1" "1796.7" " 264.8" " 1614065.45" "  475766.16" "  35059.520" "40s"
94  "1" "1625.8" " 306.9" " 1321612.82" "  498958.02" "  47093.805" "40s"
95  "1" "1667.0" " 351.1" " 1389444.50" "  585283.70" "  61635.605" "40s"
96  "1" "1677.4" " 357.8" " 1406835.38" "  600173.72" "  64010.420" "50s"
97  "1" "2289.5" " 342.1" " 2620905.12" "  783237.95" "  58516.205" "50s"
98  "1" "2159.4" " 444.2" " 2331504.18" "  959205.48" "  98656.820" "50s"
99  "1" "2031.3" " 623.6" " 2063089.84" " 1266718.68" " 194438.480" "50s"
100 "1" "2115.5" " 669.7" " 2237670.12" " 1416750.35" " 224249.045" "50s"

attr(,"class")
[1] "quadFuncEst"
> 
> ## linear estimations with panel data
> # fixed effects
> ggResultLin <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    linear = TRUE )
> coef( ggResultLin )
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-62.5943940   0.1059799   0.3466596   0.0000000   0.0000000   0.0000000 
> vcov( ggResultLin )
      a_0           a_1           a_2 b_1_1 b_1_2 b_2_2
a_0    NA            NA            NA     0     0     0
a_1    NA  0.0002525236 -0.0001425669     0     0     0
a_2    NA -0.0001425669  0.0005837614     0     0     0
b_1_1   0  0.0000000000  0.0000000000     0     0     0
b_1_2   0  0.0000000000  0.0000000000     0     0     0
b_2_2   0  0.0000000000  0.0000000000     0     0     0
> print( ggResultLin )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, linear = TRUE)

$nExog
[1] 2

$nShifter
[1] 0

$est

Model Formula: y ~ 1 + a_1 + a_2

Coefficients:
    a_1     a_2 
0.10598 0.34666 


$residuals
            1             2             3             4             5 
  66.43692240  -44.41413169 -138.64855928  -34.67156554 -120.75639572 
            6             7             8             9            10 
 -26.72126114   17.26341716   74.97677849   54.50315621   89.56231893 
           11            12            13            14            15 
  32.36377087  105.34328057    7.24729108  -59.42489451 -114.60758968 
           16            17            18            19            20 
 -60.03031849  -98.89497951  -50.57028977  102.85380934  198.18924029 
           21            22            23            24            25 
  21.77703914    9.80767734  -10.07115676   16.60800790  -12.54118118 
           26            27            28            29            30 
  -1.60946209    3.44610439    7.87493781   -8.84586147   -6.04569922 
           31            32            33            34            35 
   9.52456442  -20.62800321   -2.86543995    6.91804304   -5.30398808 
           36            37            38            39            40 
  -0.03833711   33.71060101   -3.41309563  -21.81419024  -16.49056011 
           41            42            43            44            45 
 117.30736499   37.34518474  -18.62857132   16.45529814   -8.67457139 
           46            47            48            49            50 
  25.91370428   84.21589413   66.00602573    7.17309420    8.77972170 
           51            52            53            54            55 
  12.20247917   48.09109448   55.57839914   30.06176488  -25.61090420 
           56            57            58            59            60 
 -59.43730956  -48.16167861  -72.64519666 -107.10287611 -168.86891772 
           61            62            63            64            65 
  49.91027234   28.83644843   13.12477255   15.12372921   13.49395414 
           66            67            68            69            70 
  10.67455625   36.93852280   20.68658096    0.25053930   -2.32355511 
           71            72            73            74            75 
 -12.99032759    0.94896167   13.32880943   -8.00482789  -21.08799166 
           76            77            78            79            80 
 -24.56739558   -9.39059924  -12.33680324  -39.10371421  -73.51193257 
           81            82            83            84            85 
 -45.67586383   53.73884312   52.78691009 -111.40457649 -177.97348407 
           86            87            88            89            90 
-152.52256623   37.35945125   19.68619339  -45.94113631  -93.32820169 
           91            92            93            94            95 
-104.03840176   27.99376579   45.75188499  123.26948446   14.18075812 
           96            97            98            99           100 
  24.45594774  134.42819523  169.82223888  117.00753668  -89.59697936 

$fitted
          1           2           3           4           5           6 
 251.163078  436.214132  549.248559  292.371566  451.556396  487.921261 
          7           8           9          10          11          12 
 494.736583  373.023222  445.096844  457.937681  528.836229  582.756719 
         13          14          15          16          17          18 
 561.652709  588.624895  669.707590  702.930318  854.794980  941.770290 
         19          20          21          22          23          24 
1201.546191 1288.510760   18.512961   62.952323   76.331157   34.991992 
         25          26          27          28          29          30 
  64.951181   71.019462   64.903896   38.925062   56.245861   65.615699 
         31          32          33          34          35          36 
  79.255436   94.748003   65.545440   82.441957   84.283988  100.698337 
         37          38          39          40          41          42 
 126.909399  148.413096  196.744190  188.980560  -84.207365    7.654815 
         43          44          45          46          47          48 
  95.828571   28.144702   56.774571   48.486296   28.784106   25.893974 
         49          50          51          52          53          54 
  54.126906   48.020278   81.397521  111.808906   91.621601  116.238235 
         55          56          57          58          59          60 
 123.910904  152.937310  183.361679  229.945197  286.602876  358.468918 
         61          62          63          64          65          66 
 -36.980272   -2.936448   21.925227    7.766271    5.346046   17.895444 
         67          68          69          70          71          72 
  11.571477   22.653419   36.769461   40.133555   52.260328   52.511038 
         73          74          75          76          77          78 
  42.231191   57.564828   53.127992   56.807396   63.770599   84.116803 
         79          80          81          82          83          84 
 129.183714  142.111933  255.575864  301.561157  417.113090  373.704576 
         85          86          87          88          89          90 
 408.373484  414.122566  435.440549  425.913807  407.541136  381.528202 
         91          92          93          94          95          96 
 362.738402  392.306234  374.748115  371.230516  390.919242  394.344052 
         97          98          99         100 
 453.771805  475.377761  523.992463  548.896979 

$coef
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-62.5943940   0.1059799   0.3466596   0.0000000   0.0000000   0.0000000 

$coefCov
      a_0           a_1           a_2 b_1_1 b_1_2 b_2_2
a_0    NA            NA            NA     0     0     0
a_1    NA  0.0002525236 -0.0001425669     0     0     0
a_2    NA -0.0001425669  0.0005837614     0     0     0
b_1_1   0  0.0000000000  0.0000000000     0     0     0
b_1_2   0  0.0000000000  0.0000000000     0     0     0
b_2_2   0  0.0000000000  0.0000000000     0     0     0

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$regScale
[1] 1

$model.matrix
         a_1    a_2
1   1 3078.5    2.8
2   1 4661.7   52.6
3   1 5387.1  156.9
4   1 2792.2  209.2
5   1 4313.2  203.4
6   1 4643.9  207.2
7   1 4551.2  255.2
8   1 3244.1  303.7
9   1 4053.7  264.1
10  1 4379.3  201.6
11  1 4840.9  265.0
12  1 4900.9  402.2
13  1 3526.5  761.5
14  1 3254.7  922.4
15  1 3700.2 1020.1
16  1 3755.6 1099.0
17  1 4833.0 1207.7
18  1 4924.9 1430.5
19  1 6241.7 1777.3
20  1 5593.6 2226.3
21  1  417.5   10.5
22  1  837.8   10.2
23  1  883.9   34.7
24  1  437.9   51.8
25  1  679.7   64.3
26  1  727.8   67.1
27  1  643.6   75.2
28  1  410.9   71.4
29  1  588.4   67.1
30  1  698.4   60.5
31  1  846.4   54.6
32  1  893.8   84.8
33  1  579.0   96.8
34  1  694.6  110.2
35  1  590.3  147.4
36  1  693.5  163.2
37  1  809.0  203.5
38  1  727.0  290.6
39  1 1001.5  346.1
40  1  703.2  414.9
41  1 1170.6   97.8
42  1 2015.8  104.4
43  1 2803.3  118.0
44  1 2039.7  156.2
45  1 2256.2  172.6
46  1 2132.2  186.6
47  1 1834.1  220.9
48  1 1588.0  287.8
49  1 1749.4  319.9
50  1 1687.2  321.3
51  1 2007.7  319.6
52  1 2208.3  346.0
53  1 1656.7  456.4
54  1 1604.4  543.4
55  1 1431.8  618.3
56  1 1610.5  647.4
57  1 1819.4  671.3
58  1 2079.7  726.1
59  1 2371.6  800.3
60  1 2759.9  888.9
61  1  191.5    1.8
62  1  516.0    0.8
63  1  729.0    7.4
64  1  560.4   18.1
65  1  519.9   23.5
66  1  628.5   26.5
67  1  537.1   36.2
68  1  561.2   60.8
69  1  617.2   84.4
70  1  626.7   91.2
71  1  737.2   92.4
72  1  760.5   86.0
73  1  581.4  111.1
74  1  662.3  130.6
75  1  583.8  141.8
76  1  635.2  136.7
77  1  723.8  129.7
78  1  864.1  145.5
79  1 1193.5  174.8
80  1 1188.9  213.5
81  1 1362.4   53.8
82  1 1807.1   50.5
83  1 2676.3  118.1
84  1 1801.9  260.2
85  1 1957.3  312.7
86  1 2202.9  254.2
87  1 2380.5  261.4
88  1 2168.6  298.7
89  1 1985.1  301.8
90  1 1813.9  279.1
91  1 1850.2  213.8
92  1 2067.7  232.6
93  1 1796.7  264.8
94  1 1625.8  306.9
95  1 1667.0  351.1
96  1 1677.4  357.8
97  1 2289.5  342.1
98  1 2159.4  444.2
99  1 2031.3  623.6
100 1 2115.5  669.7

attr(,"class")
[1] "quadFuncEst"
> # random effects
> ggResultLinRan <- quadFuncEst( "invest", c( "value", "capital" ), ggData,
+    linear = TRUE, model = "random", random.method = "amemiya" )
> coef( ggResultLinRan )
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-60.3474258   0.1049120   0.3460355   0.0000000   0.0000000   0.0000000 
> vcov( ggResultLinRan )
                a_0           a_1           a_2 b_1_1 b_1_2 b_2_2
a_0   3034.39093513 -0.3798442166  0.0776528438     0     0     0
a_1     -0.37984422  0.0002195270 -0.0001354551     0     0     0
a_2      0.07765284 -0.0001354551  0.0005874042     0     0     0
b_1_1    0.00000000  0.0000000000  0.0000000000     0     0     0
b_1_2    0.00000000  0.0000000000  0.0000000000     0     0     0
b_2_2    0.00000000  0.0000000000  0.0000000000     0     0     0
> print( ggResultLinRan )
$call
quadFuncEst(yName = "invest", xNames = c("value", "capital"), 
    data = ggData, linear = TRUE, model = "random", random.method = "amemiya")

$nExog
[1] 2

$nShifter
[1] 0

$est

Model Formula: y ~ 1 + a_1 + a_2

Coefficients:
(Intercept)         a_1         a_2 
  -60.34743     0.10491     0.34604 


$residuals
           1            2            3            4            5            6 
  63.1548377  -45.9743630 -139.3690085  -38.1305896 -122.5946925  -28.2040163 
           7            8            9           10           11           12 
  15.7116200   72.0593368   52.4256100   87.7934901   31.1274741  104.2566868 
          13           14           15           16           17           18 
   4.9171496  -61.9448866 -116.5908371  -61.9051604  -99.5513761  -50.9894930 
          19           20           21           22           23           24 
 104.0573156  198.9808302   25.9902438   14.4695529   -5.3447585   20.8687740 
          25           26           27           28           29           30 
  -8.0143844    2.9704505    7.9411510   12.1191016   -4.4148207   -1.5013034 
          31           32           33           34           35           36 
  14.2233342  -15.8597650    1.5740978   11.4893984   -0.8208032    4.5649207 
          37           38           39           40           41           42 
  38.4623578    1.3054484  -16.7678574  -11.7198578   90.4529980   11.3975655 
          43           44           45           46           47           48 
 -43.7266947   -9.4344689  -34.3228928    0.1416949   58.1469363   39.7159984 
          49           50           51           52           53           54 
 -18.9245330  -17.3834581  -13.6194846   22.4998370   29.4669626    3.9487713 
          55           56           57           58           59           60 
 -51.8614805  -85.4788825  -73.9652416  -98.1365725 -132.2362102 -193.5322730 
          61           62           63           64           65           66 
  49.8092510   29.0813517   13.6012675   15.4268462   13.7571894   11.0556428 
          67           68           69           70           71           72 
  37.2280528   21.0172013    0.6556934   -1.9040117  -12.4520271    1.5081511 
          73           74           75           76           77           78 
  13.7123944   -7.5226761  -20.6826838  -24.1103782   -8.8433304  -11.6298407 
          79           80           81           82           83           84 
 -38.0266840  -72.4156623  -24.1392361   75.7483273   75.7668426  -89.2697723 
          85           86           87           88           89           90 
-155.6399558 -129.9632600   60.1129184   42.2366414  -23.5847218  -71.1687867 
          91           92           93           94           95           96 
 -81.8809739   50.3952051   67.8840067  145.2453686   36.2282268   46.5187045 
          97           98           99          100 
 157.1348439  192.4536680  139.6141250  -66.8716990 

$fitted
          1           2           3           4           5           6 
 254.445162  437.774363  549.969009  295.830590  453.394692  489.404016 
          7           8           9          10          11          12 
 496.288380  375.940663  447.174390  459.706510  530.072526  583.843313 
         13          14          15          16          17          18 
 563.982850  591.144887  671.690837  704.805160  855.451376  942.189493 
         19          20          21          22          23          24 
1200.342684 1287.719170   14.299756   58.290447   71.604758   30.731226 
         25          26          27          28          29          30 
  60.424384   66.439550   60.408849   34.680898   51.814821   61.071303 
         31          32          33          34          35          36 
  74.556666   89.979765   61.105902   77.870602   79.800803   96.095079 
         37          38          39          40          41          42 
 122.157642  143.694552  191.697857  184.209858  -57.352998   33.602435 
         43          44          45          46          47          48 
 120.926695   54.034469   82.422893   74.258305   54.853064   52.184002 
         49          50          51          52          53          54 
  80.224533   74.183458  107.219485  137.400163  117.733037  142.351229 
         55          56          57          58          59          60 
 150.161481  178.978883  209.165242  255.436572  311.736210  383.132273 
         61          62          63          64          65          66 
 -36.879251   -3.181352   21.448732    7.463154    5.082811   17.514357 
         67          68          69          70          71          72 
  11.281947   22.322799   36.364307   39.714012   51.722027   51.951849 
         73          74          75          76          77          78 
  41.847606   57.082676   52.722684   56.350378   63.223330   83.409841 
         79          80          81          82          83          84 
 128.106684  141.015662  234.039236  279.551673  394.133157  351.569772 
         85          86          87          88          89          90 
 386.039956  391.563260  412.687082  403.363359  385.184722  359.368787 
         91          92          93          94          95          96 
 340.580974  369.904795  352.615993  349.254631  368.871773  372.281296 
         97          98          99         100 
 431.065156  452.746332  501.385875  526.171699 

$coef
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-60.3474258   0.1049120   0.3460355   0.0000000   0.0000000   0.0000000 

$coefCov
                a_0           a_1           a_2 b_1_1 b_1_2 b_2_2
a_0   3034.39093513 -0.3798442166  0.0776528438     0     0     0
a_1     -0.37984422  0.0002195270 -0.0001354551     0     0     0
a_2      0.07765284 -0.0001354551  0.0005874042     0     0     0
b_1_1    0.00000000  0.0000000000  0.0000000000     0     0     0
b_1_2    0.00000000  0.0000000000  0.0000000000     0     0     0
b_2_2    0.00000000  0.0000000000  0.0000000000     0     0     0

$nObs
[1] 100

$yName
[1] "invest"

$xNames
[1] "value"   "capital"

$regScale
[1] 1

$model.matrix
         a_1    a_2
1   1 3078.5    2.8
2   1 4661.7   52.6
3   1 5387.1  156.9
4   1 2792.2  209.2
5   1 4313.2  203.4
6   1 4643.9  207.2
7   1 4551.2  255.2
8   1 3244.1  303.7
9   1 4053.7  264.1
10  1 4379.3  201.6
11  1 4840.9  265.0
12  1 4900.9  402.2
13  1 3526.5  761.5
14  1 3254.7  922.4
15  1 3700.2 1020.1
16  1 3755.6 1099.0
17  1 4833.0 1207.7
18  1 4924.9 1430.5
19  1 6241.7 1777.3
20  1 5593.6 2226.3
21  1  417.5   10.5
22  1  837.8   10.2
23  1  883.9   34.7
24  1  437.9   51.8
25  1  679.7   64.3
26  1  727.8   67.1
27  1  643.6   75.2
28  1  410.9   71.4
29  1  588.4   67.1
30  1  698.4   60.5
31  1  846.4   54.6
32  1  893.8   84.8
33  1  579.0   96.8
34  1  694.6  110.2
35  1  590.3  147.4
36  1  693.5  163.2
37  1  809.0  203.5
38  1  727.0  290.6
39  1 1001.5  346.1
40  1  703.2  414.9
41  1 1170.6   97.8
42  1 2015.8  104.4
43  1 2803.3  118.0
44  1 2039.7  156.2
45  1 2256.2  172.6
46  1 2132.2  186.6
47  1 1834.1  220.9
48  1 1588.0  287.8
49  1 1749.4  319.9
50  1 1687.2  321.3
51  1 2007.7  319.6
52  1 2208.3  346.0
53  1 1656.7  456.4
54  1 1604.4  543.4
55  1 1431.8  618.3
56  1 1610.5  647.4
57  1 1819.4  671.3
58  1 2079.7  726.1
59  1 2371.6  800.3
60  1 2759.9  888.9
61  1  191.5    1.8
62  1  516.0    0.8
63  1  729.0    7.4
64  1  560.4   18.1
65  1  519.9   23.5
66  1  628.5   26.5
67  1  537.1   36.2
68  1  561.2   60.8
69  1  617.2   84.4
70  1  626.7   91.2
71  1  737.2   92.4
72  1  760.5   86.0
73  1  581.4  111.1
74  1  662.3  130.6
75  1  583.8  141.8
76  1  635.2  136.7
77  1  723.8  129.7
78  1  864.1  145.5
79  1 1193.5  174.8
80  1 1188.9  213.5
81  1 1362.4   53.8
82  1 1807.1   50.5
83  1 2676.3  118.1
84  1 1801.9  260.2
85  1 1957.3  312.7
86  1 2202.9  254.2
87  1 2380.5  261.4
88  1 2168.6  298.7
89  1 1985.1  301.8
90  1 1813.9  279.1
91  1 1850.2  213.8
92  1 2067.7  232.6
93  1 1796.7  264.8
94  1 1625.8  306.9
95  1 1667.0  351.1
96  1 1677.4  357.8
97  1 2289.5  342.1
98  1 2159.4  444.2
99  1 2031.3  623.6
100 1 2115.5  669.7

attr(,"class")
[1] "quadFuncEst"
> 
> ## compute partial derivatives of linear estimation results with panel data
> # fixed effects
> margProducts <- quadFuncDeriv( c( "value", "capital" ),
+    data = ggData, coef = coef( ggResultLin ), coefCov = vcov( ggResultLin ) )
> sd( margProducts )
  value capital 
      0       0 
> all.equal( margProducts[1,], coef( ggResultLin )[2:3],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( attributes( margProducts )$variance[1,], diag( vcov( ggResultLin ) )[2:3], 
+    check.attributes = FALSE )
[1] TRUE
> # random effects
> margProducts <- quadFuncDeriv( c( "value", "capital" ),
+    data = ggData, coef = coef( ggResultLinRan ), coefCov = vcov( ggResultLinRan ) )
> sd( margProducts )
  value capital 
      0       0 
> all.equal( margProducts[1,], coef( ggResultLinRan )[2:3],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( attributes( margProducts )$variance[1,], diag( vcov( ggResultLinRan ) )[2:3], 
+    check.attributes = FALSE )
[1] TRUE
> 
> ## compute elasticities using results of estimations with panel data
> ggElaObs <- quadFuncEla( xNames = c( "value", "capital" ), 
+    data = ggData, coef = coef( ggResult ), yName = "invest" )
> all.equal( ggElaObs, elas( ggResult, yObs = TRUE ) )
[1] TRUE
> print( ggElaObs )
        value     capital
1   0.7200732 0.001797085
2   1.0443105 0.034583203
3   1.2647724 0.111677327
4   0.8487150 0.179098239
5   1.1691738 0.163350952
6   0.9292555 0.124033790
7   0.8269459 0.139163346
8   0.6125715 0.166656102
9   0.7264477 0.140257690
10  0.7208109 0.098474092
11  0.8239314 0.136523454
12  0.7129442 0.179914351
13  0.6230114 0.415830588
14  0.6352468 0.561728639
15  0.7305751 0.638960038
16  0.6565624 0.613811545
17  0.7916636 0.646841383
18  0.7251296 0.698288643
19  0.7255170 0.704863098
20  0.6028237 0.828186529
21  0.5634661 0.032506069
22  0.6626490 0.019253057
23  0.7821810 0.074228215
24  0.4733149 0.130930618
25  0.7519314 0.170825738
26  0.6126473 0.136335650
27  0.5464644 0.153472329
28  0.4930661 0.201421337
29  0.7121961 0.193705593
30  0.6800732 0.141507940
31  0.5620070 0.087982081
32  0.7261467 0.169555277
33  0.5375710 0.216527881
34  0.4622891 0.179226311
35  0.4469699 0.273918570
36  0.4206713 0.246145536
37  0.3180509 0.203034628
38  0.3266285 0.337699496
39  0.3944264 0.363228870
40  0.2800956 0.440365657
41  2.2175440 0.467217812
42  3.1043363 0.427734166
43  2.7477612 0.320577382
44  3.2488600 0.670538929
45  3.4322253 0.717639310
46  2.0821695 0.496553542
47  1.1593722 0.377746838
48  1.2368671 0.607731851
49  2.1051852 1.058671787
50  2.1784543 1.137934426
51  1.6240317 0.719097945
52  1.0775780 0.475793084
53  0.8685505 0.672412234
54  0.8706684 0.839424215
55  1.1702054 1.446813272
56  1.4222090 1.654691517
57  1.1420889 1.232382067
58  1.1699204 1.212975206
59  1.2278147 1.251435144
60  1.4343173 1.421807313
61  0.7761250 0.016268322
62  1.0923653 0.003907352
63  1.1780663 0.028232045
64  1.3633351 0.102768021
65  1.5327234 0.161419692
66  1.2419260 0.123407147
67  0.6206347 0.098123115
68  0.7377858 0.189725551
69  0.9688337 0.318791335
70  0.9677747 0.339985734
71  1.1124690 0.339822356
72  0.8427820 0.232193785
73  0.6136666 0.284024341
74  0.7997117 0.387031987
75  1.0857015 0.645653812
76  1.1786057 0.622467394
77  0.8023427 0.354445382
78  0.7441807 0.313733045
79  0.8637695 0.326565852
80  1.1494361 0.538145839
81  0.4078218 0.040621750
82  0.3361860 0.024369951
83  0.4255206 0.051755174
84  0.4971419 0.195522123
85  0.6381960 0.282616491
86  0.6334452 0.202530430
87  0.3866009 0.118677840
88  0.3713406 0.142692895
89  0.4117687 0.173376109
90  0.4596285 0.193478007
91  0.5102024 0.159374728
92  0.3618349 0.111624414
93  0.3096360 0.124377029
94  0.2381663 0.122603177
95  0.3048492 0.177001316
96  0.2978392 0.175449884
97  0.3056428 0.129026464
98  0.2697918 0.158686700
99  0.2694811 0.241957702
100 0.4010016 0.374602694
> ggElaObsRan <- quadFuncEla( xNames = c( "value", "capital" ), 
+    data = ggData, coef = coef( ggResultRan ), yName = "invest" )
> all.equal( ggElaObsRan, elas( ggResultRan, yObs = TRUE ) )
[1] TRUE
> print( ggElaObsRan )
        value     capital
1   0.7523671 0.001809458
2   1.0398076 0.035072952
3   1.2391651 0.113329598
4   0.8957097 0.179151672
5   1.1781649 0.164859965
6   0.9282923 0.125359824
7   0.8287299 0.140459240
8   0.6372138 0.166899600
9   0.7378452 0.141203089
10  0.7250393 0.099418455
11  0.8198157 0.137943673
12  0.7100419 0.181379944
13  0.6443275 0.414248019
14  0.6619326 0.557718653
15  0.7534057 0.635227650
16  0.6765120 0.609903352
17  0.7980989 0.645112018
18  0.7313898 0.695233465
19  0.7184422 0.703013436
20  0.6057192 0.821737316
21  0.6640799 0.031785637
22  0.7628670 0.018957255
23  0.8973223 0.073105202
24  0.5558447 0.128007982
25  0.8708025 0.167648498
26  0.7075952 0.133892655
27  0.6337450 0.150509479
28  0.5792844 0.196786307
29  0.8287419 0.189821589
30  0.7869403 0.138923990
31  0.6454457 0.086574492
32  0.8308839 0.166871542
33  0.6249315 0.212069692
34  0.5338131 0.175816329
35  0.5180394 0.268155283
36  0.4846510 0.241287983
37  0.3637483 0.199245198
38  0.3737799 0.330694789
39  0.4450016 0.356682614
40  0.3194542 0.430576385
41  2.5020081 0.461391508
42  3.3745349 0.426139873
43  2.8991472 0.321307340
44  3.5257803 0.667477519
45  3.6931507 0.715455153
46  2.2507128 0.494391830
47  1.2672678 0.374866435
48  1.3637033 0.601013745
49  2.3050666 1.048060843
50  2.3909862 1.125851768
51  1.7610007 0.713530011
52  1.1597048 0.472691914
53  0.9522614 0.663830616
54  0.9550898 0.827444263
55  1.2900425 1.422801205
56  1.5573379 1.629309556
57  1.2414359 1.215279003
58  1.2604188 1.197847760
59  1.3105486 1.237415044
60  1.5139503 1.408096378
61  0.9277354 0.015839842
62  1.2808113 0.003827988
63  1.3644139 0.027753422
64  1.5929665 0.100731679
65  1.7944605 0.158099846
66  1.4449646 0.121082933
67  0.7254123 0.096115930
68  0.8600729 0.185855473
69  1.1246611 0.312467541
70  1.1224930 0.333259869
71  1.2827734 0.333653106
72  0.9709017 0.228078711
73  0.7128032 0.278135606
74  0.9241336 0.379380588
75  1.2590869 0.632049306
76  1.3635075 0.609865717
77  0.9242890 0.347757417
78  0.8507292 0.308352402
79  0.9712003 0.322162123
80  1.2911947 0.530539726
81  0.4566081 0.040241498
82  0.3689780 0.024259327
83  0.4509964 0.051825497
84  0.5437564 0.193842200
85  0.6933760 0.280337578
86  0.6824291 0.201515509
87  0.4138059 0.118235725
88  0.4003859 0.141827998
89  0.4469690 0.172050077
90  0.5023405 0.191776882
91  0.5573905 0.158203064
92  0.3918780 0.110981844
93  0.3387130 0.123292981
94  0.2620994 0.121256971
95  0.3346814 0.175011127
96  0.3268176 0.173477108
97  0.3280099 0.128276115
98  0.2905968 0.157355251
99  0.2910346 0.239127681
100 0.4317307 0.370261132
> # with shifter variables
> ggShifterElaObs <- quadFuncEla( xNames = c( "value", "capital" ), 
+    data = ggData, coef = coef( ggResShifter ), yName = "invest" )
> all.equal( ggShifterElaObs, elas( ggResShifter, yObs = TRUE ) )
[1] TRUE
> print( ggShifterElaObs )
        value     capital
1   0.7189130 0.001797861
2   1.0433909 0.034625183
3   1.2641855 0.111817026
4   0.8477111 0.179029433
5   1.1683842 0.163451763
6   0.9287242 0.124130347
7   0.8265278 0.139248338
8   0.6120820 0.166608696
9   0.7259900 0.140302553
10  0.7203356 0.098538793
11  0.8235936 0.136623181
12  0.7128320 0.179994220
13  0.6230877 0.415421747
14  0.6354458 0.560947748
15  0.7309602 0.638158472
16  0.6569811 0.612998388
17  0.7923836 0.646252217
18  0.7259613 0.697500980
19  0.7266415 0.704193600
20  0.6039272 0.826881569
21  0.5616399 0.032416019
22  0.6607242 0.019214141
23  0.7800171 0.074078849
24  0.4718796 0.130561597
25  0.7498321 0.170413146
26  0.6109657 0.136016377
27  0.5449493 0.153088565
28  0.4916036 0.200835520
29  0.7101677 0.193206261
30  0.6781730 0.141171822
31  0.5604834 0.087795443
32  0.7242906 0.169195606
33  0.5361039 0.215952644
34  0.4610909 0.178779799
35  0.4458456 0.273168846
36  0.4196679 0.245505474
37  0.3173627 0.202526695
38  0.3260050 0.336762384
39  0.3937997 0.362323873
40  0.2796681 0.439048178
41  2.2123872 0.466397179
42  3.0986742 0.427396458
43  2.7438719 0.320536136
44  3.2434850 0.669931258
45  3.4270570 0.717105788
46  2.0789992 0.496108959
47  1.1575614 0.377265230
48  1.2350333 0.606707495
49  2.1024042 1.056997729
50  2.1755263 1.136058263
51  1.6220607 0.718145392
52  1.0764279 0.475224328
53  0.8676788 0.671111497
54  0.8699603 0.837636329
55  1.1693861 1.443321413
56  1.4213878 1.650923361
57  1.1415602 1.229774262
58  1.1695924 1.210589198
59  1.2277287 1.249137246
60  1.4345532 1.419429413
61  0.7734214 0.016215893
62  1.0888657 0.003897353
63  1.1745310 0.028170096
64  1.3591264 0.102509319
65  1.5279793 0.160999326
66  1.2382065 0.123109083
67  0.6187580 0.097867878
68  0.7356491 0.189229992
69  0.9661664 0.317973532
70  0.9651444 0.339114130
71  1.1095387 0.339012287
72  0.8405540 0.231652311
73  0.6120293 0.283262739
74  0.7976863 0.386031141
75  1.0829417 0.643886498
76  1.1756273 0.620822614
77  0.8003412 0.353564492
78  0.7424378 0.313010569
79  0.8620086 0.325942340
80  1.1472391 0.537069584
81  0.4068564 0.040565409
82  0.3354759 0.024349183
83  0.4248950 0.051743232
84  0.4964142 0.195248652
85  0.6373966 0.282232594
86  0.6326183 0.202328934
87  0.3861318 0.118576577
88  0.3708940 0.142531877
89  0.4112459 0.173149353
90  0.4589825 0.193201671
91  0.5093988 0.159176869
92  0.3613203 0.111504935
93  0.3091860 0.124201121
94  0.2378302 0.122396677
95  0.3044615 0.176695180
96  0.2974671 0.175146030
97  0.3053231 0.128882597
98  0.2695625 0.158458813
99  0.2693468 0.241508459
100 0.4008490 0.373907906
> ggShifterElaObs2 <- quadFuncEla( xNames = c( "value", "capital" ), 
+    data = ggData, coef = coef( ggResShifter ), yName = "invest",
+    shifterNames = "tech" )
> all.equal( ggShifterElaObs, ggShifterElaObs2 )
[1] TRUE
> ggShifterElaObsRan <- quadFuncEla( xNames = c( "value", "capital" ), 
+    data = ggData, coef = coef( ggResShifterRan ), yName = "invest" )
> all.equal( ggShifterElaObsRan, elas( ggResShifterRan, yObs = TRUE ) )
[1] TRUE
> print( ggShifterElaObsRan )
        value     capital
1   0.7594593 0.001803833
2   1.0458271 0.034779610
3   1.2432572 0.112356901
4   0.9014855 0.179608307
5   1.1830649 0.164151012
6   0.9316754 0.124683970
7   0.8313309 0.139863041
8   0.6399610 0.167214234
9   0.7405736 0.140883229
10  0.7280044 0.098964007
11  0.8219768 0.137246575
12  0.7106941 0.180820870
13  0.6433364 0.417068532
14  0.6600291 0.563116854
15  0.7502991 0.640776513
16  0.6732424 0.615536250
17  0.7930063 0.649205648
18  0.7255649 0.700710904
19  0.7108755 0.707688525
20  0.5981543 0.830828317
21  0.6745412 0.032398801
22  0.7739744 0.019221412
23  0.9097610 0.074120019
24  0.5640039 0.130524362
25  0.8827536 0.170459635
26  0.7171709 0.136067599
27  0.6423448 0.153125843
28  0.5875600 0.200784188
29  0.8402645 0.193225814
30  0.7977701 0.141213471
31  0.6541629 0.087844199
32  0.8414437 0.169320991
33  0.6332104 0.215995711
34  0.5405671 0.178863551
35  0.5243085 0.273279969
36  0.4902322 0.245663445
37  0.3675403 0.202720000
38  0.3771135 0.337120232
39  0.4482858 0.362891563
40  0.3216119 0.439629860
41  2.5314126 0.466972438
42  3.4073761 0.428407784
43  2.9221419 0.321552380
44  3.5565579 0.671583572
45  3.7227697 0.719050163
46  2.2687458 0.497400340
47  1.2773829 0.378145757
48  1.3736446 0.608019432
49  2.3199711 1.059514910
50  2.4066523 1.138692343
51  1.7716140 0.720039649
52  1.1658347 0.476578884
53  0.9565439 0.672764479
54  0.9582639 0.839743803
55  1.2933162 1.446850389
56  1.5603207 1.655269226
57  1.2431062 1.233248940
58  1.2608840 1.214299513
59  1.3095086 1.253272857
60  1.5107625 1.424523536
61  0.9431908 0.016197173
62  1.3009279 0.003895999
63  1.3847857 0.028174259
64  1.6170991 0.102492211
65  1.8216165 0.160961934
66  1.4662824 0.123111151
67  0.7361311 0.097854449
68  0.8722210 0.189233672
69  1.1397644 0.318045671
70  1.1373662 0.339206124
71  1.2993702 0.339176678
72  0.9835440 0.231769441
73  0.7220127 0.283335946
74  0.9354886 0.386216444
75  1.2744963 0.644127981
76  1.3801723 0.621103040
77  0.9355237 0.353772217
78  0.8604971 0.313285054
79  0.9810497 0.326416729
80  1.3033413 0.537894195
81  0.4621883 0.040622778
82  0.3731258 0.024398494
83  0.4546803 0.051901377
84  0.5477612 0.195708440
85  0.6976907 0.282961029
86  0.6870310 0.202885537
87  0.4164208 0.118923101
88  0.4028227 0.142926176
89  0.4498073 0.173598709
90  0.5058693 0.193664103
91  0.5618915 0.159549558
92  0.3947562 0.111794181
93  0.3411845 0.124493709
94  0.2639078 0.122669938
95  0.3367243 0.177108382
96  0.3287717 0.175559061
97  0.3297204 0.129258672
98  0.2917346 0.158918381
99  0.2915236 0.242221074
100 0.4321637 0.375048287
> 
> ## imposing homogeneity on linear functions with panel data
> ggResultLinHom <- quadFuncEst( "invest", 
+    xNames = c( "value", "capital" ), data = ggData,
+    linear = TRUE, homWeights = c( value = 0.3, capital = 0.7 ) )
> coef( ggResultLinHom )
      a_0       a_1       a_2     b_1_1     b_1_2     b_2_2 
 515.5525 -123.3956  123.3956    0.0000    0.0000    0.0000 
> all.equal( coef( ggResultLinHom )[2], - coef( ggResultLinHom )[3],
+    check.attributes = FALSE )
[1] TRUE
> vcov( ggResultLinHom )
      a_0       a_1       a_2 b_1_1 b_1_2 b_2_2
a_0    NA        NA        NA     0     0     0
a_1    NA  474.9821 -474.9821     0     0     0
a_2    NA -474.9821  474.9821     0     0     0
b_1_1   0    0.0000    0.0000     0     0     0
b_1_2   0    0.0000    0.0000     0     0     0
b_2_2   0    0.0000    0.0000     0     0     0
> all.equal( vcov( ggResultLinHom )[ -1, 2 ], 
+    - vcov( ggResultLinHom )[ -1, 3 ] )
[1] TRUE
> all.equal( vcov( ggResultLinHom )[ 2, -1 ], 
+    - vcov( ggResultLinHom )[ 3, -1 ] )
[1] TRUE
> 
> ## imposing homogeneity on quadratic functions with panel data
> ggResultHom <- quadFuncEst( "invest", 
+    xNames = c( "value", "capital" ), data = ggData,
+    homWeights = c( value = 0.3, capital = 0.7 ) )
> coef( ggResultHom )
       a_0        a_1        a_2      b_1_1      b_1_2      b_2_2 
 627.08756 -239.46789  239.46789   54.95271  -54.95271   54.95271 
> all.equal( coef( ggResultHom )[2], - coef( ggResultHom )[3],
+    check.attributes = FALSE ) # a_1:2
[1] TRUE
> all.equal( coef( ggResultHom )[4], - coef( ggResultHom )[5],
+    check.attributes = FALSE ) # b_1_1:2
[1] TRUE
> all.equal( coef( ggResultHom )[5], - coef( ggResultHom )[6],
+    check.attributes = FALSE ) # b_2_1:2
[1] TRUE
> vcov( ggResultHom )
      a_0        a_1        a_2     b_1_1     b_1_2     b_2_2
a_0    NA         NA         NA        NA        NA        NA
a_1    NA  17696.847 -17696.847 -8152.917  8152.917 -8152.917
a_2    NA -17696.847  17696.847  8152.917 -8152.917  8152.917
b_1_1  NA  -8152.917   8152.917  3859.879 -3859.879  3859.879
b_1_2  NA   8152.917  -8152.917 -3859.879  3859.879 -3859.879
b_2_2  NA  -8152.917   8152.917  3859.879 -3859.879  3859.879
> all.equal( vcov( ggResultHom )[ -1, 2 ], 
+    - vcov( ggResultHom )[ -1, 3 ] ) # a_1:2
[1] TRUE
> all.equal( vcov( ggResultHom )[ -1, 4 ], 
+    - vcov( ggResultHom )[ -1, 5 ] ) # b_1_1:2
[1] TRUE
> all.equal( vcov( ggResultHom )[ -1, 5 ], 
+    - vcov( ggResultHom )[ -1, 6 ] ) # b_2_1:2
[1] TRUE
> all.equal( vcov( ggResultHom )[ 2, -1 ], 
+    - vcov( ggResultHom )[ 3, -1 ] ) # a_1:2
[1] TRUE
> all.equal( vcov( ggResultHom )[ 4, -1 ], 
+    - vcov( ggResultHom )[ 5, -1 ] ) # b_1_1:2
[1] TRUE
> all.equal( vcov( ggResultHom )[ 5, -1 ], 
+    - vcov( ggResultHom )[ 6, -1 ] ) # b_2_1:2
[1] TRUE
> 
> ########## many coefficients ##############
> set.seed( 123 )
> nObs <- 200
> testData <- data.frame( y = rep( 3, nObs ) )
> for( i in 1:15 ) {
+    xName <- paste( "x", i, sep = "_" )
+    testData[[ xName ]] <- rnorm( nObs )
+    testData$y <- testData$y + log( i + 1 ) * testData[[ xName ]]
+ }
> testResult <- quadFuncEst( yName = "y",
+    xNames = paste( "x", 1:15, sep = "_" ),
+    data = testData, linear = TRUE )
> coef( testResult )
      a_0       a_1       a_2       a_3       a_4       a_5       a_6       a_7 
3.0000000 0.6931472 1.0986123 1.3862944 1.6094379 1.7917595 1.9459101 2.0794415 
      a_8       a_9      a_10      a_11      a_12      a_13      a_14      a_15 
2.1972246 2.3025851 2.3978953 2.4849066 2.5649494 2.6390573 2.7080502 2.7725887 
    b_1_1     b_1_2     b_1_3     b_1_4     b_1_5     b_1_6     b_1_7     b_1_8 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
    b_1_9    b_1_10    b_1_11    b_1_12    b_1_13    b_1_14    b_1_15     b_2_2 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
    b_2_3     b_2_4     b_2_5     b_2_6     b_2_7     b_2_8     b_2_9    b_2_10 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_2_11    b_2_12    b_2_13    b_2_14    b_2_15     b_3_3     b_3_4     b_3_5 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
    b_3_6     b_3_7     b_3_8     b_3_9    b_3_10    b_3_11    b_3_12    b_3_13 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_3_14    b_3_15     b_4_4     b_4_5     b_4_6     b_4_7     b_4_8     b_4_9 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_4_10    b_4_11    b_4_12    b_4_13    b_4_14    b_4_15     b_5_5     b_5_6 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
    b_5_7     b_5_8     b_5_9    b_5_10    b_5_11    b_5_12    b_5_13    b_5_14 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_5_15     b_6_6     b_6_7     b_6_8     b_6_9    b_6_10    b_6_11    b_6_12 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_6_13    b_6_14    b_6_15     b_7_7     b_7_8     b_7_9    b_7_10    b_7_11 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_7_12    b_7_13    b_7_14    b_7_15     b_8_8     b_8_9    b_8_10    b_8_11 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_8_12    b_8_13    b_8_14    b_8_15     b_9_9    b_9_10    b_9_11    b_9_12 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
   b_9_13    b_9_14    b_9_15   b_10_10   b_10_11   b_10_12   b_10_13   b_10_14 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
  b_10_15   b_11_11   b_11_12   b_11_13   b_11_14   b_11_15   b_12_12   b_12_13 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
  b_12_14   b_12_15   b_13_13   b_13_14   b_13_15   b_14_14   b_14_15   b_15_15 
0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 
> rownames( vcov( testResult ) )
  [1] "a_0"     "a_1"     "a_2"     "a_3"     "a_4"     "a_5"     "a_6"    
  [8] "a_7"     "a_8"     "a_9"     "a_10"    "a_11"    "a_12"    "a_13"   
 [15] "a_14"    "a_15"    "b_1_1"   "b_1_2"   "b_1_3"   "b_1_4"   "b_1_5"  
 [22] "b_1_6"   "b_1_7"   "b_1_8"   "b_1_9"   "b_1_10"  "b_1_11"  "b_1_12" 
 [29] "b_1_13"  "b_1_14"  "b_1_15"  "b_2_2"   "b_2_3"   "b_2_4"   "b_2_5"  
 [36] "b_2_6"   "b_2_7"   "b_2_8"   "b_2_9"   "b_2_10"  "b_2_11"  "b_2_12" 
 [43] "b_2_13"  "b_2_14"  "b_2_15"  "b_3_3"   "b_3_4"   "b_3_5"   "b_3_6"  
 [50] "b_3_7"   "b_3_8"   "b_3_9"   "b_3_10"  "b_3_11"  "b_3_12"  "b_3_13" 
 [57] "b_3_14"  "b_3_15"  "b_4_4"   "b_4_5"   "b_4_6"   "b_4_7"   "b_4_8"  
 [64] "b_4_9"   "b_4_10"  "b_4_11"  "b_4_12"  "b_4_13"  "b_4_14"  "b_4_15" 
 [71] "b_5_5"   "b_5_6"   "b_5_7"   "b_5_8"   "b_5_9"   "b_5_10"  "b_5_11" 
 [78] "b_5_12"  "b_5_13"  "b_5_14"  "b_5_15"  "b_6_6"   "b_6_7"   "b_6_8"  
 [85] "b_6_9"   "b_6_10"  "b_6_11"  "b_6_12"  "b_6_13"  "b_6_14"  "b_6_15" 
 [92] "b_7_7"   "b_7_8"   "b_7_9"   "b_7_10"  "b_7_11"  "b_7_12"  "b_7_13" 
 [99] "b_7_14"  "b_7_15"  "b_8_8"   "b_8_9"   "b_8_10"  "b_8_11"  "b_8_12" 
[106] "b_8_13"  "b_8_14"  "b_8_15"  "b_9_9"   "b_9_10"  "b_9_11"  "b_9_12" 
[113] "b_9_13"  "b_9_14"  "b_9_15"  "b_10_10" "b_10_11" "b_10_12" "b_10_13"
[120] "b_10_14" "b_10_15" "b_11_11" "b_11_12" "b_11_13" "b_11_14" "b_11_15"
[127] "b_12_12" "b_12_13" "b_12_14" "b_12_15" "b_13_13" "b_13_14" "b_13_15"
[134] "b_14_14" "b_14_15" "b_15_15"
> colnames( vcov( testResult ) )
  [1] "a_0"     "a_1"     "a_2"     "a_3"     "a_4"     "a_5"     "a_6"    
  [8] "a_7"     "a_8"     "a_9"     "a_10"    "a_11"    "a_12"    "a_13"   
 [15] "a_14"    "a_15"    "b_1_1"   "b_1_2"   "b_1_3"   "b_1_4"   "b_1_5"  
 [22] "b_1_6"   "b_1_7"   "b_1_8"   "b_1_9"   "b_1_10"  "b_1_11"  "b_1_12" 
 [29] "b_1_13"  "b_1_14"  "b_1_15"  "b_2_2"   "b_2_3"   "b_2_4"   "b_2_5"  
 [36] "b_2_6"   "b_2_7"   "b_2_8"   "b_2_9"   "b_2_10"  "b_2_11"  "b_2_12" 
 [43] "b_2_13"  "b_2_14"  "b_2_15"  "b_3_3"   "b_3_4"   "b_3_5"   "b_3_6"  
 [50] "b_3_7"   "b_3_8"   "b_3_9"   "b_3_10"  "b_3_11"  "b_3_12"  "b_3_13" 
 [57] "b_3_14"  "b_3_15"  "b_4_4"   "b_4_5"   "b_4_6"   "b_4_7"   "b_4_8"  
 [64] "b_4_9"   "b_4_10"  "b_4_11"  "b_4_12"  "b_4_13"  "b_4_14"  "b_4_15" 
 [71] "b_5_5"   "b_5_6"   "b_5_7"   "b_5_8"   "b_5_9"   "b_5_10"  "b_5_11" 
 [78] "b_5_12"  "b_5_13"  "b_5_14"  "b_5_15"  "b_6_6"   "b_6_7"   "b_6_8"  
 [85] "b_6_9"   "b_6_10"  "b_6_11"  "b_6_12"  "b_6_13"  "b_6_14"  "b_6_15" 
 [92] "b_7_7"   "b_7_8"   "b_7_9"   "b_7_10"  "b_7_11"  "b_7_12"  "b_7_13" 
 [99] "b_7_14"  "b_7_15"  "b_8_8"   "b_8_9"   "b_8_10"  "b_8_11"  "b_8_12" 
[106] "b_8_13"  "b_8_14"  "b_8_15"  "b_9_9"   "b_9_10"  "b_9_11"  "b_9_12" 
[113] "b_9_13"  "b_9_14"  "b_9_15"  "b_10_10" "b_10_11" "b_10_12" "b_10_13"
[120] "b_10_14" "b_10_15" "b_11_11" "b_11_12" "b_11_13" "b_11_14" "b_11_15"
[127] "b_12_12" "b_12_13" "b_12_14" "b_12_15" "b_13_13" "b_13_14" "b_13_15"
[134] "b_14_14" "b_14_15" "b_15_15"
> 
> ########## scaling regressors ###########
> germanFarms$landAr <- germanFarms$land * 100
> germanFarms$timeCent <- germanFarms$time / 100
> germanFarmsMeans <- colMeans( germanFarms[ ,
+    - which( names( germanFarms ) %in% c( "year", "decade" ) ) ] )
> 
> ## standard quadratic function
> # estimation
> estResultAr <- quadFuncEst( "qOutput",
+    xNames = c( "qLabor", "landAr", "qVarInput", "time" ), data = germanFarms )
> print( coef( estResult ) / coef( estResultAr ) )
  a_0   a_1   a_2   a_3   a_4 b_1_1 b_1_2 b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 
    1     1   100     1     1     1   100     1     1 10000   100   100     1 
b_3_4 b_4_4 
    1     1 
> # fitted values
> fitted <- quadFuncCalc( xNames = c( "qLabor", "landAr", "qVarInput", "time" ),
+    data = germanFarms, coef = coef( estResultAr ) )
> all.equal( fitted, estResult$fitted )
[1] TRUE
> # derivatives
> margProductsMeanAr <- quadFuncDeriv(
+    xNames = c( "qLabor", "landAr", "qVarInput", "time" ),
+    data = germanFarmsMeans, coef = coef( estResultAr ),
+    coefCov = vcov( estResultAr ) )
> print( margProductsMean / margProductsMeanAr )
  qLabor land qVarInput time
1      1  100         1    1
> print( attributes( margProductsMean )$variance / attributes( margProductsMeanAr )$variance )
  qLabor  land qVarInput time
1      1 10000         1    1
> print( attributes( margProductsMean )$stdDev / attributes( margProductsMeanAr )$stdDev )
  qLabor land qVarInput time
1      1  100         1    1
> # elasticities
> estElaFitAr <- elas( estResultAr )
> all.equal( estElaFit, estElaFitAr, check.attributes = FALSE )
[1] TRUE
> estElaObsAr <- elas( estResultAr, yObs = TRUE )
> all.equal( estElaObs, estElaObsAr, check.attributes = FALSE )
[1] TRUE
> 
> ## estimation with homogeneity imposed (non-homogenous variable scaled)
> # estimation
> estResultHomCent <- quadFuncEst( yName = "qOutput",
+    xNames = c( "timeCent", "qLabor", "land", "qVarInput" ),
+    data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> print( coef( estResultHomCent ) / coef( estResultHom ) )
  a_0   a_1   a_2   a_3   a_4 b_1_1 b_1_2 b_1_3 b_1_4 b_2_2 b_2_3 b_2_4 b_3_3 
    1   100     1     1     1 10000   100   100   100     1     1     1     1 
b_3_4 b_4_4 
    1     1 
> # fitted values
> fitted <- quadFuncCalc(
+    xNames = c( "timeCent", "qLabor", "land", "qVarInput" ),
+    data = germanFarms, coef( estResultHomCent ),
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> all.equal( fitted, estResultHom$fitted )
[1] TRUE
> # derivatives
> estResultHomDerivCent <- quadFuncDeriv(
+    xNames = c( "timeCent", "qLabor", "land", "qVarInput" ),
+    coef = coef( estResultHomCent ), data = germanFarms,
+    homWeights = c( qLabor = 0.7, land = 0.1, qVarInput = 0.2 ) )
> print( estResultHomDerivCent / estResultHomDeriv )
   timeCent qLabor land qVarInput
1       100      1    1         1
2       100      1    1         1
3       100      1    1         1
4       100      1    1         1
5       100      1    1         1
6       100      1    1         1
7       100      1    1         1
8       100      1    1         1
9       100      1    1         1
10      100      1    1         1
11      100      1    1         1
12      100      1    1         1
13      100      1    1         1
14      100      1    1         1
15      100      1    1         1
16      100      1    1         1
17      100      1    1         1
18      100      1    1         1
19      100      1    1         1
20      100      1    1         1
> # elasticities
> estResultHomElaCent <- elas( estResultHomCent )
> all.equal( estResultHomEla, estResultHomElaCent, check.attributes = FALSE )
[1] TRUE
> estResultHomElaObsCent <- elas( estResultHomCent, yObs = TRUE )
> all.equal( estResultHomElaObs, estResultHomElaObsCent, check.attributes = FALSE )
[1] TRUE
> 
